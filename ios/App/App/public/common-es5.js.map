{"version":3,"mappings":"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","names":["clearActiveButton","setActiveButton","currentTouchedButton","initialTouchedButton","hapticFeedbackFn","el","gestureName","threshold","onStart","_haptic_27b3f981_js__WEBPACK_IMPORTED_MODULE_1__","onMove","onEnd","attachComponent","delegate","container","component","cssClasses","componentProps","attachViewToDom","HTMLElement","Error","ownerDocument","createElement","forEach","c","classList","add","Object","assign","appendChild","Promise","resolve","componentOnReady","detachComponent","element","parentElement","removeViewFromDom","remove","getEngine","available","isCordova","isCapacitor","impact","options","engine","style","notification","selection","selectionStart","selectionChanged","selectionEnd","HapticEngine","dur","circles","fn","r","elmDuration","cx","cy","fill","viewBox","transform","lines","y1","y2","hostContext","selector","closest","createColorClasses","color","cssClassMap","length","getClassList","classes","undefined","array","Array","isArray","split","filter","map","trim","getClassMap","SCHEME","openURL","url","ev","direction","animation","test","router","document","querySelector","preventDefault","push","ArrayHelper","item","fromIndex","toIndex","arrayCopy","splice"],"sources":["webpack:///node_modules/@ionic/core/dist/esm/button-active-d4bd4f74.js","webpack:///node_modules/@ionic/core/dist/esm/framework-delegate-4392cd63.js","webpack:///node_modules/@ionic/core/dist/esm/haptic-27b3f981.js","webpack:///node_modules/@ionic/core/dist/esm/spinner-configs-cd7845af.js","webpack:///node_modules/@ionic/core/dist/esm/theme-ff3fc52f.js","webpack:///src/app/core/helpers/array-helper.ts"],"sourcesContent":["import { c as writeTask } from './index-7a8b7a1c.js';\nimport { h as hapticSelectionEnd, a as hapticSelectionStart, b as hapticSelectionChanged } from './haptic-27b3f981.js';\nimport { createGesture } from './index-34cb2743.js';\n\nconst createButtonActiveGesture = (el, isButton) => {\n  let currentTouchedButton;\n  let initialTouchedButton;\n  const activateButtonAtPoint = (x, y, hapticFeedbackFn) => {\n    if (typeof document === 'undefined') {\n      return;\n    }\n    const target = document.elementFromPoint(x, y);\n    if (!target || !isButton(target)) {\n      clearActiveButton();\n      return;\n    }\n    if (target !== currentTouchedButton) {\n      clearActiveButton();\n      setActiveButton(target, hapticFeedbackFn);\n    }\n  };\n  const setActiveButton = (button, hapticFeedbackFn) => {\n    currentTouchedButton = button;\n    if (!initialTouchedButton) {\n      initialTouchedButton = currentTouchedButton;\n    }\n    const buttonToModify = currentTouchedButton;\n    writeTask(() => buttonToModify.classList.add('ion-activated'));\n    hapticFeedbackFn();\n  };\n  const clearActiveButton = (dispatchClick = false) => {\n    if (!currentTouchedButton) {\n      return;\n    }\n    const buttonToModify = currentTouchedButton;\n    writeTask(() => buttonToModify.classList.remove('ion-activated'));\n    /**\n     * Clicking on one button, but releasing on another button\n     * does not dispatch a click event in browsers, so we\n     * need to do it manually here. Some browsers will\n     * dispatch a click if clicking on one button, dragging over\n     * another button, and releasing on the original button. In that\n     * case, we need to make sure we do not cause a double click there.\n     */\n    if (dispatchClick && initialTouchedButton !== currentTouchedButton) {\n      currentTouchedButton.click();\n    }\n    currentTouchedButton = undefined;\n  };\n  return createGesture({\n    el,\n    gestureName: 'buttonActiveDrag',\n    threshold: 0,\n    onStart: ev => activateButtonAtPoint(ev.currentX, ev.currentY, hapticSelectionStart),\n    onMove: ev => activateButtonAtPoint(ev.currentX, ev.currentY, hapticSelectionChanged),\n    onEnd: () => {\n      clearActiveButton(true);\n      hapticSelectionEnd();\n      initialTouchedButton = undefined;\n    }\n  });\n};\n\nexport { createButtonActiveGesture as c };\n","import { c as componentOnReady } from './helpers-dd7e4b7b.js';\n\nconst attachComponent = async (delegate, container, component, cssClasses, componentProps) => {\n  if (delegate) {\n    return delegate.attachViewToDom(container, component, componentProps, cssClasses);\n  }\n  if (typeof component !== 'string' && !(component instanceof HTMLElement)) {\n    throw new Error('framework delegate is missing');\n  }\n  const el = (typeof component === 'string')\n    ? container.ownerDocument && container.ownerDocument.createElement(component)\n    : component;\n  if (cssClasses) {\n    cssClasses.forEach(c => el.classList.add(c));\n  }\n  if (componentProps) {\n    Object.assign(el, componentProps);\n  }\n  container.appendChild(el);\n  await new Promise(resolve => componentOnReady(el, resolve));\n  return el;\n};\nconst detachComponent = (delegate, element) => {\n  if (element) {\n    if (delegate) {\n      const container = element.parentElement;\n      return delegate.removeViewFromDom(container, element);\n    }\n    element.remove();\n  }\n  return Promise.resolve();\n};\n\nexport { attachComponent as a, detachComponent as d };\n","const HapticEngine = {\n  getEngine() {\n    const win = window;\n    return (win.TapticEngine) || (win.Capacitor && win.Capacitor.isPluginAvailable('Haptics') && win.Capacitor.Plugins.Haptics);\n  },\n  available() {\n    return !!this.getEngine();\n  },\n  isCordova() {\n    return !!window.TapticEngine;\n  },\n  isCapacitor() {\n    const win = window;\n    return !!win.Capacitor;\n  },\n  impact(options) {\n    const engine = this.getEngine();\n    if (!engine) {\n      return;\n    }\n    const style = this.isCapacitor() ? options.style.toUpperCase() : options.style;\n    engine.impact({ style });\n  },\n  notification(options) {\n    const engine = this.getEngine();\n    if (!engine) {\n      return;\n    }\n    const style = this.isCapacitor() ? options.style.toUpperCase() : options.style;\n    engine.notification({ style });\n  },\n  selection() {\n    this.impact({ style: 'light' });\n  },\n  selectionStart() {\n    const engine = this.getEngine();\n    if (!engine) {\n      return;\n    }\n    if (this.isCapacitor()) {\n      engine.selectionStart();\n    }\n    else {\n      engine.gestureSelectionStart();\n    }\n  },\n  selectionChanged() {\n    const engine = this.getEngine();\n    if (!engine) {\n      return;\n    }\n    if (this.isCapacitor()) {\n      engine.selectionChanged();\n    }\n    else {\n      engine.gestureSelectionChanged();\n    }\n  },\n  selectionEnd() {\n    const engine = this.getEngine();\n    if (!engine) {\n      return;\n    }\n    if (this.isCapacitor()) {\n      engine.selectionEnd();\n    }\n    else {\n      engine.gestureSelectionEnd();\n    }\n  }\n};\n/**\n * Trigger a selection changed haptic event. Good for one-time events\n * (not for gestures)\n */\nconst hapticSelection = () => {\n  HapticEngine.selection();\n};\n/**\n * Tell the haptic engine that a gesture for a selection change is starting.\n */\nconst hapticSelectionStart = () => {\n  HapticEngine.selectionStart();\n};\n/**\n * Tell the haptic engine that a selection changed during a gesture.\n */\nconst hapticSelectionChanged = () => {\n  HapticEngine.selectionChanged();\n};\n/**\n * Tell the haptic engine we are done with a gesture. This needs to be\n * called lest resources are not properly recycled.\n */\nconst hapticSelectionEnd = () => {\n  HapticEngine.selectionEnd();\n};\n/**\n * Use this to indicate success/failure/warning to the user.\n * options should be of the type `{ style: 'light' }` (or `medium`/`heavy`)\n */\nconst hapticImpact = (options) => {\n  HapticEngine.impact(options);\n};\n\nexport { hapticSelectionStart as a, hapticSelectionChanged as b, hapticSelection as c, hapticImpact as d, hapticSelectionEnd as h };\n","const spinners = {\n  'bubbles': {\n    dur: 1000,\n    circles: 9,\n    fn: (dur, index, total) => {\n      const animationDelay = `${(dur * index / total) - dur}ms`;\n      const angle = 2 * Math.PI * index / total;\n      return {\n        r: 5,\n        style: {\n          'top': `${9 * Math.sin(angle)}px`,\n          'left': `${9 * Math.cos(angle)}px`,\n          'animation-delay': animationDelay,\n        }\n      };\n    }\n  },\n  'circles': {\n    dur: 1000,\n    circles: 8,\n    fn: (dur, index, total) => {\n      const step = index / total;\n      const animationDelay = `${(dur * step) - dur}ms`;\n      const angle = 2 * Math.PI * step;\n      return {\n        r: 5,\n        style: {\n          'top': `${9 * Math.sin(angle)}px`,\n          'left': `${9 * Math.cos(angle)}px`,\n          'animation-delay': animationDelay,\n        }\n      };\n    }\n  },\n  'circular': {\n    dur: 1400,\n    elmDuration: true,\n    circles: 1,\n    fn: () => {\n      return {\n        r: 20,\n        cx: 48,\n        cy: 48,\n        fill: 'none',\n        viewBox: '24 24 48 48',\n        transform: 'translate(0,0)',\n        style: {}\n      };\n    }\n  },\n  'crescent': {\n    dur: 750,\n    circles: 1,\n    fn: () => {\n      return {\n        r: 26,\n        style: {}\n      };\n    }\n  },\n  'dots': {\n    dur: 750,\n    circles: 3,\n    fn: (_, index) => {\n      const animationDelay = -(110 * index) + 'ms';\n      return {\n        r: 6,\n        style: {\n          'left': `${9 - (9 * index)}px`,\n          'animation-delay': animationDelay,\n        }\n      };\n    }\n  },\n  'lines': {\n    dur: 1000,\n    lines: 12,\n    fn: (dur, index, total) => {\n      const transform = `rotate(${30 * index + (index < 6 ? 180 : -180)}deg)`;\n      const animationDelay = `${(dur * index / total) - dur}ms`;\n      return {\n        y1: 17,\n        y2: 29,\n        style: {\n          'transform': transform,\n          'animation-delay': animationDelay,\n        }\n      };\n    }\n  },\n  'lines-small': {\n    dur: 1000,\n    lines: 12,\n    fn: (dur, index, total) => {\n      const transform = `rotate(${30 * index + (index < 6 ? 180 : -180)}deg)`;\n      const animationDelay = `${(dur * index / total) - dur}ms`;\n      return {\n        y1: 12,\n        y2: 20,\n        style: {\n          'transform': transform,\n          'animation-delay': animationDelay,\n        }\n      };\n    }\n  }\n};\nconst SPINNERS = spinners;\n\nexport { SPINNERS as S };\n","const hostContext = (selector, el) => {\n  return el.closest(selector) !== null;\n};\n/**\n * Create the mode and color classes for the component based on the classes passed in\n */\nconst createColorClasses = (color, cssClassMap) => {\n  return (typeof color === 'string' && color.length > 0) ? Object.assign({ 'ion-color': true, [`ion-color-${color}`]: true }, cssClassMap) : cssClassMap;\n};\nconst getClassList = (classes) => {\n  if (classes !== undefined) {\n    const array = Array.isArray(classes) ? classes : classes.split(' ');\n    return array\n      .filter(c => c != null)\n      .map(c => c.trim())\n      .filter(c => c !== '');\n  }\n  return [];\n};\nconst getClassMap = (classes) => {\n  const map = {};\n  getClassList(classes).forEach(c => map[c] = true);\n  return map;\n};\nconst SCHEME = /^[a-z][a-z0-9+\\-.]*:/;\nconst openURL = async (url, ev, direction, animation) => {\n  if (url != null && url[0] !== '#' && !SCHEME.test(url)) {\n    const router = document.querySelector('ion-router');\n    if (router) {\n      if (ev != null) {\n        ev.preventDefault();\n      }\n      return router.push(url, direction, animation);\n    }\n  }\n  return false;\n};\n\nexport { createColorClasses as c, getClassMap as g, hostContext as h, openURL as o };\n","export class ArrayHelper {\r\n  static liftToArray<T>(item: T | T[]) {\r\n    if (item instanceof Array) {\r\n      return item;\r\n    } else if (item) {\r\n      return [item];\r\n    } else {\r\n      return [];\r\n    }\r\n  }\r\n\r\n  /**\r\n   * @param array Array\r\n   * @param fromIndex Reorder item from index\r\n   * @param toIndex Reorder item to index\r\n   * @returns New reordered array\r\n   */\r\n  static reorderList<T>(\r\n    array: Array<T>,\r\n    fromIndex: number,\r\n    toIndex: number\r\n  ): Array<T> {\r\n    if (!array || array.length === 0) {\r\n      return array;\r\n    }\r\n    const arrayCopy = [...array];\r\n    arrayCopy.splice(toIndex, 0, arrayCopy.splice(fromIndex, 1)[0]);\r\n    return arrayCopy;\r\n  }\r\n}\r\n"]}