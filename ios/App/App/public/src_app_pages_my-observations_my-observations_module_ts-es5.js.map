{"version":3,"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;UAWaA;;;;;yBAAAA;AAA8B;;;cAA9BA;;;kBAJF,CAACC,yDAAD,EAAeC,uDAAf,EAA4BC,uDAA5B;;;;4HAIEH,iCAA8B;AAAAI,yBAH1BC,kFAG0B;AAHFC,oBAD7BL,yDAC6B,EADfC,uDACe,EADFC,uDACE;AAGE;AAJO;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACLhDI;;AACEA;;AACEA;;AACEA;;AAA+BA;;;;AAAuCA;;AACxEA;;AACAA;;AACEA;;AACEA;;;;AACFA;;AACFA;;AACFA;;AACFA;;;;AARqCA;;AAAAA;;AAI7BA;;AAAAA;;;;;;AAMNA;;;;;;AAAyEA;;;;;;AAd7EA;;AACEA;;AAYAA;;AACEA;;AACFA;;AACFA;;;;;;;;AAfqBA;;AAAAA;;AAacA;;AAAAA,gGAAkB,cAAlB,EAAkBC,oBAAlB;;;;UCGtBC;AAKX,qCAAoBC,mBAApB,EAA4D;AAAA;;AAAxC;AAJV,yBAAU,IAAIH,uDAAJ,EAAV;AAIsD;;;;iBAEhE,oBAAQ;AACN,iBAAKI,UAAL,GAAkB,IAAIC,yCAAJ,EAAlB;AACA,iBAAKC,cAAL,GAAsB,KAAKC,mBAAL,EAAtB;AACD;;;iBAED,uBAAW;AACT,iBAAKH,UAAL,CAAgBI,IAAhB;AACA,iBAAKJ,UAAL,CAAgBK,QAAhB;AACD;;;iBAEO,+BAAmB;AAAA;;AACzB,mBAAO,KAAKN,mBAAL,CAAyBG,cAAzB,CAAwCI,IAAxC,CACL,qDAAI,UAACC,IAAD;AAAA,qBAAUA,IAAI,CAACC,MAAL,CAAY,UAACC,GAAD;AAAA,uBAASA,GAAG,CAACC,UAAJ,KAAmBC,qGAAnB,IAAuCF,GAAG,CAACC,UAAJ,KAAmBC,oGAAnE;AAAA,eAAZ,CAAV;AAAA,aAAJ,CADK,EAEL,qDAAI,UAACJ,IAAD;AAAA,qBAAU,KAAI,CAACK,OAAL,CAAaC,IAAb,CAAkBN,IAAI,CAACO,MAAL,KAAgB,CAAlC,CAAV;AAAA,aAAJ,CAFK,CAAP;AAID;;;iBAED,uBAAcC,CAAd,EAA0BC,GAA1B,EAA4C;AAC1C,mBAAOA,GAAG,GAAGA,GAAG,CAACC,EAAP,GAAYC,SAAtB;AACD;;;;;;;yBA1BUpB,qBAAkBF;AAAA;;;cAAlBE;AAAkBqB;AAAAC;AAAAR;AAAA;AAAAS;AAAAC;AAAAC;AAAAC;AAAA;ADjB/B5B;;;;;;AAAMA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AEYN6B;;AACEA;;AACAA;;AACAA;;AACFA;;;;;;AAGIA;;;;;;AAA2FA;;;;;;;;;;;;AAD7FA;;AACEA;;AACFA;;;;;;AAFUA;;AACmCA;;AAAAA,0GAAwB,cAAxB,EAAwBC,oBAAxB;;;;;;;;;;;;;AAM7CD;;AACEA;;AACEA;;AAAIA;;;;AAA4DA;;AAChEA;;;;;;AACFA;;AACFA;;;;;;AAHQA;;AAAAA;;AACsBA;;AAAAA;;;;;;;;AAXhCA;;AACEA;;AAGAA;;AAAqBA;AAAAA;;AAAA;;AAAA;AAAA;;AACnBA;;AAEFA;;AACAA;;AAMFA;;;;;;AAb4CA;;AAAAA;;AAOhCA;;AAAAA;;;;ACOZ,UAAME,SAAS,GAAG,EAAlB;AACA,UAAMC,uBAAuB,GAAG,GAAhC;;UAQaC;AASX,oCACUC,kBADV,EAEUC,kBAFV,EAGUhC,mBAHV,EAIUiC,iBAJV,EAKUC,iBALV,EAMUC,cANV,EAOUC,MAPV,EAOwB;AAAA;;AANd;AACA;AACA;AACA;AACA;AACA;AACA;AAfV,qCAA+C,EAA/C;AACA,wBAAS,KAAT;AACA,6BAAc,KAAKC,OAAL,CAAaC,IAAb,CAAkB,IAAlB,CAAd;AACU,yBAAU,IAAIZ,uDAAJ,EAAV;AACV,6BAAc,KAAd;AAaE,eAAKa,kBAAL,GAA0B,KAAKC,wBAAL,EAA1B;AACD;;;;iBAEK,oBAAQ;;;;;;;;AACZ,2BAAKC,4BAAL;AACA,2BAAKzC,mBAAL,CAAyBG,cAAzB,CACGI,IADH,CAEI,sDAAI,UAACC,IAAD;AAAA,+BAAUA,IAAI,CAACO,MAAf;AAAA,uBAAJ,CAFJ,EAGI,4DAHJ,EAII,sDAAI;AAAA;AAAA,4BAAE2B,SAAF;AAAA,4BAAaC,QAAb;;AAAA,+BAA2BA,QAAQ,GAAGD,SAAtC;AAAA,uBAAJ,CAJJ,EAKI,wEALJ,EAMI,yDAAO,UAACE,IAAD;AAAA,+BAAUA,IAAI,GAAG,CAAjB;AAAA,uBAAP,CANJ,EAMgC;AAC5B,qFAAa,GAAb,CAPJ,CAOsB;AAPtB,wBASGC,SATH,CASa;AAAA,+BAAM,MAAI,CAACJ,4BAAL,EAAN;AAAA,uBATb;;;;;;;;;AAUD;;;iBAEK,iBAAQK,aAAR,EAAoC;;;;;;;AACxC,6BAAM,KAAK9C,mBAAL,CAAyB+C,iBAAzB,CAA2CD,aAA3C,CAAN;;;;AACA,6BAAM,KAAKL,4BAAL,CAAkCK,aAAlC,CAAN;;;;;;;;;AACD;;;iBAEa,sCACZE,MADY,EACU;;;;;;;AAEtB,2BAAKC,MAAL,GAAc,KAAd;AACA,2BAAKf,iBAAL,CAAuBgB,aAAvB;AACA,2BAAKC,SAAL,GAAiB,CAAjB;;;AAEiB,6BAAM,6FACnB,KAAKC,mBAAL,CAAyB,CAAzB,CADmB,EAEnBJ,MAFmB,EAGnB,KAHmB,CAAN;;;AAATK;AAKN,2BAAKC,mBAAL,GAA2BD,MAA3B;AACA,2BAAKxC,OAAL,CAAaC,IAAb,CAAkBuC,MAAM,CAACtC,MAAP,KAAkB,CAApC;;;;;;;AAEA,2BAAKoB,cAAL,CAAoBoB,KAApB,CACE,iCADF,EAEE,kDAFF;;;;AAMA,2BAAKN,MAAL,GAAc,IAAd;AACA,2BAAKf,iBAAL,CAAuBgB,aAAvB;;;;;;;;;;AAEH;;;iBAEO,6BACNM,UADM,EACY;AAAA;;AAElB,mBAAO,sDAAc,CACnB,KAAKxB,kBAAL,CAAwByB,mBADL,EAEnB,KAAKxB,iBAAL,CAAuByB,aAFJ,CAAd,EAGJnD,IAHI,CAIL,4DAAU,iBAAuC;AAAA;AAAA;AAAA,kBAApCoD,OAAoC;AAAA,kBAA3BC,OAA2B;AAAA,kBAAjBC,YAAiB;;AAC/C,kBAAIA,YAAY,CAACC,UAAjB,EAA6B;AAC3B,uBAAO,MAAI,CAAC/B,kBAAL,CAAwBgC,6BAAxB,CACLJ,OADK,EAELC,OAFK,EAGLJ,UAHK,EAIL5B,SAJK,CAAP;AAMD;;AACD,qBAAO,2CAAG,EAAH,CAAP;AACD,aAVD,CAJK,EAeL,uDAAK,CAAL,CAfK,CAAP;AAiBD;;;iBAED,sBAAaoC,KAAb,EAAsD;AAAA;;AACpD,gBAAMC,aAAa,GAAG,KAAKX,mBAAL,CAAyBvC,MAA/C;AACA,gBAAMmD,gBAAgB,GAAGC,IAAI,CAACC,KAAL,CAAWH,aAAa,GAAGrC,SAA3B,CAAzB;AACA,iBAAKyC,WAAL,GAAmB,IAAnB;AACA,iBAAKjB,mBAAL,CAAyBc,gBAAzB,EACG3D,IADH,CAEI,uDAAK,CAAL,CAFJ,EAGI,2DAAS,YAAK;AACZ,oBAAI,CAAC8D,WAAL,GAAmB,KAAnB;AACD,aAFD,CAHJ,EAOGxB,SAPH,CAOa,UAACyB,QAAD,EAAa;AACtB,oBAAI,CAAChB,mBAAL,GAA2B,MAAI,CAACA,mBAAL,CAAyBiB,MAAzB,CAAgCD,QAAhC,CAA3B;AACA,oBAAI,CAACnB,SAAL,IAAkB,CAAlB;AACA,kBAAMqB,MAAM,GAAuBR,KAAK,CAACQ,MAAzC;AACAA,oBAAM,CAAClE,QAAP;;AACA,kBAAIgE,QAAQ,CAACvD,MAAT,GAAkBa,SAAlB,IAA+B,MAAI,CAAC6C,eAAxC,EAAyD;AACvDD,sBAAM,CAACE,QAAP,GAAkB,IAAlB,CADuD,CAC/B;AACzB;;AACD,oBAAI,CAACxC,iBAAL,CAAuBgB,aAAvB;AACD,aAhBH;AAiBD;;;iBAED,uBAAclC,CAAd,EAA0BC,GAA1B,EAAoD;AAClD,mBAAOA,GAAG,GAAGA,GAAG,CAAC0D,KAAJ,CAAUC,QAAV,EAAH,GAA0BzD,SAApC;AACD;;;eAED,eAAmB;AACjB,mBAAO,KAAKmC,mBAAL,CAAyBvC,MAAzB,IAAmCc,uBAA1C;AACD;;;eAED,eAAY;AACV,mBAAOA,uBAAP;AACD;;;iBAEO,oCAAwB;AAC9B,mBAAO,KAAKG,kBAAL,CAAwB6C,YAAxB,CAAqCtE,IAArC,CACL,sDACE,UAACuE,YAAD;AAAA,qBAAkBC,0EAAgCD,YAAY,CAACnB,OAA7C,CAAlB;AAAA,aADF,CADK,EAIL,wEAJK,EAKL,mFAAU,KAAKvB,MAAf,CALK,CAAP;AAOD;;;;;;;yBAnIUN,oBAAiBJ;AAAA;;;cAAjBI;AAAiBV;AAAAC;AAAAR;AAAA;AAAAS;AAAAC;AAAAC;AAAAC;AAAA;ADzC9BC;;AACEA;;AACEA;;AACEA;;AAA+BA;;;;AAAwDA;;AACzFA;;AACAA;;AACEA;;AACEA;;;;AACFA;;AACFA;;AACFA;;AACFA;;AACAA;;AAKAA;;;;AAdqCA;;AAAAA;;AAI7BA;;AAAAA;;AAKuBA;;AAAAA;;AAKhBA;;AAAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AEPTsD;;AAAuBA;;;;AAA2BA;;;;AAA3BA;;AAAAA;;;;;;AAG3BA;;;;;;AAEAA;;;;;;;;UCJWC;AAMX,oCACUjF,mBADV,EAEUkF,eAFV,EAGUC,GAHV,EAGgC;AAAA;;AAFtB;AACA;AACA;AAPF,+BAAgC,EAAhC;AAER,yBAAU,KAAV;AAMI;;;;iBAEJ,oBAAQ;AAAA;;AAEN,iBAAKC,OAAL,GAAe,KAAKC,YAAL,CAAkB1E,UAAlB,KAAiCC,qGAAhD;AACA,iBAAK0E,OAAL,GAAe,CAAC,KAAKF,OAArB;AACA,iBAAKG,aAAL,CAAmBC,IAAnB,CACE,KAAKxF,mBAAL,CACGyF,sBADH,GAEGlF,IAFH,CAGI,qDAAI,UAACmF,GAAD;AAAA,qBACFA,GAAG,CAACC,IAAJ,CAAS,UAACC,IAAD;AAAA,uBAAUA,IAAI,CAAC1E,EAAL,KAAY,MAAI,CAACmE,YAAL,CAAkBnE,EAAxC;AAAA,eAAT,CADE;AAAA,aAAJ,CAHJ,EAMI,wDAAO,UAAC2E,CAAD;AAAA,qBAAO,CAAC,CAACA,CAAT;AAAA,aAAP,CANJ,EAQGhD,SARH,CAQa,UAAC6C,GAAD,EAAQ;AACjB,oBAAI,CAACL,YAAL,GAAoBK,GAApB;AACA,oBAAI,CAACN,OAAL,GAAe,MAAI,CAACC,YAAL,CAAkB1E,UAAlB,KAAiCC,qGAAhD;;AACA,oBAAI,CAACuE,GAAL,CAASjC,aAAT;AACD,aAZH,CADF;AAeA,iBAAKqC,aAAL,CAAmBC,IAAnB,CACE,KAAKN,eAAL,CAAqBY,yBAArB,CAA+CjD,SAA/C,CAAyD,UAAC6C,GAAD,EAAQ;AAC/D,oBAAI,CAACJ,OAAL,GAAeI,GAAG,CAACK,UAAnB;;AACA,oBAAI,CAACZ,GAAL,CAASjC,aAAT;AACD,aAHD,CADF;AAMD;;;iBAED,uBAAW;AAAA,uDACkB,KAAKqC,aADvB;AAAA;;AAAA;AACT,kEAA+C;AAAA,oBAApCS,YAAoC;AAC7CA,4BAAY,CAACC,WAAb;AACD;AAHQ;AAAA;AAAA;AAAA;AAAA;AAIV;;;iBAED,yBAAgBvF,GAAhB,EAAkC;AAChC,mBAAOA,GAAG,CAACwF,OAAJ,CAAYC,WAAZ,GACHzF,GAAG,CAACwF,OAAJ,CAAYC,WAAZ,CAAwBC,YAAxB,IACE1F,GAAG,CAACwF,OAAJ,CAAYC,WAAZ,CAAwBE,mBAFvB,GAGH,EAHJ;AAID;;;;;;;yBAlDUpB,oBAAiBD;AAAA;;;cAAjBC;AAAiB7D;AAAAkF;AAAAjB;AAAA;AAAA/D;AAAAC;AAAAC;AAAAC;AAAA;ADX9BuD;;AACEA;;AACEA;;AACFA;;AACAA;;AACEA;;AACEA;;AACFA;;AACAA;;AACEA;;AAAsCA;;;;;;AACtCA;;AACFA;;AACFA;;AACAA;;AAEAA;;AACFA;;;;AAhBuBA,6FAAmB,YAAnB,EAAmB,2CAAnB;;AAELA;;AAAAA;;AAIZA;;AAAAA;;AAGsCA;;AAAAA;;AAC/BA;;AAAAA;;AAGAA;;AAAAA;;AAEGA;;AAAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AELhB,UAAMuB,MAAM,GAAW,CACrB;AACEC,YAAI,EAAE,EADR;AAEEC,iBAAS,EAAEC,qEAFb;AAGEC,mBAAW,EAAE,CAACC,8DAAD;AAHf,OADqB,CAAvB;;UAsBaC;;;;;yBAAAA;AAAwB;;;cAAxBA;;;kBAbF,CACPC,uEADO,EAEPC,kGAFO,EAGPC,6HAHO,EAIPC,mEAAsBV,MAAtB,CAJO;;;;4HAaEM,2BAAwB;AAAAnH,yBANjCgH,qEAMiC,EALjCQ,wFAKiC,EAJjCC,2FAIiC,EAHjCC,wFAGiC;AAHhBxH,oBATjBkH,uEASiB,EARjBC,kGAQiB,EAPjBC,6HAOiB,EAPaC,yDAOb;AAGgB;AAVH;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACVhCI;;AACEA;;AACEA;;AACEA;;AACFA;;AACFA;;AACAA;;AACEA;;AACEA;;AAAKA;;;;AAAmDA;;AACxDA;;AAA0BA;;;;AAAoDA;;AAChFA;;AACFA;;AACFA;;;;AAJWA;;AAAAA;;AACqBA;;AAAAA;;;;UCXrBC;AAUX,qCAAoBtH,mBAApB,EAA4D;AAAA;;AAAxC;AAJpB,6BAAc,KAAKqC,OAAL,CAAaC,IAAb,CAAkB,IAAlB,CAAd;AACA,8BAAe,KAAf;AACA,0CAA2B,KAA3B;AAEgE;;;;iBAE1D,iBAAQQ,aAAR,EAAoC;;;;;;;AACxC,6BAAM,KAAK9C,mBAAL,CAAyB+C,iBAAzB,CAA2CD,aAA3C,CAAN;;;;AAEA,6BAAM,KAAKyE,iBAAL,CAAuBlF,OAAvB,CAA+BS,aAA/B,CAAN;;;;;;;;;AACD;;;iBAED,gCAAuBjC,OAAvB,EAAuC;AACrC,iBAAK2G,YAAL,GAAoB3G,OAApB;AACD;;;iBAED,+BAAsBA,OAAtB,EAAsC;AACpC,iBAAK4G,wBAAL,GAAgC5G,OAAhC;AACD;;;;;;;yBAxBUyG,qBAAkBD;AAAA;;;cAAlBC;AAAkBlG;AAAAsG;AAAA;sEAClBC,wDAAU;;sEACVA,+DAAiB;;sEACjBC,0FAAiB;;;;;;;;;;;;;;;;ADb9BP;;AACEA;;AACEA;;AACEA;;AACFA;;AACAA;;AAAWA;;;;AAAyCA;;AACtDA;;AACFA;;AACAA;;AACEA;;AACAA;;AAAgBA;AAAA,qBAAWQ,kCAAX;AAAyC,aAAzC;;AAA2CR;;AAC3DA;;AAAeA;AAAA,qBAAWQ,iCAAX;AAAwC,aAAxC;;AAA0CR;;AACzDA;;AAaFA;;AACAA;;;;AArBeA;;AAAAA;;AAIYA;;AAAAA;;AAGdA;;AAAAA;;;;;;;;;;","names":["FullscreenImageModalPageModule","_angular_common__WEBPACK_IMPORTED_MODULE_2__","_ionic_angular__WEBPACK_IMPORTED_MODULE_3__","_angular_forms__WEBPACK_IMPORTED_MODULE_4__","declarations","_fullscreen_image_modal_page__WEBPACK_IMPORTED_MODULE_0__","imports","_angular_core__WEBPACK_IMPORTED_MODULE_3__","ctx_r0","DraftListComponent","registrationService","ngDestroy$","rxjs__WEBPACK_IMPORTED_MODULE_4__","registrations$","createRegistration$","next","complete","pipe","regs","filter","reg","syncStatus","src_app_modules_common_registration_registration_models__WEBPACK_IMPORTED_MODULE_0__","isEmpty","emit","length","_","obs","id","undefined","selectors","outputs","decls","vars","consts","template","_angular_core__WEBPACK_IMPORTED_MODULE_9__","ctx_r2","PAGE_SIZE","MAX_REGISTRATIONS_COUNT","SentListComponent","observationService","userSettingService","regobsAuthService","changeDetectorRef","loggingService","ngZone","refresh","bind","myObservationsUrl$","createMyObservationsUrl$","initRegistrationSubscription","lastCount","newCount","diff","subscribe","cancelPromise","syncRegistrations","cancel","loaded","detectChanges","pageIndex","getMyRegistrations$","result","loadedRegistrations","debug","pageNumber","appModeAndLanguage$","loggedInUser$","appMode","langKey","loggedInUser","isLoggedIn","getObservationsForCurrentUser","event","currentLength","currentPageIndex","Math","floor","loadingMore","nextPage","concat","target","maxCountReached","disabled","RegId","toString","userSetting$","userSettings","src_settings__WEBPACK_IMPORTED_MODULE_6__","_angular_core__WEBPACK_IMPORTED_MODULE_5__","SyncItemComponent","progressService","cdr","isDraft","registration","loading","subscriptions","push","getRegistrationsToSync","val","find","item","x","registrationSyncProgress$","inProgress","subscription","unsubscribe","request","ObsLocation","LocationName","LocationDescription","inputs","routes","path","component","_my_observations_page__WEBPACK_IMPORTED_MODULE_0__","canActivate","_core_guards_auth_guard__WEBPACK_IMPORTED_MODULE_4__","MyObservationsPageModule","_modules_shared_shared_module__WEBPACK_IMPORTED_MODULE_1__","_modules_registration_shared_components_module__WEBPACK_IMPORTED_MODULE_2__","_modal_pages_fullscreen_image_modal_fullscreen_image_modal_module__WEBPACK_IMPORTED_MODULE_3__","_angular_router__WEBPACK_IMPORTED_MODULE_9__","_components_sync_item_sync_item_component__WEBPACK_IMPORTED_MODULE_5__","_components_draft_list_draft_list_component__WEBPACK_IMPORTED_MODULE_6__","_components_sent_list_sent_list_component__WEBPACK_IMPORTED_MODULE_7__","_angular_core__WEBPACK_IMPORTED_MODULE_6__","MyObservationsPage","sentListComponent","draftIsEmpty","sentRegistrationsIsEmpty","viewQuery","_ionic_angular__WEBPACK_IMPORTED_MODULE_8__","_components_sent_list_sent_list_component__WEBPACK_IMPORTED_MODULE_1__","ctx"],"sources":["webpack:///src/app/pages/modal-pages/fullscreen-image-modal/fullscreen-image-modal.module.ts","webpack:///src/app/pages/my-observations/components/draft-list/draft-list.component.html","webpack:///src/app/pages/my-observations/components/draft-list/draft-list.component.ts","webpack:///src/app/pages/my-observations/components/sent-list/sent-list.component.html","webpack:///src/app/pages/my-observations/components/sent-list/sent-list.component.ts","webpack:///src/app/pages/my-observations/components/sync-item/sync-item.component.html","webpack:///src/app/pages/my-observations/components/sync-item/sync-item.component.ts","webpack:///src/app/pages/my-observations/my-observations.module.ts","webpack:///src/app/pages/my-observations/my-observations.page.html","webpack:///src/app/pages/my-observations/my-observations.page.ts"],"sourcesContent":["import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { FormsModule } from '@angular/forms';\r\nimport { IonicModule } from '@ionic/angular';\r\nimport { FullscreenImageModalPage } from './fullscreen-image-modal.page';\r\n\r\n@NgModule({\r\n  imports: [CommonModule, IonicModule, FormsModule],\r\n  declarations: [FullscreenImageModalPage],\r\n  entryComponents: [FullscreenImageModalPage]\r\n})\r\nexport class FullscreenImageModalPageModule {}\r\n","<!-- shows list of registrations not saved on server (both drafts and registrations in sync)-->\r\n<div *ngIf=\"registrations$ | async as registrations\">\r\n  <ion-item-divider *ngIf=\"registrations?.length > 0\" no-border>\r\n    <ion-grid class=\"ion-no-padding ion-no-margin\">\r\n      <ion-row>\r\n        <h3 class=\"ion-text-uppercase\">{{ 'REGISTRATION.DRAFTS' | translate }}</h3>\r\n      </ion-row>\r\n      <ion-row>\r\n        <ion-label class=\"ion-text-wrap\" color=\"medium\">\r\n          {{ 'REGISTRATION.DRAFTS_DESCRIPTION' | translate }}\r\n        </ion-label>\r\n      </ion-row>\r\n    </ion-grid>\r\n  </ion-item-divider>\r\n  <ion-list>\r\n    <app-sync-item *ngFor=\"let reg of registrations; trackBy: trackByIdFunc\" [registration]=\"reg\"></app-sync-item>\r\n  </ion-list>\r\n</div>","import {\r\n  ChangeDetectionStrategy,\r\n  Component,\r\n  EventEmitter,\r\n  OnInit,\r\n  Output\r\n} from '@angular/core';\r\nimport { Observable, Subject } from 'rxjs';\r\nimport { map, tap } from 'rxjs/operators';\r\nimport { IRegistration, SyncStatus } from 'src/app/modules/common-registration/registration.models';\r\nimport { RegistrationService } from 'src/app/modules/registration/services/registration.service';\r\n\r\n@Component({\r\n  selector: 'app-draft-list',\r\n  templateUrl: './draft-list.component.html',\r\n  styleUrls: ['./draft-list.component.scss'],\r\n  changeDetection: ChangeDetectionStrategy.OnPush\r\n})\r\nexport class DraftListComponent implements OnInit {\r\n  @Output() isEmpty = new EventEmitter<boolean>();\r\n  registrations$: Observable<IRegistration[]>;\r\n  private ngDestroy$: Subject<void>;\r\n\r\n  constructor(private registrationService: RegistrationService) {}\r\n\r\n  ngOnInit(): void {\r\n    this.ngDestroy$ = new Subject();\r\n    this.registrations$ = this.createRegistration$();\r\n  }\r\n\r\n  ngOnDestroy(): void {\r\n    this.ngDestroy$.next();\r\n    this.ngDestroy$.complete();\r\n  }\r\n\r\n  private createRegistration$(): Observable<IRegistration[]> {\r\n    return this.registrationService.registrations$.pipe(\r\n      map((regs) => regs.filter((reg) => reg.syncStatus === SyncStatus.Draft || reg.syncStatus === SyncStatus.Sync)),\r\n      tap((regs) => this.isEmpty.emit(regs.length === 0))\r\n    );\r\n  }\r\n\r\n  trackByIdFunc(_: unknown, obs: IRegistration): string {\r\n    return obs ? obs.id : undefined;\r\n  }\r\n}\r\n","<!-- A list of observations sent to server -->\r\n<ion-item-divider no-border>\r\n  <ion-grid class=\"ion-no-padding ion-no-margin\">\r\n    <ion-row>\r\n      <h3 class=\"ion-text-uppercase\">{{ 'MY_OBSERVATIONS.MY_SENT_OBSERVATIONS' | translate }}</h3>\r\n    </ion-row>\r\n    <ion-row>\r\n      <ion-label class=\"ion-text-wrap\" color=\"medium\">\r\n        {{ 'MY_OBSERVATIONS.SENT_SUBTITLE' | translate }}\r\n      </ion-label>\r\n    </ion-row>\r\n  </ion-grid>\r\n</ion-item-divider>\r\n<div class=\"loading-sceleton\" *ngIf=\"!loaded\">\r\n  <app-observation-skeleton></app-observation-skeleton>\r\n  <app-observation-skeleton></app-observation-skeleton>\r\n  <app-observation-skeleton></app-observation-skeleton>\r\n</div>\r\n<ng-container *ngIf=\"loadedRegistrations !== undefined\">\r\n  <ion-list [ngClass]=\"{ loaded: loaded }\" *ngIf=\"(loadedRegistrations.length > 0)\">\r\n    <app-observation-list-card *ngFor=\"let reg of loadedRegistrations; trackBy: trackByIdFunc\" [obs]=\"reg\"></app-observation-list-card>\r\n  </ion-list>\r\n  <ion-infinite-scroll (ionInfinite)=\"loadNextPage($event)\" >\r\n    <ion-infinite-scroll-content>\r\n    </ion-infinite-scroll-content>\r\n  </ion-infinite-scroll>\r\n  <ion-row *ngIf=\"maxCountReached\" class=\"full-grid-row max-count-reached\">\r\n    <ion-col class=\"ion-text-center ion-margin-horizontal\">\r\n      <h2>{{ 'MY_OBSERVATIONS.MAX_COUNT_REACHED_HEADER' | translate }}</h2>\r\n      <h3 class=\"ion-text-wrap\" [innerHTML]=\"'MY_OBSERVATIONS.MAX_COUNT_REACHED_TEXT' | translate: {maxCount: maxCount, myObservationsUrl: myObservationsUrl$ | async}\"></h3>\r\n    </ion-col>\r\n  </ion-row>\r\n</ng-container>\r\n","import {\r\n  ChangeDetectionStrategy,\r\n  ChangeDetectorRef,\r\n  Component,\r\n  EventEmitter,\r\n  NgZone,\r\n  OnInit,\r\n  Output\r\n} from '@angular/core';\r\nimport { IonInfiniteScroll } from '@ionic/angular';\r\nimport { combineLatest, Observable, of } from 'rxjs';\r\nimport {\r\n  debounceTime,\r\n  distinctUntilChanged,\r\n  filter,\r\n  finalize,\r\n  map,\r\n  pairwise,\r\n  switchMap,\r\n  take,\r\n} from 'rxjs/operators';\r\nimport {\r\n  enterZone,\r\n  toPromiseWithCancel\r\n} from 'src/app/core/helpers/observable-helper';\r\nimport { ObservationService } from 'src/app/core/services/observation/observation.service';\r\nimport { UserSettingService } from 'src/app/core/services/user-setting/user-setting.service';\r\nimport { RegobsAuthService } from 'src/app/modules/auth/services/regobs-auth.service';\r\nimport { RegistrationService } from 'src/app/modules/registration/services/registration.service';\r\nimport { RegistrationViewModel } from '@varsom-regobs-common/regobs-api';\r\nimport { LoggingService } from 'src/app/modules/shared/services/logging/logging.service';\r\nimport { settings } from 'src/settings';\r\n\r\nconst PAGE_SIZE = 10;\r\nconst MAX_REGISTRATIONS_COUNT = 100;\r\n\r\n@Component({\r\n  selector: 'app-sent-list',\r\n  templateUrl: './sent-list.component.html',\r\n  styleUrls: ['./sent-list.component.scss'],\r\n  changeDetection: ChangeDetectionStrategy.OnPush\r\n})\r\nexport class SentListComponent implements OnInit {\r\n  loadedRegistrations: RegistrationViewModel[] = [];\r\n  loaded = false;\r\n  refreshFunc = this.refresh.bind(this);\r\n  @Output() isEmpty = new EventEmitter<boolean>();\r\n  loadingMore = false;\r\n  pageIndex: number;\r\n  myObservationsUrl$: Observable<string>;\r\n\r\n  constructor(\r\n    private observationService: ObservationService,\r\n    private userSettingService: UserSettingService,\r\n    private registrationService: RegistrationService,\r\n    private regobsAuthService: RegobsAuthService,\r\n    private changeDetectorRef: ChangeDetectorRef,\r\n    private loggingService: LoggingService,\r\n    private ngZone: NgZone\r\n  ) {\r\n    this.myObservationsUrl$ = this.createMyObservationsUrl$();\r\n  }\r\n\r\n  async ngOnInit(): Promise<void> {\r\n    this.initRegistrationSubscription();\r\n    this.registrationService.registrations$\r\n      .pipe(\r\n        map((regs) => regs.length),\r\n        pairwise(),\r\n        map(([lastCount, newCount]) => newCount - lastCount),\r\n        distinctUntilChanged(),\r\n        filter((diff) => diff < 0), //only fetch observations when num drafts decrease\r\n        debounceTime(500) //wait a bit in case multiple observations were shipped\r\n      )\r\n      .subscribe(() => this.initRegistrationSubscription());\r\n  }\r\n\r\n  async refresh(cancelPromise: Promise<void>): Promise<void> {\r\n    await this.registrationService.syncRegistrations(cancelPromise);\r\n    await this.initRegistrationSubscription(cancelPromise);\r\n  }\r\n\r\n  private async initRegistrationSubscription(\r\n    cancel?: Promise<void>\r\n  ): Promise<void> {\r\n    this.loaded = false;\r\n    this.changeDetectorRef.detectChanges();\r\n    this.pageIndex = 0;\r\n    try {\r\n      const result = await toPromiseWithCancel(\r\n        this.getMyRegistrations$(0),\r\n        cancel,\r\n        20000\r\n      );\r\n      this.loadedRegistrations = result;\r\n      this.isEmpty.emit(result.length === 0);\r\n    } catch (error) {\r\n      this.loggingService.debug(\r\n        'Could not load my registrations',\r\n        'SentListComponent.initRegistrationSubscription()',\r\n        error\r\n      );\r\n    } finally {\r\n      this.loaded = true;\r\n      this.changeDetectorRef.detectChanges();\r\n    }\r\n  }\r\n\r\n  private getMyRegistrations$(\r\n    pageNumber: number\r\n  ): Observable<RegistrationViewModel[]> {\r\n    return combineLatest([\r\n      this.userSettingService.appModeAndLanguage$,\r\n      this.regobsAuthService.loggedInUser$\r\n    ]).pipe(\r\n      switchMap(([[appMode, langKey], loggedInUser]) => {\r\n        if (loggedInUser.isLoggedIn) {\r\n          return this.observationService.getObservationsForCurrentUser(\r\n            appMode,\r\n            langKey,\r\n            pageNumber,\r\n            PAGE_SIZE\r\n          );\r\n        }\r\n        return of([]);\r\n      }),\r\n      take(1)\r\n    );\r\n  }\r\n\r\n  loadNextPage(event: CustomEvent<RegistrationViewModel>): void {\r\n    const currentLength = this.loadedRegistrations.length;\r\n    const currentPageIndex = Math.floor(currentLength / PAGE_SIZE);\r\n    this.loadingMore = true;\r\n    this.getMyRegistrations$(currentPageIndex)\r\n      .pipe(\r\n        take(1),\r\n        finalize(() => {\r\n          this.loadingMore = false;\r\n        })\r\n      )\r\n      .subscribe((nextPage) => {\r\n        this.loadedRegistrations = this.loadedRegistrations.concat(nextPage);\r\n        this.pageIndex += 1;\r\n        const target: IonInfiniteScroll = (event.target as unknown) as IonInfiniteScroll;\r\n        target.complete();\r\n        if (nextPage.length < PAGE_SIZE || this.maxCountReached) {\r\n          target.disabled = true; //we have reached the end, so no need to load more pages from now\r\n        }\r\n        this.changeDetectorRef.detectChanges();\r\n      });\r\n  }\r\n\r\n  trackByIdFunc(_: unknown, obs: RegistrationViewModel): string {\r\n    return obs ? obs.RegId.toString() : undefined;\r\n  }\r\n\r\n  get maxCountReached(): boolean {\r\n    return this.loadedRegistrations.length >= MAX_REGISTRATIONS_COUNT;\r\n  }\r\n\r\n  get maxCount(): number {\r\n    return MAX_REGISTRATIONS_COUNT;\r\n  }\r\n\r\n  private createMyObservationsUrl$(): Observable<string> {\r\n    return this.userSettingService.userSetting$.pipe(\r\n      map(\r\n        (userSettings) => settings.services.regObs.webUrl[userSettings.appMode]\r\n      ),\r\n      distinctUntilChanged(),\r\n      enterZone(this.ngZone)\r\n    );\r\n  }\r\n}\r\n","<!-- Shows brief info from one observation not saved on server -->\r\n<ion-item lines=\"full\" [detail]=\"!loading\" [routerLink]=\"'/registration/edit/' + registration.id\">\r\n  <div slot=\"start\" class=\"geo-icon-circle\">\r\n    <app-geo-icon [geoHazards]=\"[registration.geoHazard]\"></app-geo-icon>\r\n  </div>\r\n  <ion-label>\r\n    <h2>\r\n      {{ getLocationName(registration) }}\r\n    </h2>\r\n    <p class=\"ion-text-wrap\">\r\n      <ion-icon name=\"calendar\"></ion-icon> {{ registration.request.DtObsTime | formatDate | async }}\r\n      <span *ngIf=\"isDraft\"> - {{ 'DRAFT' | translate }}</span>\r\n    </p>\r\n  </ion-label>\r\n  <ion-icon *ngIf=\"!loading && registration.syncError\" slot=\"end\" name=\"warning\">\r\n  </ion-icon>\r\n  <ion-spinner *ngIf=\"loading\" slot=\"end\"></ion-spinner>\r\n</ion-item>","import { Component, OnInit, Input, OnDestroy, NgZone, ChangeDetectionStrategy, ChangeDetectorRef } from '@angular/core';\r\nimport { IRegistration, SyncStatus } from 'src/app/modules/common-registration/registration.models';\r\nimport { ProgressService } from 'src/app/modules/common-registration/registration.services';\r\nimport { Subscription } from 'rxjs';\r\nimport { RegistrationService } from '../../../../modules/registration/services/registration.service';\r\nimport { map, filter } from 'rxjs/operators';\r\n\r\n@Component({\r\n  selector: 'app-sync-item',\r\n  templateUrl: './sync-item.component.html',\r\n  styleUrls: ['./sync-item.component.scss'],changeDetection: ChangeDetectionStrategy.OnPush,\r\n})\r\nexport class SyncItemComponent implements OnInit, OnDestroy {\r\n  @Input() registration: IRegistration;\r\n  private subscriptions: Subscription[] = [];\r\n  loading: boolean;\r\n  isDraft = false;\r\n\r\n  constructor(\r\n    private registrationService: RegistrationService,\r\n    private progressService: ProgressService,\r\n    private cdr: ChangeDetectorRef,\r\n  ) {}\r\n\r\n  ngOnInit() {\r\n\r\n    this.isDraft = this.registration.syncStatus === SyncStatus.Draft;\r\n    this.loading = !this.isDraft;\r\n    this.subscriptions.push(\r\n      this.registrationService\r\n        .getRegistrationsToSync()\r\n        .pipe(\r\n          map((val: IRegistration[]) =>\r\n            val.find((item) => item.id === this.registration.id)\r\n          ),\r\n          filter((x) => !!x)\r\n        )\r\n        .subscribe((val) => {\r\n          this.registration = val;\r\n          this.isDraft = this.registration.syncStatus === SyncStatus.Draft;\r\n          this.cdr.detectChanges();\r\n        })\r\n    );\r\n    this.subscriptions.push(\r\n      this.progressService.registrationSyncProgress$.subscribe((val) => {\r\n        this.loading = val.inProgress;\r\n        this.cdr.detectChanges();\r\n      })\r\n    );\r\n  }\r\n\r\n  ngOnDestroy(): void {\r\n    for (const subscription of this.subscriptions) {\r\n      subscription.unsubscribe();\r\n    }\r\n  }\r\n\r\n  getLocationName(reg: IRegistration) {\r\n    return reg.request.ObsLocation\r\n      ? reg.request.ObsLocation.LocationName ||\r\n          reg.request.ObsLocation.LocationDescription\r\n      : '';\r\n  }\r\n}","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\nimport { MyObservationsPage } from './my-observations.page';\r\nimport { SharedModule } from '../../modules/shared/shared.module';\r\nimport { SharedComponentsModule } from '../../modules/registration/shared-components.module';\r\nimport { FullscreenImageModalPageModule } from '../modal-pages/fullscreen-image-modal/fullscreen-image-modal.module';\r\nimport { AuthGuard } from '../../core/guards/auth.guard';\r\nimport { SyncItemComponent } from './components/sync-item/sync-item.component';\r\nimport { DraftListComponent } from './components/draft-list/draft-list.component';\r\nimport { SentListComponent } from './components/sent-list/sent-list.component';\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: '',\r\n    component: MyObservationsPage,\r\n    canActivate: [AuthGuard]\r\n  }\r\n];\r\n\r\n@NgModule({\r\n  imports: [\r\n    SharedModule,\r\n    SharedComponentsModule,\r\n    FullscreenImageModalPageModule,\r\n    RouterModule.forChild(routes)\r\n  ],\r\n  declarations: [\r\n    MyObservationsPage,\r\n    SyncItemComponent,\r\n    DraftListComponent,\r\n    SentListComponent\r\n  ]\r\n})\r\nexport class MyObservationsPageModule {}\r\n","<!-- shows lists of all registrations created: Drafts, registrations in sync and published registrations -->\r\n<ion-header>\r\n  <ion-toolbar appHeaderColor mode=\"ios\">\r\n    <ion-buttons slot=\"start\">\r\n      <ion-back-button text=\"\" defaultHref=\"/\"></ion-back-button>\r\n    </ion-buttons>\r\n    <ion-title>{{ 'MY_OBSERVATIONS.TITLE' | translate }}</ion-title>\r\n  </ion-toolbar>\r\n</ion-header>\r\n<ion-content>\r\n  <app-refresh-with-cancel [refreshFunc]=\"refreshFunc\"></app-refresh-with-cancel>\r\n  <app-draft-list (isEmpty)=\"refreshDraftEmptyState($event)\"></app-draft-list>\r\n  <app-sent-list (isEmpty)=\"refreshSentEmptyState($event)\"></app-sent-list>\r\n  <ion-grid *ngIf=\"draftIsEmpty && sentRegistrationsIsEmpty\" class=\"full-grid\">\r\n    <ion-row class=\"full-grid-row\">\r\n      <ion-col class=\"ion-text-center ion-align-self-center\">\r\n        <svg-icon src=\"/assets/images/empty-states/no-my-observations.svg\"></svg-icon>\r\n      </ion-col>\r\n    </ion-row>\r\n    <ion-row class=\"full-grid-row\">\r\n      <ion-col class=\"ion-text-center ion-margin-horizontal\">\r\n        <h2> {{ 'MY_OBSERVATIONS.NO_OBSERVATIONS' | translate }}</h2>\r\n        <h3 class=\"ion-text-wrap\">{{'MY_OBSERVATIONS.NO_OBSERVATIONS_TEXT'|translate}}</h3>\r\n      </ion-col>\r\n    </ion-row>\r\n  </ion-grid>\r\n</ion-content>\r\n<app-add-menu></app-add-menu>\r\n","import { Component, ViewChild, ChangeDetectionStrategy } from '@angular/core';\r\nimport { RegistrationService } from '../../modules/registration/services/registration.service';\r\nimport { IonContent, IonInfiniteScroll } from '@ionic/angular';\r\nimport { SentListComponent } from './components/sent-list/sent-list.component';\r\n\r\n@Component({\r\n  selector: 'app-my-observations',\r\n  templateUrl: './my-observations.page.html',\r\n  styleUrls: ['./my-observations.page.scss'],\r\n  changeDetection: ChangeDetectionStrategy.OnPush\r\n})\r\nexport class MyObservationsPage {\r\n  @ViewChild(IonContent, { static: true }) content: IonContent;\r\n  @ViewChild(IonInfiniteScroll, { static: false }) scroll: IonInfiniteScroll;\r\n  @ViewChild(SentListComponent, { static: false })\r\n  sentListComponent: SentListComponent;\r\n\r\n  refreshFunc = this.refresh.bind(this);\r\n  draftIsEmpty = false;\r\n  sentRegistrationsIsEmpty = false;\r\n\r\n  constructor(private registrationService: RegistrationService) {}\r\n\r\n  async refresh(cancelPromise: Promise<void>): Promise<void> {\r\n    await this.registrationService.syncRegistrations(cancelPromise);\r\n\r\n    await this.sentListComponent.refresh(cancelPromise);\r\n  }\r\n\r\n  refreshDraftEmptyState(isEmpty: boolean): void {\r\n    this.draftIsEmpty = isEmpty;\r\n  }\r\n\r\n  refreshSentEmptyState(isEmpty: boolean): void {\r\n    this.sentRegistrationsIsEmpty = isEmpty;\r\n  }\r\n}\r\n"]}