{"version":3,"mappings":"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","names":["routes","path","component","_obs_location_page__WEBPACK_IMPORTED_MODULE_0__","canDeactivate","_save_as_draft_guard__WEBPACK_IMPORTED_MODULE_2__","ObsLocationPageModule","_shared_components_module__WEBPACK_IMPORTED_MODULE_1__","_angular_router__WEBPACK_IMPORTED_MODULE_4__","declarations","imports","_angular_core__WEBPACK_IMPORTED_MODULE_8__","ctx_r1","DEBUG_TAG","ObsLocationPage","registrationService","activatedRoute","ngZone","navController","fullscreenService","swipeBackService","userSettingService","regobsAuthService","fullscreen$","isFullscreen$","id","snapshot","params","getSavedRegistrationById","registration","geoHazard","_a","parseInt","userSetting$","pipe","toPromise","userSettings","currentGeoHazard","hasLocation","locationMarkerIcon","leaflet__WEBPACK_IMPORTED_MODULE_0__","iconUrl","iconSize","iconAnchor","shadowUrl","shadowSize","locationMarker","lat","request","ObsLocation","Latitude","lng","Longitude","icon","selectedLocation","Name","LocationName","LocationDescription","Id","ObsLocationID","subscription","loggedInUser$","subscribe","val","loggedInUser","run","isLoaded","unsubscribe","disableSwipeBack","enableSwipeBack","reg","event","isSaveDisabled","createNewRegistration","setLocationAndSaveRegistration","DtObsTime","navigateForward","loc","undefined","saveRegistrationAsync","selectors","viewQuery","_components_set_location_in_map_set_location_in_map_component__WEBPACK_IMPORTED_MODULE_4__"],"sources":["webpack:///src/app/modules/registration/pages/obs-location/obs-location.module.ts","webpack:///src/app/modules/registration/pages/obs-location/obs-location.page.html","webpack:///src/app/modules/registration/pages/obs-location/obs-location.page.ts"],"sourcesContent":["import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\nimport { ObsLocationPage } from './obs-location.page';\r\nimport { SharedComponentsModule } from '../../shared-components.module';\r\nimport { SaveAsDraftRouteGuard } from '../save-as-draft.guard';\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: '',\r\n    component: ObsLocationPage,\r\n    canDeactivate: [SaveAsDraftRouteGuard]\r\n  }\r\n];\r\n\r\n@NgModule({\r\n  imports: [SharedComponentsModule, RouterModule.forChild(routes)],\r\n  declarations: [ObsLocationPage]\r\n})\r\nexport class ObsLocationPageModule {}\r\n","<ion-header *ngIf=\"!(fullscreen$ | async)\">\r\n  <ion-toolbar appHeaderColor mode=\"ios\">\r\n    <ion-buttons slot=\"start\">\r\n      <ion-back-button text=\"\" defaultHref=\"/\"></ion-back-button>\r\n    </ion-buttons>\r\n    <ion-title>\r\n      {{'REGISTRATION.OBS_LOCATION.TITLE' | translate}}\r\n    </ion-title>\r\n  </ion-toolbar>\r\n</ion-header>\r\n<ion-content>\r\n  <app-set-location-in-map *ngIf=\"isLoaded\" [geoHazard]=\"geoHazard\" [locationMarker]=\"locationMarker\"\r\n    (locationSet)=\"onLocationSet($event)\" [selectedLocation]=\"selectedLocation\" [allowEditLocationName]=\"true\"\r\n    [isSaveDisabled]=\"isSaveDisabled\">\r\n  </app-set-location-in-map>\r\n</ion-content>","import { Component, OnInit, NgZone, OnDestroy, ViewChild } from '@angular/core';\r\nimport * as L from 'leaflet';\r\nimport { IRegistration } from 'src/app/modules/common-registration/registration.models';\r\nimport { RegistrationService } from '../../services/registration.service';\r\nimport { NavController } from '@ionic/angular';\r\nimport {\r\n  ObsLocationsResponseDtoV2,\r\n  ObsLocationEditModel\r\n} from '@varsom-regobs-common/regobs-api';\r\nimport { ActivatedRoute } from '@angular/router';\r\nimport { GeoHazard } from '@varsom-regobs-common/core';\r\nimport { Observable, Subscription } from 'rxjs';\r\nimport { FullscreenService } from '../../../../core/services/fullscreen/fullscreen.service';\r\nimport { SwipeBackService } from '../../../../core/services/swipe-back/swipe-back.service';\r\nimport { LoggedInUser } from '../../../login/models/logged-in-user.model';\r\nimport { SetLocationInMapComponent } from '../../components/set-location-in-map/set-location-in-map.component';\r\nimport { UserSettingService } from '../../../../core/services/user-setting/user-setting.service';\r\nimport { take } from 'rxjs/operators';\r\nimport { RegobsAuthService } from '../../../auth/services/regobs-auth.service';\r\n\r\nconst DEBUG_TAG = 'ObsLocationPage';\r\n\r\n@Component({\r\n  selector: 'app-obs-location',\r\n  templateUrl: './obs-location.page.html',\r\n  styleUrls: ['./obs-location.page.scss']\r\n})\r\nexport class ObsLocationPage implements OnInit, OnDestroy {\r\n  locationMarker: L.Marker;\r\n  isLoaded = false;\r\n  selectedLocation: ObsLocationsResponseDtoV2;\r\n  registration: IRegistration;\r\n  fullscreen$: Observable<boolean>;\r\n  geoHazard: GeoHazard;\r\n  isSaveDisabled = false;\r\n  @ViewChild(SetLocationInMapComponent)\r\n  setLocationInMapComponent: SetLocationInMapComponent;\r\n\r\n  private subscription: Subscription;\r\n  private loggedInUser: LoggedInUser;\r\n\r\n  constructor(\r\n    private registrationService: RegistrationService,\r\n    private activatedRoute: ActivatedRoute,\r\n    private ngZone: NgZone,\r\n    private navController: NavController,\r\n    private fullscreenService: FullscreenService,\r\n    private swipeBackService: SwipeBackService,\r\n    private userSettingService: UserSettingService,\r\n    private regobsAuthService: RegobsAuthService\r\n  ) {\r\n    this.fullscreen$ = this.fullscreenService.isFullscreen$;\r\n  }\r\n\r\n  async ngOnInit() {\r\n    const id = this.activatedRoute.snapshot.params['id'];\r\n    if (id) {\r\n      this.registration = await this.registrationService.getSavedRegistrationById(\r\n        id\r\n      );\r\n      this.geoHazard = this.registration?.geoHazard;\r\n    } else if (this.activatedRoute.snapshot.params['geoHazard']) {\r\n      this.geoHazard = parseInt(\r\n        this.activatedRoute.snapshot.params['geoHazard'],\r\n        10\r\n      );\r\n    }\r\n    if (this.geoHazard == null) {\r\n      // No geohazard found, use app mode\r\n      const userSettings = await this.userSettingService.userSetting$\r\n        .pipe(take(1))\r\n        .toPromise();\r\n      this.geoHazard = userSettings.currentGeoHazard[0];\r\n    }\r\n    if (this.hasLocation(this.registration)) {\r\n      const locationMarkerIcon = L.icon({\r\n        iconUrl: '/assets/icon/map/obs-location.svg',\r\n        iconSize: [25, 41],\r\n        iconAnchor: [12, 41],\r\n        shadowUrl: 'leaflet/marker-shadow.png',\r\n        shadowSize: [41, 41]\r\n      });\r\n      this.locationMarker = L.marker(\r\n        {\r\n          lat: this.registration.request.ObsLocation.Latitude,\r\n          lng: this.registration.request.ObsLocation.Longitude\r\n        },\r\n        { icon: locationMarkerIcon }\r\n      );\r\n      this.selectedLocation = {\r\n        Name:\r\n          this.registration.request.ObsLocation.LocationName ||\r\n          this.registration.request.ObsLocation.LocationDescription,\r\n        Id: this.registration.request.ObsLocation.ObsLocationID\r\n      };\r\n    }\r\n    this.subscription = this.regobsAuthService.loggedInUser$.subscribe(\r\n      (val) => {\r\n        this.loggedInUser = val;\r\n      }\r\n    );\r\n\r\n    this.ngZone.run(() => {\r\n      this.isLoaded = true;\r\n    });\r\n  }\r\n\r\n  ngOnDestroy(): void {\r\n    if (this.subscription) {\r\n      this.subscription.unsubscribe();\r\n    }\r\n  }\r\n\r\n  ionViewDidEnter() {\r\n    this.swipeBackService.disableSwipeBack();\r\n  }\r\n\r\n  ionViewWillLeave() {\r\n    this.swipeBackService.enableSwipeBack();\r\n  }\r\n\r\n  private hasLocation(reg: IRegistration) {\r\n    return (\r\n      reg &&\r\n      reg.request.ObsLocation &&\r\n      reg.request.ObsLocation.Latitude &&\r\n      reg.request.ObsLocation.Longitude\r\n    );\r\n  }\r\n\r\n  async onLocationSet(event: ObsLocationEditModel) {\r\n    this.ngZone.run(() => {\r\n      this.isSaveDisabled = true;\r\n    });\r\n    if (!this.registration) {\r\n      this.registration = this.registrationService.createNewRegistration(\r\n        this.geoHazard,\r\n      );\r\n    }\r\n    await this.setLocationAndSaveRegistration(event);\r\n    if (this.registration.request.DtObsTime) {\r\n      this.navController.navigateForward(\r\n        'registration/edit/' + this.registration.id\r\n      );\r\n    } else {\r\n      this.navController.navigateForward(\r\n        'registration/set-time/' + this.registration.id\r\n      );\r\n    }\r\n  }\r\n\r\n  private async setLocationAndSaveRegistration(loc: ObsLocationEditModel) {\r\n    if (loc === undefined || this.registration === undefined) {\r\n      return;\r\n    }\r\n    this.registration.request.ObsLocation = loc;\r\n    await this.registrationService.saveRegistrationAsync(this.registration);\r\n    this.isSaveDisabled = false;\r\n  }\r\n}\r\n"]}