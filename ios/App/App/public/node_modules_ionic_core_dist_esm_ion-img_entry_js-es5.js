(function () {
  "use strict";

  function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

  function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

  function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }

  (self["webpackChunkregobs4"] = self["webpackChunkregobs4"] || []).push([["node_modules_ionic_core_dist_esm_ion-img_entry_js"], {
    /***/
    98107: function _(__unused_webpack_module, __webpack_exports__, __webpack_require__) {
      __webpack_require__.r(__webpack_exports__);
      /* harmony export */


      __webpack_require__.d(__webpack_exports__, {
        /* harmony export */
        "ion_img": function ion_img() {
          return (
            /* binding */
            Img
          );
        }
        /* harmony export */

      });
      /* harmony import */


      var _index_7a8b7a1c_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
      /*! ./index-7a8b7a1c.js */
      76842);
      /* harmony import */


      var _ionic_global_63a97a32_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(
      /*! ./ionic-global-63a97a32.js */
      33124);

      var imgCss = ":host{display:block;-o-object-fit:contain;object-fit:contain}img{display:block;width:100%;height:100%;-o-object-fit:inherit;object-fit:inherit;-o-object-position:inherit;object-position:inherit}";

      var Img = /*#__PURE__*/function () {
        function Img(hostRef) {
          var _this = this;

          _classCallCheck(this, Img);

          (0, _index_7a8b7a1c_js__WEBPACK_IMPORTED_MODULE_0__.r)(this, hostRef);
          this.ionImgWillLoad = (0, _index_7a8b7a1c_js__WEBPACK_IMPORTED_MODULE_0__.e)(this, "ionImgWillLoad", 7);
          this.ionImgDidLoad = (0, _index_7a8b7a1c_js__WEBPACK_IMPORTED_MODULE_0__.e)(this, "ionImgDidLoad", 7);
          this.ionError = (0, _index_7a8b7a1c_js__WEBPACK_IMPORTED_MODULE_0__.e)(this, "ionError", 7);

          this.onLoad = function () {
            _this.ionImgDidLoad.emit();
          };

          this.onError = function () {
            _this.ionError.emit();
          };
        }

        _createClass(Img, [{
          key: "srcChanged",
          value: function srcChanged() {
            this.addIO();
          }
        }, {
          key: "componentDidLoad",
          value: function componentDidLoad() {
            this.addIO();
          }
        }, {
          key: "addIO",
          value: function addIO() {
            var _this2 = this;

            if (this.src === undefined) {
              return;
            }

            if (typeof window !== 'undefined' && 'IntersectionObserver' in window && 'IntersectionObserverEntry' in window && 'isIntersecting' in window.IntersectionObserverEntry.prototype) {
              this.removeIO();
              this.io = new IntersectionObserver(function (data) {
                /**
                 * On slower devices, it is possible for an intersection observer entry to contain multiple
                 * objects in the array. This happens when quickly scrolling an image into view and then out of
                 * view. In this case, the last object represents the current state of the component.
                 */
                if (data[data.length - 1].isIntersecting) {
                  _this2.load();

                  _this2.removeIO();
                }
              });
              this.io.observe(this.el);
            } else {
              // fall back to setTimeout for Safari and IE
              setTimeout(function () {
                return _this2.load();
              }, 200);
            }
          }
        }, {
          key: "load",
          value: function load() {
            this.loadError = this.onError;
            this.loadSrc = this.src;
            this.ionImgWillLoad.emit();
          }
        }, {
          key: "removeIO",
          value: function removeIO() {
            if (this.io) {
              this.io.disconnect();
              this.io = undefined;
            }
          }
        }, {
          key: "render",
          value: function render() {
            return (0, _index_7a8b7a1c_js__WEBPACK_IMPORTED_MODULE_0__.h)(_index_7a8b7a1c_js__WEBPACK_IMPORTED_MODULE_0__.H, {
              "class": (0, _ionic_global_63a97a32_js__WEBPACK_IMPORTED_MODULE_1__.b)(this)
            }, (0, _index_7a8b7a1c_js__WEBPACK_IMPORTED_MODULE_0__.h)("img", {
              decoding: "async",
              src: this.loadSrc,
              alt: this.alt,
              onLoad: this.onLoad,
              onError: this.loadError,
              part: "image"
            }));
          }
        }, {
          key: "el",
          get: function get() {
            return (0, _index_7a8b7a1c_js__WEBPACK_IMPORTED_MODULE_0__.i)(this);
          }
        }], [{
          key: "watchers",
          get: function get() {
            return {
              "src": ["srcChanged"]
            };
          }
        }]);

        return Img;
      }();

      Img.style = imgCss;
      /***/
    }
  }]);
})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,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LG1CQUFPTyx1REFBVyxJQUFYQSxDQUFQO0FBQTBCO0FBNUQ5QjtBQUFBO0FBQUEsZUE2RFksZUFBRztBQUFFLG1CQUFPO0FBQzdCLHFCQUFPLENBQUMsWUFBRDtBQURzQixhQUFQO0FBRXBCO0FBL0RHOztBQUFBO0FBQUEsU0FBVDs7QUFpRUF4QyxTQUFHLENBQUN5QyxLQUFKekMsR0FBWUQsTUFBWkM7OzsiLCJuYW1lcyI6WyJpbWdDc3MiLCJJbWciLCJjb25zdHJ1Y3RvciIsImhvc3RSZWYiLCJyZWdpc3Rlckluc3RhbmNlIiwiaW9uSW1nV2lsbExvYWQiLCJjcmVhdGVFdmVudCIsImlvbkltZ0RpZExvYWQiLCJpb25FcnJvciIsIm9uTG9hZCIsImVtaXQiLCJvbkVycm9yIiwic3JjQ2hhbmdlZCIsImFkZElPIiwiY29tcG9uZW50RGlkTG9hZCIsInNyYyIsInVuZGVmaW5lZCIsIndpbmRvdyIsIkludGVyc2VjdGlvbk9ic2VydmVyRW50cnkiLCJwcm90b3R5cGUiLCJyZW1vdmVJTyIsImlvIiwiSW50ZXJzZWN0aW9uT2JzZXJ2ZXIiLCJkYXRhIiwibGVuZ3RoIiwiaXNJbnRlcnNlY3RpbmciLCJsb2FkIiwib2JzZXJ2ZSIsImVsIiwic2V0VGltZW91dCIsImxvYWRFcnJvciIsImxvYWRTcmMiLCJkaXNjb25uZWN0IiwicmVuZGVyIiwiaCIsIkhvc3QiLCJjbGFzcyIsImdldElvbk1vZGUiLCJkZWNvZGluZyIsImFsdCIsInBhcnQiLCJnZXRFbGVtZW50Iiwic3R5bGUiXSwic291cmNlcyI6WyJ3ZWJwYWNrOi8vL25vZGVfbW9kdWxlcy9AaW9uaWMvY29yZS9kaXN0L2VzbS9pb24taW1nLmVudHJ5LmpzIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IHIgYXMgcmVnaXN0ZXJJbnN0YW5jZSwgZSBhcyBjcmVhdGVFdmVudCwgaCwgSCBhcyBIb3N0LCBpIGFzIGdldEVsZW1lbnQgfSBmcm9tICcuL2luZGV4LTdhOGI3YTFjLmpzJztcbmltcG9ydCB7IGIgYXMgZ2V0SW9uTW9kZSB9IGZyb20gJy4vaW9uaWMtZ2xvYmFsLTYzYTk3YTMyLmpzJztcblxuY29uc3QgaW1nQ3NzID0gXCI6aG9zdHtkaXNwbGF5OmJsb2NrOy1vLW9iamVjdC1maXQ6Y29udGFpbjtvYmplY3QtZml0OmNvbnRhaW59aW1ne2Rpc3BsYXk6YmxvY2s7d2lkdGg6MTAwJTtoZWlnaHQ6MTAwJTstby1vYmplY3QtZml0OmluaGVyaXQ7b2JqZWN0LWZpdDppbmhlcml0Oy1vLW9iamVjdC1wb3NpdGlvbjppbmhlcml0O29iamVjdC1wb3NpdGlvbjppbmhlcml0fVwiO1xuXG5jb25zdCBJbWcgPSBjbGFzcyB7XG4gIGNvbnN0cnVjdG9yKGhvc3RSZWYpIHtcbiAgICByZWdpc3Rlckluc3RhbmNlKHRoaXMsIGhvc3RSZWYpO1xuICAgIHRoaXMuaW9uSW1nV2lsbExvYWQgPSBjcmVhdGVFdmVudCh0aGlzLCBcImlvbkltZ1dpbGxMb2FkXCIsIDcpO1xuICAgIHRoaXMuaW9uSW1nRGlkTG9hZCA9IGNyZWF0ZUV2ZW50KHRoaXMsIFwiaW9uSW1nRGlkTG9hZFwiLCA3KTtcbiAgICB0aGlzLmlvbkVycm9yID0gY3JlYXRlRXZlbnQodGhpcywgXCJpb25FcnJvclwiLCA3KTtcbiAgICB0aGlzLm9uTG9hZCA9ICgpID0+IHtcbiAgICAgIHRoaXMuaW9uSW1nRGlkTG9hZC5lbWl0KCk7XG4gICAgfTtcbiAgICB0aGlzLm9uRXJyb3IgPSAoKSA9PiB7XG4gICAgICB0aGlzLmlvbkVycm9yLmVtaXQoKTtcbiAgICB9O1xuICB9XG4gIHNyY0NoYW5nZWQoKSB7XG4gICAgdGhpcy5hZGRJTygpO1xuICB9XG4gIGNvbXBvbmVudERpZExvYWQoKSB7XG4gICAgdGhpcy5hZGRJTygpO1xuICB9XG4gIGFkZElPKCkge1xuICAgIGlmICh0aGlzLnNyYyA9PT0gdW5kZWZpbmVkKSB7XG4gICAgICByZXR1cm47XG4gICAgfVxuICAgIGlmICh0eXBlb2Ygd2luZG93ICE9PSAndW5kZWZpbmVkJyAmJlxuICAgICAgJ0ludGVyc2VjdGlvbk9ic2VydmVyJyBpbiB3aW5kb3cgJiZcbiAgICAgICdJbnRlcnNlY3Rpb25PYnNlcnZlckVudHJ5JyBpbiB3aW5kb3cgJiZcbiAgICAgICdpc0ludGVyc2VjdGluZycgaW4gd2luZG93LkludGVyc2VjdGlvbk9ic2VydmVyRW50cnkucHJvdG90eXBlKSB7XG4gICAgICB0aGlzLnJlbW92ZUlPKCk7XG4gICAgICB0aGlzLmlvID0gbmV3IEludGVyc2VjdGlvbk9ic2VydmVyKGRhdGEgPT4ge1xuICAgICAgICAvKipcbiAgICAgICAgICogT24gc2xvd2VyIGRldmljZXMsIGl0IGlzIHBvc3NpYmxlIGZvciBhbiBpbnRlcnNlY3Rpb24gb2JzZXJ2ZXIgZW50cnkgdG8gY29udGFpbiBtdWx0aXBsZVxuICAgICAgICAgKiBvYmplY3RzIGluIHRoZSBhcnJheS4gVGhpcyBoYXBwZW5zIHdoZW4gcXVpY2tseSBzY3JvbGxpbmcgYW4gaW1hZ2UgaW50byB2aWV3IGFuZCB0aGVuIG91dCBvZlxuICAgICAgICAgKiB2aWV3LiBJbiB0aGlzIGNhc2UsIHRoZSBsYXN0IG9iamVjdCByZXByZXNlbnRzIHRoZSBjdXJyZW50IHN0YXRlIG9mIHRoZSBjb21wb25lbnQuXG4gICAgICAgICAqL1xuICAgICAgICBpZiAoZGF0YVtkYXRhLmxlbmd0aCAtIDFdLmlzSW50ZXJzZWN0aW5nKSB7XG4gICAgICAgICAgdGhpcy5sb2FkKCk7XG4gICAgICAgICAgdGhpcy5yZW1vdmVJTygpO1xuICAgICAgICB9XG4gICAgICB9KTtcbiAgICAgIHRoaXMuaW8ub2JzZXJ2ZSh0aGlzLmVsKTtcbiAgICB9XG4gICAgZWxzZSB7XG4gICAgICAvLyBmYWxsIGJhY2sgdG8gc2V0VGltZW91dCBmb3IgU2FmYXJpIGFuZCBJRVxuICAgICAgc2V0VGltZW91dCgoKSA9PiB0aGlzLmxvYWQoKSwgMjAwKTtcbiAgICB9XG4gIH1cbiAgbG9hZCgpIHtcbiAgICB0aGlzLmxvYWRFcnJvciA9IHRoaXMub25FcnJvcjtcbiAgICB0aGlzLmxvYWRTcmMgPSB0aGlzLnNyYztcbiAgICB0aGlzLmlvbkltZ1dpbGxMb2FkLmVtaXQoKTtcbiAgfVxuICByZW1vdmVJTygpIHtcbiAgICBpZiAodGhpcy5pbykge1xuICAgICAgdGhpcy5pby5kaXNjb25uZWN0KCk7XG4gICAgICB0aGlzLmlvID0gdW5kZWZpbmVkO1xuICAgIH1cbiAgfVxuICByZW5kZXIoKSB7XG4gICAgcmV0dXJuIChoKEhvc3QsIHsgY2xhc3M6IGdldElvbk1vZGUodGhpcykgfSwgaChcImltZ1wiLCB7IGRlY29kaW5nOiBcImFzeW5jXCIsIHNyYzogdGhpcy5sb2FkU3JjLCBhbHQ6IHRoaXMuYWx0LCBvbkxvYWQ6IHRoaXMub25Mb2FkLCBvbkVycm9yOiB0aGlzLmxvYWRFcnJvciwgcGFydDogXCJpbWFnZVwiIH0pKSk7XG4gIH1cbiAgZ2V0IGVsKCkgeyByZXR1cm4gZ2V0RWxlbWVudCh0aGlzKTsgfVxuICBzdGF0aWMgZ2V0IHdhdGNoZXJzKCkgeyByZXR1cm4ge1xuICAgIFwic3JjXCI6IFtcInNyY0NoYW5nZWRcIl1cbiAgfTsgfVxufTtcbkltZy5zdHlsZSA9IGltZ0NzcztcblxuZXhwb3J0IHsgSW1nIGFzIGlvbl9pbWcgfTtcbiJdfQ==