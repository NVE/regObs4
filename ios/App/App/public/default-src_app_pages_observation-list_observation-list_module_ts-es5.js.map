{"version":3,"mappings":"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","names":["FullscreenImageModalPageModule","_angular_common__WEBPACK_IMPORTED_MODULE_2__","_ionic_angular__WEBPACK_IMPORTED_MODULE_3__","_angular_forms__WEBPACK_IMPORTED_MODULE_4__","declarations","_fullscreen_image_modal_page__WEBPACK_IMPORTED_MODULE_0__","imports","routes","path","component","_observation_list_page__WEBPACK_IMPORTED_MODULE_0__","ObservationListPageModule","_modal_pages_fullscreen_image_modal_fullscreen_image_modal_module__WEBPACK_IMPORTED_MODULE_2__","_modules_shared_shared_module__WEBPACK_IMPORTED_MODULE_1__","_angular_router__WEBPACK_IMPORTED_MODULE_4__","_angular_core__WEBPACK_IMPORTED_MODULE_12__","ctx_r4","_r2","PAGE_SIZE","MAX_OBSERVATION_COUNT","ObservationListPage","observationService","dataMarshallService","cdr","mapService","userSettingService","trackByIdFuncInternal","bind","refresh","cancelSubject","observableCancelSubject","language$","pipe","ngDestroy$","subscribe","langKey","cancelPromise","resetAndLoadObservations","content","scrollToTop","loaded","visibleObservations","undefined","forceUpdate","detectChanges","forceUpdateObservationsForCurrentGeoHazard","loadObservations","getObservationsInMap","allObservations","total","length","pageIndex","slice","setTimeout","scroll","disabled","mapView$","mapView","observations$","observations","filterObservationsWithinViewBounds","toPromise","event","startIndex","push","target","complete","view","filter","observation","bounds","contains","leaflet__WEBPACK_IMPORTED_MODULE_1__","ObsLocation","Latitude","Longitude","_","obs","uniqueObservation","src_app_core_helpers_observable_helper__WEBPACK_IMPORTED_MODULE_5__","selectors","viewQuery","_ionic_angular__WEBPACK_IMPORTED_MODULE_18__"],"sources":["webpack:///src/app/pages/modal-pages/fullscreen-image-modal/fullscreen-image-modal.module.ts","webpack:///src/app/pages/observation-list/observation-list.module.ts","webpack:///src/app/pages/observation-list/observation-list.page.html","webpack:///src/app/pages/observation-list/observation-list.page.ts"],"sourcesContent":["import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { FormsModule } from '@angular/forms';\r\nimport { IonicModule } from '@ionic/angular';\r\nimport { FullscreenImageModalPage } from './fullscreen-image-modal.page';\r\n\r\n@NgModule({\r\n  imports: [CommonModule, IonicModule, FormsModule],\r\n  declarations: [FullscreenImageModalPage],\r\n  entryComponents: [FullscreenImageModalPage]\r\n})\r\nexport class FullscreenImageModalPageModule {}\r\n","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\nimport { ObservationListPage } from './observation-list.page';\r\nimport { SharedModule } from '../../modules/shared/shared.module';\r\nimport { FullscreenImageModalPageModule } from '../modal-pages/fullscreen-image-modal/fullscreen-image-modal.module';\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: '',\r\n    component: ObservationListPage\r\n  }\r\n];\r\n\r\n@NgModule({\r\n  imports: [\r\n    FullscreenImageModalPageModule,\r\n    SharedModule,\r\n    RouterModule.forChild(routes)\r\n  ],\r\n  declarations: [ObservationListPage]\r\n})\r\nexport class ObservationListPageModule {}\r\n","<app-header title=\"{{ 'OBSERVATION_LIST.OBSERVATIONS' | translate }}\"></app-header>\r\n<ion-content>\r\n  <app-refresh-with-cancel [refreshFunc]=\"refreshFunc\"></app-refresh-with-cancel>\r\n  <ng-container *ngIf=\"visibleObservations !== undefined\">\r\n    <ion-list [ngClass]=\"{ loaded: loaded }\" *ngIf=\"(visibleObservations.length > 0) else empty\">\r\n      <ion-item-divider>\r\n        <h3 class=\"ion-text-uppercase\">{{'OBSERVATION_LIST.IN_MAP_VIEW' | translate }}</h3>\r\n      </ion-item-divider>\r\n      <app-observation-list-card *ngFor=\"let obs of visibleObservations; trackBy: trackByIdFunc;\" [obs]=\"obs\">\r\n      </app-observation-list-card>\r\n    </ion-list>\r\n    <ion-infinite-scroll (ionInfinite)=\"loadNextPage($event)\" >\r\n      <ion-infinite-scroll-content>\r\n      </ion-infinite-scroll-content>\r\n    </ion-infinite-scroll>\r\n    <ion-row *ngIf=\"maxCountReached\" class=\"full-grid-row max-count-reached\">\r\n      <ion-col class=\"ion-text-center ion-margin-horizontal\">\r\n        <h2>{{ 'OBSERVATION_LIST.MAX_COUNT_REACHED_HEADER' | translate }}</h2>\r\n        <h3 class=\"ion-text-wrap\"> {{ 'OBSERVATION_LIST.MAX_COUNT_REACHED_TEXT' | translate: {maxCount: maxCount} }}</h3>\r\n      </ion-col>\r\n    </ion-row>\r\n  </ng-container>\r\n  <div class=\"loading-sceleton\" *ngIf=\"!loaded\">\r\n    <ion-item-divider>\r\n      <h3 class=\"ion-text-uppercase\">{{'OBSERVATION_LIST.IN_MAP_VIEW' | translate }}</h3>\r\n    </ion-item-divider>\r\n    <app-observation-skeleton></app-observation-skeleton>\r\n    <app-observation-skeleton></app-observation-skeleton>\r\n    <app-observation-skeleton></app-observation-skeleton>\r\n  </div>\r\n  <app-geo-fab slot=\"fixed\"></app-geo-fab>\r\n</ion-content>\r\n<app-add-menu></app-add-menu>\r\n<ng-template #empty>\r\n  <ion-grid *ngIf=\"loaded\" class=\"full-grid\">\r\n    <ion-row class=\"full-grid-row\">\r\n      <ion-col class=\"ion-align-self-center\">\r\n        <div class=\"center\">\r\n          <svg-icon class=\"rectangle\" src=\"/assets/images/empty-states/rectangle.svg\"></svg-icon>\r\n          <svg-icon class=\"pin1\" src=\"/assets/images/empty-states/pin.svg\"></svg-icon>\r\n          <svg-icon class=\"pin2\" src=\"/assets/images/empty-states/pin.svg\"></svg-icon>\r\n          <svg-icon class=\"pin3\" src=\"/assets/images/empty-states/pin.svg\"></svg-icon>\r\n        </div>\r\n      </ion-col>\r\n    </ion-row>\r\n    <ion-row class=\"full-grid-row\">\r\n      <ion-col class=\"ion-text-center ion-margin-horizontal\">\r\n        <h2> {{ 'OBSERVATION_LIST.NO_OBSERVATIONS' | translate }}</h2>\r\n        <h3 class=\"ion-text-wrap\">{{'OBSERVATION_LIST.NO_OBSERVATIONS_TEXT'|translate}}</h3>\r\n      </ion-col>\r\n    </ion-row>\r\n  </ion-grid>\r\n</ng-template>","import {\r\n  Component,\r\n  OnInit,\r\n  ViewChild,\r\n  ChangeDetectionStrategy,\r\n  ChangeDetectorRef\r\n} from '@angular/core';\r\nimport { ObservationService } from '../../core/services/observation/observation.service';\r\nimport * as L from 'leaflet';\r\nimport { Subject } from 'rxjs';\r\nimport { map, take, switchMap, takeUntil } from 'rxjs/operators';\r\nimport { MapService } from '../../modules/map/services/map/map.service';\r\nimport { IMapView } from '../../modules/map/services/map/map-view.interface';\r\nimport { RegistrationViewModel } from '@varsom-regobs-common/regobs-api';\r\nimport { IonContent, IonInfiniteScroll } from '@ionic/angular';\r\nimport { DataMarshallService } from '../../core/services/data-marshall/data-marshall.service';\r\nimport { UserSettingService } from 'src/app/core/services/user-setting/user-setting.service';\r\nimport { NgDestoryBase } from 'src/app/core/helpers/observable-helper';\r\nimport { LangKey } from '@varsom-regobs-common/core';\r\n\r\nconst PAGE_SIZE = 10;\r\nconst MAX_OBSERVATION_COUNT = 100;\r\n\r\n@Component({\r\n  selector: 'app-observation-list',\r\n  templateUrl: './observation-list.page.html',\r\n  styleUrls: ['./observation-list.page.scss'],\r\n  changeDetection: ChangeDetectionStrategy.OnPush\r\n})\r\nexport class ObservationListPage extends NgDestoryBase implements OnInit {\r\n  visibleObservations: RegistrationViewModel[];\r\n  allObservations: RegistrationViewModel[];\r\n  loaded = false;\r\n  cancelSubject: Subject<unknown>;\r\n  private pageIndex = 0;\r\n  private total: number;\r\n  private langKey: LangKey;\r\n\r\n  @ViewChild(IonContent, { static: true }) content: IonContent;\r\n  @ViewChild(IonInfiniteScroll, { static: false }) scroll: IonInfiniteScroll;\r\n\r\n  trackByIdFunc = this.trackByIdFuncInternal.bind(this);\r\n  refreshFunc = this.refresh.bind(this);\r\n\r\n  constructor(\r\n    private observationService: ObservationService,\r\n    private dataMarshallService: DataMarshallService,\r\n    private cdr: ChangeDetectorRef,\r\n    private mapService: MapService,\r\n    private userSettingService: UserSettingService,\r\n  ) {\r\n    super()\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.cancelSubject = this.dataMarshallService.observableCancelSubject;\r\n    this.userSettingService.language$.pipe(takeUntil(this.ngDestroy$)).subscribe((langKey) => {\r\n      this.langKey = langKey;\r\n    })\r\n  }\r\n\r\n  refresh(cancelPromise: Promise<unknown>): void {\r\n    this.resetAndLoadObservations(true, cancelPromise);\r\n  }\r\n\r\n  ionViewWillEnter(): void {\r\n    this.content.scrollToTop();\r\n    this.resetAndLoadObservations();\r\n  }\r\n\r\n  ionViewWillLeave(): void {\r\n    this.loaded = false;\r\n    this.visibleObservations = undefined;\r\n  }\r\n\r\n  private async resetAndLoadObservations(\r\n    forceUpdate = false,\r\n    cancelPromise: Promise<unknown> = undefined\r\n  ): Promise<void> {\r\n    this.loaded = false;\r\n    this.visibleObservations = undefined;\r\n    this.cdr.detectChanges();\r\n    if (forceUpdate) {\r\n      await this.observationService.forceUpdateObservationsForCurrentGeoHazard(\r\n        cancelPromise\r\n      );\r\n    }\r\n    this.loadObservations();\r\n  }\r\n\r\n  private async loadObservations() {\r\n    this.allObservations = await this.getObservationsInMap();\r\n    this.total = this.allObservations.length;\r\n    this.pageIndex = 0;\r\n    this.visibleObservations = this.allObservations.slice(0, 10);\r\n\r\n    this.cdr.detectChanges();\r\n    setTimeout(() => {\r\n      this.loaded = true;\r\n      this.scroll.disabled = false;\r\n      this.cdr.detectChanges();\r\n    }, 500);\r\n  }\r\n\r\n  private getObservationsInMap(): Promise<RegistrationViewModel[]> {\r\n    return this.mapService.mapView$\r\n      .pipe(\r\n        switchMap((mapView: IMapView) =>\r\n          this.observationService.observations$.pipe(\r\n            map((observations) =>\r\n              this.filterObservationsWithinViewBounds(observations, mapView)\r\n            ),\r\n            map((observations) => observations.slice(0, MAX_OBSERVATION_COUNT))\r\n          )\r\n        ),\r\n        take(1)\r\n      )\r\n      .toPromise();\r\n  }\r\n\r\n  loadNextPage(event: CustomEvent<IonInfiniteScroll>): void {\r\n    this.pageIndex += 1;\r\n    const startIndex = this.pageIndex * PAGE_SIZE;\r\n    this.visibleObservations.push(\r\n      ...this.allObservations.slice(startIndex, startIndex + PAGE_SIZE)\r\n    );\r\n\r\n    const target: IonInfiniteScroll = (event.target as unknown) as IonInfiniteScroll;\r\n    target.complete();\r\n    if (this.visibleObservations.length >= this.total) {\r\n      target.disabled = true; //we have reached the end, so no need to load more pages from now\r\n    }\r\n  }\r\n\r\n  get maxCountReached(): boolean {\r\n    return this.visibleObservations.length >= MAX_OBSERVATION_COUNT;\r\n  }\r\n\r\n  get maxCount(): number {\r\n    return MAX_OBSERVATION_COUNT;\r\n  }\r\n\r\n  private filterObservationsWithinViewBounds(\r\n    observations: RegistrationViewModel[],\r\n    view: IMapView\r\n  ) {\r\n    return observations.filter(\r\n      (observation) =>\r\n        !view ||\r\n        view.bounds.contains(\r\n          L.latLng(\r\n            observation.ObsLocation.Latitude,\r\n            observation.ObsLocation.Longitude\r\n          )\r\n        )\r\n    );\r\n  }\r\n\r\n  private trackByIdFuncInternal(_, obs: RegistrationViewModel) {\r\n    return obs ? this.observationService.uniqueObservation(obs, this.langKey) : undefined;\r\n  }\r\n}\r\n"]}