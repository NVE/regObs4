{"version":3,"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;UACaA;;;;;;;;;;;;;iBACHC,4BAAmBC,OAAnBD,EAA4B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uDACvB,IAAIE,OAAJ,CAAY,UAACC,OAAD,EAAUC,MAAV,EAAqB;AACpCC,iCAAS,CAACC,WAAVD,CAAsBL,kBAAtBK,CAAyCE,aAAG,EAAI;AAC5CJ,iCAAO,CAACI,GAAD,CAAPJ;AADJ,2BAEGK,aAAG,EAAI;AACNJ,gCAAM,CAACI,GAAD,CAANJ;AAHJ,2BAIGK,MAAM,CAACC,MAAPD,CAAc;AAAEE,4CAAkB,EAAE,KAAtB;AAA6BC,iCAAO,EAAE,KAAtC;AAA6CC,oCAAU,EAAE;AAAzD,yBAAdJ,EAA4ER,OAA5EQ,CAJHJ;AADG,wBADuB;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAQjC;;;iBACKS,uBAAcb,OAAda,EAAuBC,QAAvBD,EAAiC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAC7BE,wBAD6B,GACxBX,SAAS,CAACC,WAAVD,CAAsBS,aAAtBT,CAAoCE,aAAG,EAAI;AAClDQ,gCAAQ,CAACR,GAAD,CAARQ;AADO,yBAERP,aAAG,EAAI;AACNO,gCAAQ,CAAC,IAAD,EAAOP,GAAP,CAARO;AAHO,yBAIRN,MAAM,CAACC,MAAPD,CAAc;AAAEE,0CAAkB,EAAE,KAAtB;AAA6BC,+BAAO,EAAE,KAAtC;AAA6CC,kCAAU,EAAE;AAAzD,uBAAdJ,EAA4ER,OAA5EQ,CAJQJ,CADwB;AAAA,kEAMzBW,EANyB;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAOtC;;;iBACKC,oBAAWhB,OAAXgB,EAAoB;AAAA;AAAA;AAAA;AAAA;AAAA;AACtBC,4BAAM,CAACb,SAAPa,CAAiBZ,WAAjBY,CAA6BD,UAA7BC,CAAwCC,QAAQ,CAAClB,OAAO,CAACe,EAAT,EAAa,EAAb,CAAhDE;;AADsB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEzB;;;iBACKE,4BAAmB;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4BACjB,OAAOf,SAAP,KAAqB,WAArB,IAAoC,CAACA,SAAS,CAACgB,WAD9B;AAAA;AAAA;AAAA;;AAAA,4BAEXC,KAAI,CAACC,WAAL,CAAiB,+CAAjB,CAFW;;AAAA;AAAA;AAIL,6BAASL,MAAM,CAACb,SAAPa,CAAiBG,WAAjBH,CAA6BM,KAA7BN,CAAmC;AACxDO,4BAAI,EAAE;AADkD,uBAAnCP,CAAT;;AAJK;AAIfQ,gCAJe;AAAA,wDAOd;AAAEC,gCAAQ,EAAED,UAAU,CAACE;AAAvB,uBAPc;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAQxB;;;iBACKC,8BAAqB;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4BACjBC,MAAI,CAACC,aAAL,CAAmB,yBAAnB,CADiB;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAE1B;;;;QAhC+BC;;AAkCpC,UAAMC,YAAW,GAAG,IAAIlC,eAAJ,EAApB;;;;","names":["GeolocationWeb","getCurrentPosition","options","Promise","resolve","reject","navigator","geolocation","pos","err","Object","assign","enableHighAccuracy","timeout","maximumAge","watchPosition","callback","id","clearWatch","window","parseInt","checkPermissions","permissions","_this","unavailable","query","name","permission","location","state","requestPermissions","_this2","unimplemented","WebPlugin","Geolocation"],"sources":["webpack:///node_modules/@capacitor/geolocation/dist/esm/web.js"],"sourcesContent":["import { WebPlugin } from '@capacitor/core';\nexport class GeolocationWeb extends WebPlugin {\n    async getCurrentPosition(options) {\n        return new Promise((resolve, reject) => {\n            navigator.geolocation.getCurrentPosition(pos => {\n                resolve(pos);\n            }, err => {\n                reject(err);\n            }, Object.assign({ enableHighAccuracy: false, timeout: 10000, maximumAge: 0 }, options));\n        });\n    }\n    async watchPosition(options, callback) {\n        const id = navigator.geolocation.watchPosition(pos => {\n            callback(pos);\n        }, err => {\n            callback(null, err);\n        }, Object.assign({ enableHighAccuracy: false, timeout: 10000, maximumAge: 0 }, options));\n        return `${id}`;\n    }\n    async clearWatch(options) {\n        window.navigator.geolocation.clearWatch(parseInt(options.id, 10));\n    }\n    async checkPermissions() {\n        if (typeof navigator === 'undefined' || !navigator.permissions) {\n            throw this.unavailable('Permissions API not available in this browser');\n        }\n        const permission = await window.navigator.permissions.query({\n            name: 'geolocation',\n        });\n        return { location: permission.state };\n    }\n    async requestPermissions() {\n        throw this.unimplemented('Not implemented on web.');\n    }\n}\nconst Geolocation = new GeolocationWeb();\nexport { Geolocation };\n"]}