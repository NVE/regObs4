{"version":3,"mappings":"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","names":["radioIosCss","radioMdCss","Radio","constructor","hostRef","registerInstance","ionStyle","createEvent","ionFocus","ionBlur","inputId","radioButtonIds","radioGroup","checked","buttonTabindex","name","disabled","updateState","value","onFocus","emit","onBlur","setFocus","ev","stopPropagation","preventDefault","_this","el","focus","setButtonTabindex","_this2","connectedCallback","undefined","closest","addEventListener","disconnectedCallback","removeEventListener","componentWillLoad","emitStyle","render","color","mode","getIonMode","getAriaLabel","label","labelId","labelText","h","Host","role","tabindex","class","createColorClasses","hostContext","part","htmlFor","type","id","getElement","style","ios","md","RadioGroup","ionChange","radioGroupIds","allowEmptySelection","setRadioTabindex","radios","getRadios","first","find","radio","focusable","onClick","selectedRadio","target","currentValue","newValue","valueChanged","componentDidLoad","header","_this3","querySelector","Array","from","querySelectorAll","onKeydown","inSelectPopover","contains","filter","includes","index","findIndex","current","next","code","length"],"sources":["webpack:///node_modules/@ionic/core/dist/esm/ion-radio_2.entry.js"],"sourcesContent":["import { r as registerInstance, e as createEvent, h, H as Host, i as getElement } from './index-7a8b7a1c.js';\nimport { b as getIonMode } from './ionic-global-63a97a32.js';\nimport { a as addEventListener, b as removeEventListener, d as getAriaLabel } from './helpers-dd7e4b7b.js';\nimport { c as createColorClasses, h as hostContext } from './theme-ff3fc52f.js';\n\nconst radioIosCss = \":host{--inner-border-radius:50%;display:inline-block;position:relative;-webkit-box-sizing:border-box;box-sizing:border-box;-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;z-index:2}:host(.radio-disabled){pointer-events:none}.radio-icon{display:-ms-flexbox;display:flex;-ms-flex-align:center;align-items:center;-ms-flex-pack:center;justify-content:center;width:100%;height:100%;contain:layout size style}.radio-icon,.radio-inner{-webkit-box-sizing:border-box;box-sizing:border-box}label{left:0;top:0;margin-left:0;margin-right:0;margin-top:0;margin-bottom:0;position:absolute;width:100%;height:100%;border:0;background:transparent;cursor:pointer;-webkit-appearance:none;-moz-appearance:none;appearance:none;outline:none;display:-ms-flexbox;display:flex;-ms-flex-align:center;align-items:center;opacity:0}[dir=rtl] label,:host-context([dir=rtl]) label{left:unset;right:unset;right:0}label::-moz-focus-inner{border:0}input{position:absolute;top:0;left:0;right:0;bottom:0;width:100%;height:100%;margin:0;padding:0;border:0;outline:0;clip:rect(0 0 0 0);opacity:0;overflow:hidden;-webkit-appearance:none;-moz-appearance:none}:host(:focus){outline:none}:host{--color-checked:var(--ion-color-primary, #3880ff);width:15px;height:24px}:host(.ion-color.radio-checked) .radio-inner{border-color:var(--ion-color-base)}.item-radio.item-ios ion-label{margin-left:0}@supports ((-webkit-margin-start: 0) or (margin-inline-start: 0)) or (-webkit-margin-start: 0){.item-radio.item-ios ion-label{margin-left:unset;-webkit-margin-start:0;margin-inline-start:0}}.radio-inner{width:33%;height:50%}:host(.radio-checked) .radio-inner{-webkit-transform:rotate(45deg);transform:rotate(45deg);border-width:2px;border-top-width:0;border-left-width:0;border-style:solid;border-color:var(--color-checked)}:host(.radio-disabled){opacity:0.3}:host(.ion-focused) .radio-icon::after{border-radius:var(--inner-border-radius);left:-9px;top:-8px;display:block;position:absolute;width:36px;height:36px;background:var(--ion-color-primary-tint, #4c8dff);content:\\\"\\\";opacity:0.2}:host-context([dir=rtl]):host(.ion-focused) .radio-icon::after,:host-context([dir=rtl]).ion-focused .radio-icon::after{left:unset;right:unset;right:-9px}:host(.in-item){margin-left:10px;margin-right:11px;margin-top:8px;margin-bottom:8px;display:block;position:static}@supports ((-webkit-margin-start: 0) or (margin-inline-start: 0)) or (-webkit-margin-start: 0){:host(.in-item){margin-left:unset;margin-right:unset;-webkit-margin-start:10px;margin-inline-start:10px;-webkit-margin-end:11px;margin-inline-end:11px}}:host(.in-item[slot=start]){margin-left:3px;margin-right:21px;margin-top:8px;margin-bottom:8px}@supports ((-webkit-margin-start: 0) or (margin-inline-start: 0)) or (-webkit-margin-start: 0){:host(.in-item[slot=start]){margin-left:unset;margin-right:unset;-webkit-margin-start:3px;margin-inline-start:3px;-webkit-margin-end:21px;margin-inline-end:21px}}\";\n\nconst radioMdCss = \":host{--inner-border-radius:50%;display:inline-block;position:relative;-webkit-box-sizing:border-box;box-sizing:border-box;-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;z-index:2}:host(.radio-disabled){pointer-events:none}.radio-icon{display:-ms-flexbox;display:flex;-ms-flex-align:center;align-items:center;-ms-flex-pack:center;justify-content:center;width:100%;height:100%;contain:layout size style}.radio-icon,.radio-inner{-webkit-box-sizing:border-box;box-sizing:border-box}label{left:0;top:0;margin-left:0;margin-right:0;margin-top:0;margin-bottom:0;position:absolute;width:100%;height:100%;border:0;background:transparent;cursor:pointer;-webkit-appearance:none;-moz-appearance:none;appearance:none;outline:none;display:-ms-flexbox;display:flex;-ms-flex-align:center;align-items:center;opacity:0}[dir=rtl] label,:host-context([dir=rtl]) label{left:unset;right:unset;right:0}label::-moz-focus-inner{border:0}input{position:absolute;top:0;left:0;right:0;bottom:0;width:100%;height:100%;margin:0;padding:0;border:0;outline:0;clip:rect(0 0 0 0);opacity:0;overflow:hidden;-webkit-appearance:none;-moz-appearance:none}:host(:focus){outline:none}:host{--color:var(--ion-color-step-400, #999999);--color-checked:var(--ion-color-primary, #3880ff);--border-width:2px;--border-style:solid;--border-radius:50%;width:20px;height:20px}:host(.ion-color) .radio-inner{background:var(--ion-color-base)}:host(.ion-color.radio-checked) .radio-icon{border-color:var(--ion-color-base)}.radio-icon{margin-left:0;margin-right:0;margin-top:0;margin-bottom:0;border-radius:var(--border-radius);border-width:var(--border-width);border-style:var(--border-style);border-color:var(--color)}.radio-inner{border-radius:var(--inner-border-radius);width:calc(50% + var(--border-width));height:calc(50% + var(--border-width));-webkit-transform:scale3d(0, 0, 0);transform:scale3d(0, 0, 0);-webkit-transition:-webkit-transform 280ms cubic-bezier(0.4, 0, 0.2, 1);transition:-webkit-transform 280ms cubic-bezier(0.4, 0, 0.2, 1);transition:transform 280ms cubic-bezier(0.4, 0, 0.2, 1);transition:transform 280ms cubic-bezier(0.4, 0, 0.2, 1), -webkit-transform 280ms cubic-bezier(0.4, 0, 0.2, 1);background:var(--color-checked)}:host(.radio-checked) .radio-icon{border-color:var(--color-checked)}:host(.radio-checked) .radio-inner{-webkit-transform:scale3d(1, 1, 1);transform:scale3d(1, 1, 1)}:host(.radio-disabled){opacity:0.3}:host(.ion-focused) .radio-icon::after{border-radius:var(--inner-border-radius);left:-12px;top:-12px;display:block;position:absolute;width:36px;height:36px;background:var(--ion-color-primary-tint, #4c8dff);content:\\\"\\\";opacity:0.2}:host-context([dir=rtl]):host(.ion-focused) .radio-icon::after,:host-context([dir=rtl]).ion-focused .radio-icon::after{left:unset;right:unset;right:-12px}:host(.in-item){margin-left:0;margin-right:0;margin-top:9px;margin-bottom:9px;display:block;position:static}:host(.in-item[slot=start]){margin-left:4px;margin-right:36px;margin-top:11px;margin-bottom:10px}@supports ((-webkit-margin-start: 0) or (margin-inline-start: 0)) or (-webkit-margin-start: 0){:host(.in-item[slot=start]){margin-left:unset;margin-right:unset;-webkit-margin-start:4px;margin-inline-start:4px;-webkit-margin-end:36px;margin-inline-end:36px}}\";\n\nconst Radio = class {\n  constructor(hostRef) {\n    registerInstance(this, hostRef);\n    this.ionStyle = createEvent(this, \"ionStyle\", 7);\n    this.ionFocus = createEvent(this, \"ionFocus\", 7);\n    this.ionBlur = createEvent(this, \"ionBlur\", 7);\n    this.inputId = `ion-rb-${radioButtonIds++}`;\n    this.radioGroup = null;\n    /**\n     * If `true`, the radio is selected.\n     */\n    this.checked = false;\n    /**\n     * The tabindex of the radio button.\n     * @internal\n     */\n    this.buttonTabindex = -1;\n    /**\n     * The name of the control, which is submitted with the form data.\n     */\n    this.name = this.inputId;\n    /**\n     * If `true`, the user cannot interact with the radio.\n     */\n    this.disabled = false;\n    this.updateState = () => {\n      if (this.radioGroup) {\n        this.checked = this.radioGroup.value === this.value;\n      }\n    };\n    this.onFocus = () => {\n      this.ionFocus.emit();\n    };\n    this.onBlur = () => {\n      this.ionBlur.emit();\n    };\n  }\n  /** @internal */\n  async setFocus(ev) {\n    ev.stopPropagation();\n    ev.preventDefault();\n    this.el.focus();\n  }\n  /** @internal */\n  async setButtonTabindex(value) {\n    this.buttonTabindex = value;\n  }\n  connectedCallback() {\n    if (this.value === undefined) {\n      this.value = this.inputId;\n    }\n    const radioGroup = this.radioGroup = this.el.closest('ion-radio-group');\n    if (radioGroup) {\n      this.updateState();\n      addEventListener(radioGroup, 'ionChange', this.updateState);\n    }\n  }\n  disconnectedCallback() {\n    const radioGroup = this.radioGroup;\n    if (radioGroup) {\n      removeEventListener(radioGroup, 'ionChange', this.updateState);\n      this.radioGroup = null;\n    }\n  }\n  componentWillLoad() {\n    this.emitStyle();\n  }\n  emitStyle() {\n    this.ionStyle.emit({\n      'radio-checked': this.checked,\n      'interactive-disabled': this.disabled,\n    });\n  }\n  render() {\n    const { inputId, disabled, checked, color, el, buttonTabindex } = this;\n    const mode = getIonMode(this);\n    const { label, labelId, labelText } = getAriaLabel(el, inputId);\n    return (h(Host, { \"aria-checked\": `${checked}`, \"aria-hidden\": disabled ? 'true' : null, \"aria-labelledby\": label ? labelId : null, role: \"radio\", tabindex: buttonTabindex, onFocus: this.onFocus, onBlur: this.onBlur, class: createColorClasses(color, {\n        [mode]: true,\n        'in-item': hostContext('ion-item', el),\n        'interactive': true,\n        'radio-checked': checked,\n        'radio-disabled': disabled,\n      }) }, h(\"div\", { class: \"radio-icon\", part: \"container\" }, h(\"div\", { class: \"radio-inner\", part: \"mark\" }), h(\"div\", { class: \"radio-ripple\" })), h(\"label\", { htmlFor: inputId }, labelText), h(\"input\", { type: \"radio\", checked: checked, disabled: disabled, tabindex: \"-1\", id: inputId })));\n  }\n  get el() { return getElement(this); }\n  static get watchers() { return {\n    \"color\": [\"emitStyle\"],\n    \"checked\": [\"emitStyle\"],\n    \"disabled\": [\"emitStyle\"]\n  }; }\n};\nlet radioButtonIds = 0;\nRadio.style = {\n  ios: radioIosCss,\n  md: radioMdCss\n};\n\nconst RadioGroup = class {\n  constructor(hostRef) {\n    registerInstance(this, hostRef);\n    this.ionChange = createEvent(this, \"ionChange\", 7);\n    this.inputId = `ion-rg-${radioGroupIds++}`;\n    this.labelId = `${this.inputId}-lbl`;\n    /**\n     * If `true`, the radios can be deselected.\n     */\n    this.allowEmptySelection = false;\n    /**\n     * The name of the control, which is submitted with the form data.\n     */\n    this.name = this.inputId;\n    this.setRadioTabindex = (value) => {\n      const radios = this.getRadios();\n      // Get the first radio that is not disabled and the checked one\n      const first = radios.find(radio => !radio.disabled);\n      const checked = radios.find(radio => (radio.value === value && !radio.disabled));\n      if (!first && !checked) {\n        return;\n      }\n      // If an enabled checked radio exists, set it to be the focusable radio\n      // otherwise we default to focus the first radio\n      const focusable = checked || first;\n      for (const radio of radios) {\n        const tabindex = radio === focusable ? 0 : -1;\n        radio.setButtonTabindex(tabindex);\n      }\n    };\n    this.onClick = (ev) => {\n      ev.preventDefault();\n      const selectedRadio = ev.target && ev.target.closest('ion-radio');\n      if (selectedRadio) {\n        const currentValue = this.value;\n        const newValue = selectedRadio.value;\n        if (newValue !== currentValue) {\n          this.value = newValue;\n        }\n        else if (this.allowEmptySelection) {\n          this.value = undefined;\n        }\n      }\n    };\n  }\n  valueChanged(value) {\n    this.setRadioTabindex(value);\n    this.ionChange.emit({ value });\n  }\n  componentDidLoad() {\n    this.setRadioTabindex(this.value);\n  }\n  async connectedCallback() {\n    // Get the list header if it exists and set the id\n    // this is used to set aria-labelledby\n    const header = this.el.querySelector('ion-list-header') || this.el.querySelector('ion-item-divider');\n    if (header) {\n      const label = this.label = header.querySelector('ion-label');\n      if (label) {\n        this.labelId = label.id = this.name + '-lbl';\n      }\n    }\n  }\n  getRadios() {\n    return Array.from(this.el.querySelectorAll('ion-radio'));\n  }\n  onKeydown(ev) {\n    const inSelectPopover = !!this.el.closest('ion-select-popover');\n    if (ev.target && !this.el.contains(ev.target)) {\n      return;\n    }\n    // Get all radios inside of the radio group and then\n    // filter out disabled radios since we need to skip those\n    const radios = this.getRadios().filter(radio => !radio.disabled);\n    // Only move the radio if the current focus is in the radio group\n    if (ev.target && radios.includes(ev.target)) {\n      const index = radios.findIndex(radio => radio === ev.target);\n      const current = radios[index];\n      let next;\n      // If hitting arrow down or arrow right, move to the next radio\n      // If we're on the last radio, move to the first radio\n      if (['ArrowDown', 'ArrowRight'].includes(ev.code)) {\n        next = (index === radios.length - 1)\n          ? radios[0]\n          : radios[index + 1];\n      }\n      // If hitting arrow up or arrow left, move to the previous radio\n      // If we're on the first radio, move to the last radio\n      if (['ArrowUp', 'ArrowLeft'].includes(ev.code)) {\n        next = (index === 0)\n          ? radios[radios.length - 1]\n          : radios[index - 1];\n      }\n      if (next && radios.includes(next)) {\n        next.setFocus(ev);\n        if (!inSelectPopover) {\n          this.value = next.value;\n        }\n      }\n      // Update the radio group value when a user presses the\n      // space bar on top of a selected radio\n      if (['Space'].includes(ev.code)) {\n        this.value = (this.allowEmptySelection && this.value !== undefined)\n          ? undefined\n          : current.value;\n        // Prevent browsers from jumping\n        // to the bottom of the screen\n        ev.preventDefault();\n      }\n    }\n  }\n  render() {\n    const { label, labelId } = this;\n    const mode = getIonMode(this);\n    return (h(Host, { role: \"radiogroup\", \"aria-labelledby\": label ? labelId : null, onClick: this.onClick, class: mode }));\n  }\n  get el() { return getElement(this); }\n  static get watchers() { return {\n    \"value\": [\"valueChanged\"]\n  }; }\n};\nlet radioGroupIds = 0;\n\nexport { Radio as ion_radio, RadioGroup as ion_radio_group };\n"]}