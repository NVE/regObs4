(function () {
  "use strict";

  function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

  function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

  function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

  function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }

  (self["webpackChunkregobs4"] = self["webpackChunkregobs4"] || []).push([["node_modules_ionic_core_dist_esm_ion-ripple-effect_entry_js"], {
    /***/
    42886: function _(__unused_webpack_module, __webpack_exports__, __webpack_require__) {
      __webpack_require__.r(__webpack_exports__);
      /* harmony export */


      __webpack_require__.d(__webpack_exports__, {
        /* harmony export */
        "ion_ripple_effect": function ion_ripple_effect() {
          return (
            /* binding */
            RippleEffect
          );
        }
        /* harmony export */

      });
      /* harmony import */


      var C_Repos_regobs_regObs4_node_modules_angular_devkit_build_angular_node_modules_babel_runtime_helpers_esm_asyncToGenerator__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
      /*! ./node_modules/@angular-devkit/build-angular/node_modules/@babel/runtime/helpers/esm/asyncToGenerator */
      80151);
      /* harmony import */


      var _index_7a8b7a1c_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(
      /*! ./index-7a8b7a1c.js */
      76842);
      /* harmony import */


      var _ionic_global_63a97a32_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(
      /*! ./ionic-global-63a97a32.js */
      33124);

      var rippleEffectCss = ":host{left:0;right:0;top:0;bottom:0;position:absolute;contain:strict;pointer-events:none}:host(.unbounded){contain:layout size style}.ripple-effect{border-radius:50%;position:absolute;background-color:currentColor;color:inherit;contain:strict;opacity:0;-webkit-animation:225ms rippleAnimation forwards, 75ms fadeInAnimation forwards;animation:225ms rippleAnimation forwards, 75ms fadeInAnimation forwards;will-change:transform, opacity;pointer-events:none}.fade-out{-webkit-transform:translate(var(--translate-end)) scale(var(--final-scale, 1));transform:translate(var(--translate-end)) scale(var(--final-scale, 1));-webkit-animation:150ms fadeOutAnimation forwards;animation:150ms fadeOutAnimation forwards}@-webkit-keyframes rippleAnimation{from{-webkit-animation-timing-function:cubic-bezier(0.4, 0, 0.2, 1);animation-timing-function:cubic-bezier(0.4, 0, 0.2, 1);-webkit-transform:scale(1);transform:scale(1)}to{-webkit-transform:translate(var(--translate-end)) scale(var(--final-scale, 1));transform:translate(var(--translate-end)) scale(var(--final-scale, 1))}}@keyframes rippleAnimation{from{-webkit-animation-timing-function:cubic-bezier(0.4, 0, 0.2, 1);animation-timing-function:cubic-bezier(0.4, 0, 0.2, 1);-webkit-transform:scale(1);transform:scale(1)}to{-webkit-transform:translate(var(--translate-end)) scale(var(--final-scale, 1));transform:translate(var(--translate-end)) scale(var(--final-scale, 1))}}@-webkit-keyframes fadeInAnimation{from{-webkit-animation-timing-function:linear;animation-timing-function:linear;opacity:0}to{opacity:0.16}}@keyframes fadeInAnimation{from{-webkit-animation-timing-function:linear;animation-timing-function:linear;opacity:0}to{opacity:0.16}}@-webkit-keyframes fadeOutAnimation{from{-webkit-animation-timing-function:linear;animation-timing-function:linear;opacity:0.16}to{opacity:0}}@keyframes fadeOutAnimation{from{-webkit-animation-timing-function:linear;animation-timing-function:linear;opacity:0.16}to{opacity:0}}";

      var RippleEffect = /*#__PURE__*/function () {
        function RippleEffect(hostRef) {
          _classCallCheck(this, RippleEffect);

          (0, _index_7a8b7a1c_js__WEBPACK_IMPORTED_MODULE_1__.r)(this, hostRef);
          /**
           * Sets the type of ripple-effect:
           *
           * - `bounded`: the ripple effect expands from the user's click position
           * - `unbounded`: the ripple effect expands from the center of the button and overflows the container.
           *
           * NOTE: Surfaces for bounded ripples should have the overflow property set to hidden,
           * while surfaces for unbounded ripples should have it set to visible.
           */

          this.type = 'bounded';
        }
        /**
         * Adds the ripple effect to the parent element.
         *
         * @param x The horizontal coordinate of where the ripple should start.
         * @param y The vertical coordinate of where the ripple should start.
         */


        _createClass(RippleEffect, [{
          key: "addRipple",
          value: function addRipple(x, y) {
            var _this = this;

            return (0, C_Repos_regobs_regObs4_node_modules_angular_devkit_build_angular_node_modules_babel_runtime_helpers_esm_asyncToGenerator__WEBPACK_IMPORTED_MODULE_0__["default"])( /*#__PURE__*/regeneratorRuntime.mark(function _callee() {
              return regeneratorRuntime.wrap(function _callee$(_context) {
                while (1) {
                  switch (_context.prev = _context.next) {
                    case 0:
                      return _context.abrupt("return", new Promise(function (resolve) {
                        (0, _index_7a8b7a1c_js__WEBPACK_IMPORTED_MODULE_1__.f)(function () {
                          var rect = _this.el.getBoundingClientRect();

                          var width = rect.width;
                          var height = rect.height;
                          var hypotenuse = Math.sqrt(width * width + height * height);
                          var maxDim = Math.max(height, width);
                          var maxRadius = _this.unbounded ? maxDim : hypotenuse + PADDING;
                          var initialSize = Math.floor(maxDim * INITIAL_ORIGIN_SCALE);
                          var finalScale = maxRadius / initialSize;
                          var posX = x - rect.left;
                          var posY = y - rect.top;

                          if (_this.unbounded) {
                            posX = width * 0.5;
                            posY = height * 0.5;
                          }

                          var styleX = posX - initialSize * 0.5;
                          var styleY = posY - initialSize * 0.5;
                          var moveX = width * 0.5 - posX;
                          var moveY = height * 0.5 - posY;
                          (0, _index_7a8b7a1c_js__WEBPACK_IMPORTED_MODULE_1__.c)(function () {
                            var div = document.createElement('div');
                            div.classList.add('ripple-effect');
                            var style = div.style;
                            style.top = styleY + 'px';
                            style.left = styleX + 'px';
                            style.width = style.height = initialSize + 'px';
                            style.setProperty('--final-scale', "".concat(finalScale));
                            style.setProperty('--translate-end', "".concat(moveX, "px, ").concat(moveY, "px"));
                            var container = _this.el.shadowRoot || _this.el;
                            container.appendChild(div);
                            setTimeout(function () {
                              resolve(function () {
                                removeRipple(div);
                              });
                            }, 225 + 100);
                          });
                        });
                      }));

                    case 1:
                    case "end":
                      return _context.stop();
                  }
                }
              }, _callee);
            }))();
          }
        }, {
          key: "unbounded",
          get: function get() {
            return this.type === 'unbounded';
          }
        }, {
          key: "render",
          value: function render() {
            var _class;

            var mode = (0, _ionic_global_63a97a32_js__WEBPACK_IMPORTED_MODULE_2__.b)(this);
            return (0, _index_7a8b7a1c_js__WEBPACK_IMPORTED_MODULE_1__.h)(_index_7a8b7a1c_js__WEBPACK_IMPORTED_MODULE_1__.H, {
              role: "presentation",
              "class": (_class = {}, _defineProperty(_class, mode, true), _defineProperty(_class, 'unbounded', this.unbounded), _class)
            });
          }
        }, {
          key: "el",
          get: function get() {
            return (0, _index_7a8b7a1c_js__WEBPACK_IMPORTED_MODULE_1__.i)(this);
          }
        }]);

        return RippleEffect;
      }();

      var removeRipple = function removeRipple(ripple) {
        ripple.classList.add('fade-out');
        setTimeout(function () {
          ripple.remove();
        }, 200);
      };

      var PADDING = 10;
      var INITIAL_ORIGIN_SCALE = 0.5;
      RippleEffect.style = rippleEffectCss;
      /***/
    }
  }]);
})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,