"use strict";
(self["webpackChunkregobs4"] = self["webpackChunkregobs4"] || []).push([["node_modules_ionic_core_dist_esm_ion-range_entry_js"],{

/***/ 6231:
/*!**************************************************************!*\
  !*** ./node_modules/@ionic/core/dist/esm/ion-range.entry.js ***!
  \**************************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "ion_range": function() { return /* binding */ Range; }
/* harmony export */ });
/* harmony import */ var C_Repos_regobs_regObs4_node_modules_angular_devkit_build_angular_node_modules_babel_runtime_helpers_esm_asyncToGenerator__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./node_modules/@angular-devkit/build-angular/node_modules/@babel/runtime/helpers/esm/asyncToGenerator */ 80151);
/* harmony import */ var _index_7a8b7a1c_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./index-7a8b7a1c.js */ 76842);
/* harmony import */ var _ionic_global_63a97a32_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./ionic-global-63a97a32.js */ 33124);
/* harmony import */ var _helpers_dd7e4b7b_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./helpers-dd7e4b7b.js */ 40693);
/* harmony import */ var _theme_ff3fc52f_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./theme-ff3fc52f.js */ 43784);





const rangeIosCss = ":host{--knob-handle-size:calc(var(--knob-size) * 2);display:-ms-flexbox;display:flex;position:relative;-ms-flex:3;flex:3;-ms-flex-align:center;align-items:center;font-family:var(--ion-font-family, inherit);-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;z-index:2}:host(.range-disabled){pointer-events:none}::slotted(ion-label){-ms-flex:initial;flex:initial}::slotted(ion-icon[slot]){font-size:24px}.range-slider{position:relative;-ms-flex:1;flex:1;width:100%;height:var(--height);contain:size layout style;cursor:-webkit-grab;cursor:grab;-ms-touch-action:pan-y;touch-action:pan-y}:host(.range-pressed) .range-slider{cursor:-webkit-grabbing;cursor:grabbing}.range-pin{position:absolute;background:var(--ion-color-base);color:var(--ion-color-contrast);text-align:center;-webkit-box-sizing:border-box;box-sizing:border-box}.range-knob-handle{left:0;top:calc((var(--height) - var(--knob-handle-size)) / 2);margin-left:calc(0px - var(--knob-handle-size) / 2);position:absolute;width:var(--knob-handle-size);height:var(--knob-handle-size);text-align:center}[dir=rtl] .range-knob-handle,:host-context([dir=rtl]) .range-knob-handle{left:unset;right:unset;right:0}@supports ((-webkit-margin-start: 0) or (margin-inline-start: 0)) or (-webkit-margin-start: 0){.range-knob-handle{margin-left:unset;-webkit-margin-start:calc(0px - var(--knob-handle-size) / 2);margin-inline-start:calc(0px - var(--knob-handle-size) / 2)}}[dir=rtl] .range-knob-handle,:host-context([dir=rtl]) .range-knob-handle{left:unset}.range-knob-handle:active,.range-knob-handle:focus{outline:none}.range-bar{border-radius:var(--bar-border-radius);left:0;top:calc((var(--height) - var(--bar-height)) / 2);position:absolute;width:100%;height:var(--bar-height);background:var(--bar-background);pointer-events:none}[dir=rtl] .range-bar,:host-context([dir=rtl]) .range-bar{left:unset;right:unset;right:0}[dir=rtl] .range-bar,:host-context([dir=rtl]) .range-bar{left:unset}.range-knob{border-radius:var(--knob-border-radius);left:calc(50% - var(--knob-size) / 2);top:calc(50% - var(--knob-size) / 2);position:absolute;width:var(--knob-size);height:var(--knob-size);background:var(--knob-background);-webkit-box-shadow:var(--knob-box-shadow);box-shadow:var(--knob-box-shadow);z-index:2;pointer-events:none}[dir=rtl] .range-knob,:host-context([dir=rtl]) .range-knob{left:unset;right:unset;right:calc(50% - var(--knob-size) / 2)}[dir=rtl] .range-knob,:host-context([dir=rtl]) .range-knob{left:unset}:host(.range-pressed) .range-bar-active{will-change:left, right}:host(.in-item){width:100%}:host(.in-item) ::slotted(ion-label){-ms-flex-item-align:center;align-self:center}:host{--knob-border-radius:50%;--knob-background:#ffffff;--knob-box-shadow:0 3px 1px rgba(0, 0, 0, 0.1), 0 4px 8px rgba(0, 0, 0, 0.13), 0 0 0 1px rgba(0, 0, 0, 0.02);--knob-size:28px;--bar-height:2px;--bar-background:rgba(var(--ion-text-color-rgb, 0, 0, 0), 0.1);--bar-background-active:var(--ion-color-primary, #3880ff);--bar-border-radius:0;--height:42px;padding-left:16px;padding-right:16px;padding-top:8px;padding-bottom:8px}@supports ((-webkit-margin-start: 0) or (margin-inline-start: 0)) or (-webkit-margin-start: 0){:host{padding-left:unset;padding-right:unset;-webkit-padding-start:16px;padding-inline-start:16px;-webkit-padding-end:16px;padding-inline-end:16px}}:host(.ion-color) .range-bar-active,:host(.ion-color) .range-tick-active{background:var(--ion-color-base)}::slotted([slot=start]){margin-left:0;margin-right:16px;margin-top:0;margin-bottom:0}@supports ((-webkit-margin-start: 0) or (margin-inline-start: 0)) or (-webkit-margin-start: 0){::slotted([slot=start]){margin-left:unset;margin-right:unset;-webkit-margin-start:0;margin-inline-start:0;-webkit-margin-end:16px;margin-inline-end:16px}}::slotted([slot=end]){margin-left:16px;margin-right:0;margin-top:0;margin-bottom:0}@supports ((-webkit-margin-start: 0) or (margin-inline-start: 0)) or (-webkit-margin-start: 0){::slotted([slot=end]){margin-left:unset;margin-right:unset;-webkit-margin-start:16px;margin-inline-start:16px;-webkit-margin-end:0;margin-inline-end:0}}:host(.range-has-pin){padding-top:20px}.range-bar-active{bottom:0;width:auto;background:var(--bar-background-active)}.range-tick{margin-left:-1px;border-radius:0;position:absolute;top:18px;width:2px;height:8px;background:rgba(var(--ion-text-color-rgb, 0, 0, 0), 0.1);pointer-events:none}@supports ((-webkit-margin-start: 0) or (margin-inline-start: 0)) or (-webkit-margin-start: 0){.range-tick{margin-left:unset;-webkit-margin-start:-1px;margin-inline-start:-1px}}.range-tick-active{background:var(--bar-background-active)}.range-pin{-webkit-transform:translate3d(0,  28px,  0) scale(0.01);transform:translate3d(0,  28px,  0) scale(0.01);padding-left:8px;padding-right:8px;padding-top:8px;padding-bottom:8px;display:inline-block;position:relative;top:-20px;min-width:28px;-webkit-transition:-webkit-transform 120ms ease;transition:-webkit-transform 120ms ease;transition:transform 120ms ease;transition:transform 120ms ease, -webkit-transform 120ms ease;background:transparent;color:var(--ion-text-color, #000);font-size:12px;text-align:center}@supports ((-webkit-margin-start: 0) or (margin-inline-start: 0)) or (-webkit-margin-start: 0){.range-pin{padding-left:unset;padding-right:unset;-webkit-padding-start:8px;padding-inline-start:8px;-webkit-padding-end:8px;padding-inline-end:8px}}.range-knob-pressed .range-pin{-webkit-transform:translate3d(0,  0,  0) scale(1);transform:translate3d(0,  0,  0) scale(1)}:host(.range-disabled){opacity:0.5}";
const rangeMdCss = ":host{--knob-handle-size:calc(var(--knob-size) * 2);display:-ms-flexbox;display:flex;position:relative;-ms-flex:3;flex:3;-ms-flex-align:center;align-items:center;font-family:var(--ion-font-family, inherit);-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;z-index:2}:host(.range-disabled){pointer-events:none}::slotted(ion-label){-ms-flex:initial;flex:initial}::slotted(ion-icon[slot]){font-size:24px}.range-slider{position:relative;-ms-flex:1;flex:1;width:100%;height:var(--height);contain:size layout style;cursor:-webkit-grab;cursor:grab;-ms-touch-action:pan-y;touch-action:pan-y}:host(.range-pressed) .range-slider{cursor:-webkit-grabbing;cursor:grabbing}.range-pin{position:absolute;background:var(--ion-color-base);color:var(--ion-color-contrast);text-align:center;-webkit-box-sizing:border-box;box-sizing:border-box}.range-knob-handle{left:0;top:calc((var(--height) - var(--knob-handle-size)) / 2);margin-left:calc(0px - var(--knob-handle-size) / 2);position:absolute;width:var(--knob-handle-size);height:var(--knob-handle-size);text-align:center}[dir=rtl] .range-knob-handle,:host-context([dir=rtl]) .range-knob-handle{left:unset;right:unset;right:0}@supports ((-webkit-margin-start: 0) or (margin-inline-start: 0)) or (-webkit-margin-start: 0){.range-knob-handle{margin-left:unset;-webkit-margin-start:calc(0px - var(--knob-handle-size) / 2);margin-inline-start:calc(0px - var(--knob-handle-size) / 2)}}[dir=rtl] .range-knob-handle,:host-context([dir=rtl]) .range-knob-handle{left:unset}.range-knob-handle:active,.range-knob-handle:focus{outline:none}.range-bar{border-radius:var(--bar-border-radius);left:0;top:calc((var(--height) - var(--bar-height)) / 2);position:absolute;width:100%;height:var(--bar-height);background:var(--bar-background);pointer-events:none}[dir=rtl] .range-bar,:host-context([dir=rtl]) .range-bar{left:unset;right:unset;right:0}[dir=rtl] .range-bar,:host-context([dir=rtl]) .range-bar{left:unset}.range-knob{border-radius:var(--knob-border-radius);left:calc(50% - var(--knob-size) / 2);top:calc(50% - var(--knob-size) / 2);position:absolute;width:var(--knob-size);height:var(--knob-size);background:var(--knob-background);-webkit-box-shadow:var(--knob-box-shadow);box-shadow:var(--knob-box-shadow);z-index:2;pointer-events:none}[dir=rtl] .range-knob,:host-context([dir=rtl]) .range-knob{left:unset;right:unset;right:calc(50% - var(--knob-size) / 2)}[dir=rtl] .range-knob,:host-context([dir=rtl]) .range-knob{left:unset}:host(.range-pressed) .range-bar-active{will-change:left, right}:host(.in-item){width:100%}:host(.in-item) ::slotted(ion-label){-ms-flex-item-align:center;align-self:center}:host{--knob-border-radius:50%;--knob-background:var(--bar-background-active);--knob-box-shadow:none;--knob-size:18px;--bar-height:2px;--bar-background:rgba(var(--ion-color-primary-rgb, 56, 128, 255), 0.26);--bar-background-active:var(--ion-color-primary, #3880ff);--bar-border-radius:0;--height:42px;--pin-background:var(--ion-color-primary, #3880ff);--pin-color:var(--ion-color-primary-contrast, #fff);padding-left:14px;padding-right:14px;padding-top:8px;padding-bottom:8px;font-size:12px}@supports ((-webkit-margin-start: 0) or (margin-inline-start: 0)) or (-webkit-margin-start: 0){:host{padding-left:unset;padding-right:unset;-webkit-padding-start:14px;padding-inline-start:14px;-webkit-padding-end:14px;padding-inline-end:14px}}:host(.ion-color) .range-bar{background:rgba(var(--ion-color-base-rgb), 0.26)}:host(.ion-color) .range-bar-active,:host(.ion-color) .range-knob,:host(.ion-color) .range-pin,:host(.ion-color) .range-pin::before,:host(.ion-color) .range-tick{background:var(--ion-color-base);color:var(--ion-color-contrast)}::slotted([slot=start]){margin-left:0;margin-right:14px;margin-top:0;margin-bottom:0}@supports ((-webkit-margin-start: 0) or (margin-inline-start: 0)) or (-webkit-margin-start: 0){::slotted([slot=start]){margin-left:unset;margin-right:unset;-webkit-margin-start:0;margin-inline-start:0;-webkit-margin-end:14px;margin-inline-end:14px}}::slotted([slot=end]){margin-left:14px;margin-right:0;margin-top:0;margin-bottom:0}@supports ((-webkit-margin-start: 0) or (margin-inline-start: 0)) or (-webkit-margin-start: 0){::slotted([slot=end]){margin-left:unset;margin-right:unset;-webkit-margin-start:14px;margin-inline-start:14px;-webkit-margin-end:0;margin-inline-end:0}}:host(.range-has-pin){padding-top:28px}.range-bar-active{bottom:0;width:auto;background:var(--bar-background-active)}.range-knob{-webkit-transform:scale(0.67);transform:scale(0.67);-webkit-transition-duration:120ms;transition-duration:120ms;-webkit-transition-property:background-color, border, -webkit-transform;transition-property:background-color, border, -webkit-transform;transition-property:transform, background-color, border;transition-property:transform, background-color, border, -webkit-transform;-webkit-transition-timing-function:ease;transition-timing-function:ease;z-index:2}.range-tick{position:absolute;top:calc((var(--height) - var(--bar-height)) / 2);width:var(--bar-height);height:var(--bar-height);background:var(--bar-background-active);z-index:1;pointer-events:none}.range-tick-active{background:transparent}.range-pin{padding-left:0;padding-right:0;padding-top:8px;padding-bottom:8px;border-radius:50%;-webkit-transform:translate3d(0,  0,  0) scale(0.01);transform:translate3d(0,  0,  0) scale(0.01);display:inline-block;position:relative;min-width:28px;height:28px;-webkit-transition:background 120ms ease, -webkit-transform 120ms ease;transition:background 120ms ease, -webkit-transform 120ms ease;transition:transform 120ms ease, background 120ms ease;transition:transform 120ms ease, background 120ms ease, -webkit-transform 120ms ease;background:var(--pin-background);color:var(--pin-color);text-align:center}.range-pin::before{left:50%;top:3px;margin-left:-13px;border-radius:50% 50% 50% 0;position:absolute;width:26px;height:26px;-webkit-transform:rotate(-45deg);transform:rotate(-45deg);-webkit-transition:background 120ms ease;transition:background 120ms ease;background:var(--pin-background);content:\"\";z-index:-1}[dir=rtl] .range-pin::before,:host-context([dir=rtl]) .range-pin::before{left:unset;right:unset;right:50%}@supports ((-webkit-margin-start: 0) or (margin-inline-start: 0)) or (-webkit-margin-start: 0){.range-pin::before{margin-left:unset;-webkit-margin-start:-13px;margin-inline-start:-13px}}[dir=rtl] .range-pin::before,:host-context([dir=rtl]) .range-pin::before{left:unset}.range-knob-pressed .range-pin{-webkit-transform:translate3d(0,  -24px,  0) scale(1);transform:translate3d(0,  -24px,  0) scale(1)}:host(:not(.range-has-pin)) .range-knob-pressed .range-knob{-webkit-transform:scale(1);transform:scale(1)}:host(.range-disabled) .range-bar-active,:host(.range-disabled) .range-bar,:host(.range-disabled) .range-tick{background-color:var(--ion-color-step-250, #bfbfbf)}:host(.range-disabled) .range-knob{-webkit-transform:scale(0.55);transform:scale(0.55);outline:5px solid #fff;background-color:var(--ion-color-step-250, #bfbfbf)}";
const Range = class {
  constructor(hostRef) {
    var _this = this;

    (0,_index_7a8b7a1c_js__WEBPACK_IMPORTED_MODULE_1__.r)(this, hostRef);
    this.ionChange = (0,_index_7a8b7a1c_js__WEBPACK_IMPORTED_MODULE_1__.e)(this, "ionChange", 7);
    this.ionStyle = (0,_index_7a8b7a1c_js__WEBPACK_IMPORTED_MODULE_1__.e)(this, "ionStyle", 7);
    this.ionFocus = (0,_index_7a8b7a1c_js__WEBPACK_IMPORTED_MODULE_1__.e)(this, "ionFocus", 7);
    this.ionBlur = (0,_index_7a8b7a1c_js__WEBPACK_IMPORTED_MODULE_1__.e)(this, "ionBlur", 7);
    this.didLoad = false;
    this.noUpdate = false;
    this.hasFocus = false;
    this.inheritedAttributes = {};
    this.ratioA = 0;
    this.ratioB = 0;
    /**
     * How long, in milliseconds, to wait to trigger the
     * `ionChange` event after each change in the range value.
     * This also impacts form bindings such as `ngModel` or `v-model`.
     */

    this.debounce = 0; // TODO: In Ionic Framework v6 this should initialize to this.rangeId like the other form components do.

    /**
     * The name of the control, which is submitted with the form data.
     */

    this.name = '';
    /**
     * Show two knobs.
     */

    this.dualKnobs = false;
    /**
     * Minimum integer value of the range.
     */

    this.min = 0;
    /**
     * Maximum integer value of the range.
     */

    this.max = 100;
    /**
     * If `true`, a pin with integer value is shown when the knob
     * is pressed.
     */

    this.pin = false;
    /**
     * If `true`, the knob snaps to tick marks evenly spaced based
     * on the step property value.
     */

    this.snaps = false;
    /**
     * Specifies the value granularity.
     */

    this.step = 1;
    /**
     * If `true`, tick marks are displayed based on the step value.
     * Only applies when `snaps` is `true`.
     */

    this.ticks = true;
    /**
     * If `true`, the user cannot interact with the range.
     */

    this.disabled = false;
    /**
     * the value of the range.
     */

    this.value = 0;

    this.clampBounds = value => {
      return (0,_helpers_dd7e4b7b_js__WEBPACK_IMPORTED_MODULE_3__.j)(this.min, value, this.max);
    };

    this.ensureValueInBounds = value => {
      if (this.dualKnobs) {
        return {
          lower: this.clampBounds(value.lower),
          upper: this.clampBounds(value.upper)
        };
      } else {
        return this.clampBounds(value);
      }
    };

    this.setupGesture = /*#__PURE__*/(0,C_Repos_regobs_regObs4_node_modules_angular_devkit_build_angular_node_modules_babel_runtime_helpers_esm_asyncToGenerator__WEBPACK_IMPORTED_MODULE_0__.default)(function* () {
      const rangeSlider = _this.rangeSlider;

      if (rangeSlider) {
        _this.gesture = (yield Promise.resolve(/*! import() */).then(__webpack_require__.bind(__webpack_require__, /*! ./index-34cb2743.js */ 88910))).createGesture({
          el: rangeSlider,
          gestureName: 'range',
          gesturePriority: 100,
          threshold: 0,
          onStart: ev => _this.onStart(ev),
          onMove: ev => _this.onMove(ev),
          onEnd: ev => _this.onEnd(ev)
        });

        _this.gesture.enable(!_this.disabled);
      }
    });

    this.handleKeyboard = (knob, isIncrease) => {
      let step = this.step;
      step = step > 0 ? step : 1;
      step = step / (this.max - this.min);

      if (!isIncrease) {
        step *= -1;
      }

      if (knob === 'A') {
        this.ratioA = (0,_helpers_dd7e4b7b_js__WEBPACK_IMPORTED_MODULE_3__.j)(0, this.ratioA + step, 1);
      } else {
        this.ratioB = (0,_helpers_dd7e4b7b_js__WEBPACK_IMPORTED_MODULE_3__.j)(0, this.ratioB + step, 1);
      }

      this.updateValue();
    };

    this.onBlur = () => {
      if (this.hasFocus) {
        this.hasFocus = false;
        this.ionBlur.emit();
        this.emitStyle();
      }
    };

    this.onFocus = () => {
      if (!this.hasFocus) {
        this.hasFocus = true;
        this.ionFocus.emit();
        this.emitStyle();
      }
    };
  }

  debounceChanged() {
    this.ionChange = (0,_helpers_dd7e4b7b_js__WEBPACK_IMPORTED_MODULE_3__.f)(this.ionChange, this.debounce);
  }

  minChanged() {
    if (!this.noUpdate) {
      this.updateRatio();
    }
  }

  maxChanged() {
    if (!this.noUpdate) {
      this.updateRatio();
    }
  }

  disabledChanged() {
    if (this.gesture) {
      this.gesture.enable(!this.disabled);
    }

    this.emitStyle();
  }

  valueChanged(value) {
    if (!this.noUpdate) {
      this.updateRatio();
    }

    value = this.ensureValueInBounds(value);
    this.ionChange.emit({
      value
    });
  }

  componentWillLoad() {
    /**
     * If user has custom ID set then we should
     * not assign the default incrementing ID.
     */
    this.rangeId = this.el.hasAttribute('id') ? this.el.getAttribute('id') : `ion-r-${rangeIds++}`;
    this.inheritedAttributes = (0,_helpers_dd7e4b7b_js__WEBPACK_IMPORTED_MODULE_3__.i)(this.el, ['aria-label']);
  }

  componentDidLoad() {
    this.setupGesture();
    this.didLoad = true;
  }

  connectedCallback() {
    this.updateRatio();
    this.debounceChanged();
    this.disabledChanged();
    /**
     * If we have not yet rendered
     * ion-range, then rangeSlider is not defined.
     * But if we are moving ion-range via appendChild,
     * then rangeSlider will be defined.
     */

    if (this.didLoad) {
      this.setupGesture();
    }
  }

  disconnectedCallback() {
    if (this.gesture) {
      this.gesture.destroy();
      this.gesture = undefined;
    }
  }

  getValue() {
    const value = this.value || 0;

    if (this.dualKnobs) {
      if (typeof value === 'object') {
        return value;
      }

      return {
        lower: 0,
        upper: value
      };
    } else {
      if (typeof value === 'object') {
        return value.upper;
      }

      return value;
    }
  }

  emitStyle() {
    this.ionStyle.emit({
      'interactive': true,
      'interactive-disabled': this.disabled
    });
  }

  onStart(detail) {
    const rect = this.rect = this.rangeSlider.getBoundingClientRect();
    const currentX = detail.currentX; // figure out which knob they started closer to

    let ratio = (0,_helpers_dd7e4b7b_js__WEBPACK_IMPORTED_MODULE_3__.j)(0, (currentX - rect.left) / rect.width, 1);

    if (document.dir === 'rtl') {
      ratio = 1 - ratio;
    }

    this.pressedKnob = !this.dualKnobs || Math.abs(this.ratioA - ratio) < Math.abs(this.ratioB - ratio) ? 'A' : 'B';
    this.setFocus(this.pressedKnob); // update the active knob's position

    this.update(currentX);
  }

  onMove(detail) {
    this.update(detail.currentX);
  }

  onEnd(detail) {
    this.update(detail.currentX);
    this.pressedKnob = undefined;
  }

  update(currentX) {
    // figure out where the pointer is currently at
    // update the knob being interacted with
    const rect = this.rect;
    let ratio = (0,_helpers_dd7e4b7b_js__WEBPACK_IMPORTED_MODULE_3__.j)(0, (currentX - rect.left) / rect.width, 1);

    if (document.dir === 'rtl') {
      ratio = 1 - ratio;
    }

    if (this.snaps) {
      // snaps the ratio to the current value
      ratio = valueToRatio(ratioToValue(ratio, this.min, this.max, this.step), this.min, this.max);
    } // update which knob is pressed


    if (this.pressedKnob === 'A') {
      this.ratioA = ratio;
    } else {
      this.ratioB = ratio;
    } // Update input value


    this.updateValue();
  }

  get valA() {
    return ratioToValue(this.ratioA, this.min, this.max, this.step);
  }

  get valB() {
    return ratioToValue(this.ratioB, this.min, this.max, this.step);
  }

  get ratioLower() {
    if (this.dualKnobs) {
      return Math.min(this.ratioA, this.ratioB);
    }

    return 0;
  }

  get ratioUpper() {
    if (this.dualKnobs) {
      return Math.max(this.ratioA, this.ratioB);
    }

    return this.ratioA;
  }

  updateRatio() {
    const value = this.getValue();
    const {
      min,
      max
    } = this;

    if (this.dualKnobs) {
      this.ratioA = valueToRatio(value.lower, min, max);
      this.ratioB = valueToRatio(value.upper, min, max);
    } else {
      this.ratioA = valueToRatio(value, min, max);
    }
  }

  updateValue() {
    this.noUpdate = true;
    const {
      valA,
      valB
    } = this;
    this.value = !this.dualKnobs ? valA : {
      lower: Math.min(valA, valB),
      upper: Math.max(valA, valB)
    };
    this.noUpdate = false;
  }

  setFocus(knob) {
    if (this.el.shadowRoot) {
      const knobEl = this.el.shadowRoot.querySelector(knob === 'A' ? '.range-knob-a' : '.range-knob-b');

      if (knobEl) {
        knobEl.focus();
      }
    }
  }

  render() {
    const {
      min,
      max,
      step,
      el,
      handleKeyboard,
      pressedKnob,
      disabled,
      pin,
      ratioLower,
      ratioUpper,
      inheritedAttributes,
      rangeId
    } = this;
    /**
     * Look for external label, ion-label, or aria-labelledby.
     * If none, see if user placed an aria-label on the host
     * and use that instead.
     */

    let {
      labelText
    } = (0,_helpers_dd7e4b7b_js__WEBPACK_IMPORTED_MODULE_3__.d)(el, rangeId);

    if (labelText === undefined || labelText === null) {
      labelText = inheritedAttributes['aria-label'];
    }

    const mode = (0,_ionic_global_63a97a32_js__WEBPACK_IMPORTED_MODULE_2__.b)(this);
    const barStart = `${ratioLower * 100}%`;
    const barEnd = `${100 - ratioUpper * 100}%`;
    const doc = document;
    const isRTL = doc.dir === 'rtl';
    const start = isRTL ? 'right' : 'left';
    const end = isRTL ? 'left' : 'right';

    const tickStyle = tick => {
      return {
        [start]: tick[start]
      };
    };

    const barStyle = {
      [start]: barStart,
      [end]: barEnd
    };
    const ticks = [];

    if (this.snaps && this.ticks) {
      for (let value = min; value <= max; value += step) {
        const ratio = valueToRatio(value, min, max);
        const tick = {
          ratio,
          active: ratio >= ratioLower && ratio <= ratioUpper
        };
        tick[start] = `${ratio * 100}%`;
        ticks.push(tick);
      }
    }

    (0,_helpers_dd7e4b7b_js__WEBPACK_IMPORTED_MODULE_3__.e)(true, el, this.name, JSON.stringify(this.getValue()), disabled);
    return (0,_index_7a8b7a1c_js__WEBPACK_IMPORTED_MODULE_1__.h)(_index_7a8b7a1c_js__WEBPACK_IMPORTED_MODULE_1__.H, {
      onFocusin: this.onFocus,
      onFocusout: this.onBlur,
      id: rangeId,
      class: (0,_theme_ff3fc52f_js__WEBPACK_IMPORTED_MODULE_4__.c)(this.color, {
        [mode]: true,
        'in-item': (0,_theme_ff3fc52f_js__WEBPACK_IMPORTED_MODULE_4__.h)('ion-item', el),
        'range-disabled': disabled,
        'range-pressed': pressedKnob !== undefined,
        'range-has-pin': pin
      })
    }, (0,_index_7a8b7a1c_js__WEBPACK_IMPORTED_MODULE_1__.h)("slot", {
      name: "start"
    }), (0,_index_7a8b7a1c_js__WEBPACK_IMPORTED_MODULE_1__.h)("div", {
      class: "range-slider",
      ref: rangeEl => this.rangeSlider = rangeEl
    }, ticks.map(tick => (0,_index_7a8b7a1c_js__WEBPACK_IMPORTED_MODULE_1__.h)("div", {
      style: tickStyle(tick),
      role: "presentation",
      class: {
        'range-tick': true,
        'range-tick-active': tick.active
      },
      part: tick.active ? 'tick-active' : 'tick'
    })), (0,_index_7a8b7a1c_js__WEBPACK_IMPORTED_MODULE_1__.h)("div", {
      class: "range-bar",
      role: "presentation",
      part: "bar"
    }), (0,_index_7a8b7a1c_js__WEBPACK_IMPORTED_MODULE_1__.h)("div", {
      class: "range-bar range-bar-active",
      role: "presentation",
      style: barStyle,
      part: "bar-active"
    }), renderKnob(isRTL, {
      knob: 'A',
      pressed: pressedKnob === 'A',
      value: this.valA,
      ratio: this.ratioA,
      pin,
      disabled,
      handleKeyboard,
      min,
      max,
      labelText
    }), this.dualKnobs && renderKnob(isRTL, {
      knob: 'B',
      pressed: pressedKnob === 'B',
      value: this.valB,
      ratio: this.ratioB,
      pin,
      disabled,
      handleKeyboard,
      min,
      max,
      labelText
    })), (0,_index_7a8b7a1c_js__WEBPACK_IMPORTED_MODULE_1__.h)("slot", {
      name: "end"
    }));
  }

  get el() {
    return (0,_index_7a8b7a1c_js__WEBPACK_IMPORTED_MODULE_1__.i)(this);
  }

  static get watchers() {
    return {
      "debounce": ["debounceChanged"],
      "min": ["minChanged"],
      "max": ["maxChanged"],
      "disabled": ["disabledChanged"],
      "value": ["valueChanged"]
    };
  }

};

const renderKnob = (isRTL, {
  knob,
  value,
  ratio,
  min,
  max,
  disabled,
  pressed,
  pin,
  handleKeyboard,
  labelText
}) => {
  const start = isRTL ? 'right' : 'left';

  const knobStyle = () => {
    const style = {};
    style[start] = `${ratio * 100}%`;
    return style;
  };

  return (0,_index_7a8b7a1c_js__WEBPACK_IMPORTED_MODULE_1__.h)("div", {
    onKeyDown: ev => {
      const key = ev.key;

      if (key === 'ArrowLeft' || key === 'ArrowDown') {
        handleKeyboard(knob, false);
        ev.preventDefault();
        ev.stopPropagation();
      } else if (key === 'ArrowRight' || key === 'ArrowUp') {
        handleKeyboard(knob, true);
        ev.preventDefault();
        ev.stopPropagation();
      }
    },
    class: {
      'range-knob-handle': true,
      'range-knob-a': knob === 'A',
      'range-knob-b': knob === 'B',
      'range-knob-pressed': pressed,
      'range-knob-min': value === min,
      'range-knob-max': value === max
    },
    style: knobStyle(),
    role: "slider",
    tabindex: disabled ? -1 : 0,
    "aria-label": labelText,
    "aria-valuemin": min,
    "aria-valuemax": max,
    "aria-disabled": disabled ? 'true' : null,
    "aria-valuenow": value
  }, pin && (0,_index_7a8b7a1c_js__WEBPACK_IMPORTED_MODULE_1__.h)("div", {
    class: "range-pin",
    role: "presentation",
    part: "pin"
  }, Math.round(value)), (0,_index_7a8b7a1c_js__WEBPACK_IMPORTED_MODULE_1__.h)("div", {
    class: "range-knob",
    role: "presentation",
    part: "knob"
  }));
};

const ratioToValue = (ratio, min, max, step) => {
  let value = (max - min) * ratio;

  if (step > 0) {
    value = Math.round(value / step) * step + min;
  }

  return (0,_helpers_dd7e4b7b_js__WEBPACK_IMPORTED_MODULE_3__.j)(min, value, max);
};

const valueToRatio = (value, min, max) => {
  return (0,_helpers_dd7e4b7b_js__WEBPACK_IMPORTED_MODULE_3__.j)(0, (value - min) / (max - min), 1);
};

let rangeIds = 0;
Range.style = {
  ios: rangeIosCss,
  md: rangeMdCss
};


/***/ })

}]);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibm9kZV9tb2R1bGVzX2lvbmljX2NvcmVfZGlzdF9lc21faW9uLXJhbmdlX2VudHJ5X2pzLWVzMjAxNS5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7Ozs7Ozs7O0FBQUE7QUFDQTtBQUNBO0FBQ0E7QUFFQSxNQUFNc0IsV0FBVyxHQUFHLCs2S0FBcEI7QUFFQSxNQUFNQyxVQUFVLEdBQUcsNjROQUFuQjtBQUVBLE1BQU1DLEtBQUssR0FBRyxNQUFNO0FBQ2xCQyxFQUFBQSxXQUFXLENBQUNDLE9BQUQsRUFBVTtBQUFBOztBQUNuQnpCLElBQUFBLHFEQUFnQixDQUFDLElBQUQsRUFBT3lCLE9BQVAsQ0FBaEI7QUFDQSxTQUFLQyxTQUFMLEdBQWlCeEIscURBQVcsQ0FBQyxJQUFELEVBQU8sV0FBUCxFQUFvQixDQUFwQixDQUE1QjtBQUNBLFNBQUt5QixRQUFMLEdBQWdCekIscURBQVcsQ0FBQyxJQUFELEVBQU8sVUFBUCxFQUFtQixDQUFuQixDQUEzQjtBQUNBLFNBQUswQixRQUFMLEdBQWdCMUIscURBQVcsQ0FBQyxJQUFELEVBQU8sVUFBUCxFQUFtQixDQUFuQixDQUEzQjtBQUNBLFNBQUsyQixPQUFMLEdBQWUzQixxREFBVyxDQUFDLElBQUQsRUFBTyxTQUFQLEVBQWtCLENBQWxCLENBQTFCO0FBQ0EsU0FBSzRCLE9BQUwsR0FBZSxLQUFmO0FBQ0EsU0FBS0MsUUFBTCxHQUFnQixLQUFoQjtBQUNBLFNBQUtDLFFBQUwsR0FBZ0IsS0FBaEI7QUFDQSxTQUFLQyxtQkFBTCxHQUEyQixFQUEzQjtBQUNBLFNBQUtDLE1BQUwsR0FBYyxDQUFkO0FBQ0EsU0FBS0MsTUFBTCxHQUFjLENBQWQ7QUFDQTtBQUNKO0FBQ0E7QUFDQTtBQUNBOztBQUNJLFNBQUtDLFFBQUwsR0FBZ0IsQ0FBaEIsQ0FqQm1CLENBa0JuQjs7QUFDQTtBQUNKO0FBQ0E7O0FBQ0ksU0FBS0MsSUFBTCxHQUFZLEVBQVo7QUFDQTtBQUNKO0FBQ0E7O0FBQ0ksU0FBS0MsU0FBTCxHQUFpQixLQUFqQjtBQUNBO0FBQ0o7QUFDQTs7QUFDSSxTQUFLQyxHQUFMLEdBQVcsQ0FBWDtBQUNBO0FBQ0o7QUFDQTs7QUFDSSxTQUFLQyxHQUFMLEdBQVcsR0FBWDtBQUNBO0FBQ0o7QUFDQTtBQUNBOztBQUNJLFNBQUtDLEdBQUwsR0FBVyxLQUFYO0FBQ0E7QUFDSjtBQUNBO0FBQ0E7O0FBQ0ksU0FBS0MsS0FBTCxHQUFhLEtBQWI7QUFDQTtBQUNKO0FBQ0E7O0FBQ0ksU0FBS0MsSUFBTCxHQUFZLENBQVo7QUFDQTtBQUNKO0FBQ0E7QUFDQTs7QUFDSSxTQUFLQyxLQUFMLEdBQWEsSUFBYjtBQUNBO0FBQ0o7QUFDQTs7QUFDSSxTQUFLQyxRQUFMLEdBQWdCLEtBQWhCO0FBQ0E7QUFDSjtBQUNBOztBQUNJLFNBQUtDLEtBQUwsR0FBYSxDQUFiOztBQUNBLFNBQUtDLFdBQUwsR0FBb0JELEtBQUQsSUFBVztBQUM1QixhQUFPbkMsdURBQUssQ0FBQyxLQUFLNEIsR0FBTixFQUFXTyxLQUFYLEVBQWtCLEtBQUtOLEdBQXZCLENBQVo7QUFDRCxLQUZEOztBQUdBLFNBQUtRLG1CQUFMLEdBQTRCRixLQUFELElBQVc7QUFDcEMsVUFBSSxLQUFLUixTQUFULEVBQW9CO0FBQ2xCLGVBQU87QUFDTFcsVUFBQUEsS0FBSyxFQUFFLEtBQUtGLFdBQUwsQ0FBaUJELEtBQUssQ0FBQ0csS0FBdkIsQ0FERjtBQUVMQyxVQUFBQSxLQUFLLEVBQUUsS0FBS0gsV0FBTCxDQUFpQkQsS0FBSyxDQUFDSSxLQUF2QjtBQUZGLFNBQVA7QUFJRCxPQUxELE1BTUs7QUFDSCxlQUFPLEtBQUtILFdBQUwsQ0FBaUJELEtBQWpCLENBQVA7QUFDRDtBQUNGLEtBVkQ7O0FBV0EsU0FBS0ssWUFBTCxrTEFBb0IsYUFBWTtBQUM5QixZQUFNQyxXQUFXLEdBQUcsS0FBSSxDQUFDQSxXQUF6Qjs7QUFDQSxVQUFJQSxXQUFKLEVBQWlCO0FBQ2YsYUFBSSxDQUFDQyxPQUFMLEdBQWUsT0FBTyxzSEFBUCxFQUFzQ0MsYUFBdEMsQ0FBb0Q7QUFDakVDLFVBQUFBLEVBQUUsRUFBRUgsV0FENkQ7QUFFakVJLFVBQUFBLFdBQVcsRUFBRSxPQUZvRDtBQUdqRUMsVUFBQUEsZUFBZSxFQUFFLEdBSGdEO0FBSWpFQyxVQUFBQSxTQUFTLEVBQUUsQ0FKc0Q7QUFLakVDLFVBQUFBLE9BQU8sRUFBRUMsRUFBRSxJQUFJLEtBQUksQ0FBQ0QsT0FBTCxDQUFhQyxFQUFiLENBTGtEO0FBTWpFQyxVQUFBQSxNQUFNLEVBQUVELEVBQUUsSUFBSSxLQUFJLENBQUNDLE1BQUwsQ0FBWUQsRUFBWixDQU5tRDtBQU9qRUUsVUFBQUEsS0FBSyxFQUFFRixFQUFFLElBQUksS0FBSSxDQUFDRSxLQUFMLENBQVdGLEVBQVg7QUFQb0QsU0FBcEQsQ0FBZjs7QUFTQSxhQUFJLENBQUNQLE9BQUwsQ0FBYVUsTUFBYixDQUFvQixDQUFDLEtBQUksQ0FBQ2xCLFFBQTFCO0FBQ0Q7QUFDRixLQWREOztBQWVBLFNBQUttQixjQUFMLEdBQXNCLENBQUNDLElBQUQsRUFBT0MsVUFBUCxLQUFzQjtBQUMxQyxVQUFJdkIsSUFBSSxHQUFHLEtBQUtBLElBQWhCO0FBQ0FBLE1BQUFBLElBQUksR0FBR0EsSUFBSSxHQUFHLENBQVAsR0FBV0EsSUFBWCxHQUFrQixDQUF6QjtBQUNBQSxNQUFBQSxJQUFJLEdBQUdBLElBQUksSUFBSSxLQUFLSCxHQUFMLEdBQVcsS0FBS0QsR0FBcEIsQ0FBWDs7QUFDQSxVQUFJLENBQUMyQixVQUFMLEVBQWlCO0FBQ2Z2QixRQUFBQSxJQUFJLElBQUksQ0FBQyxDQUFUO0FBQ0Q7O0FBQ0QsVUFBSXNCLElBQUksS0FBSyxHQUFiLEVBQWtCO0FBQ2hCLGFBQUsvQixNQUFMLEdBQWN2Qix1REFBSyxDQUFDLENBQUQsRUFBSSxLQUFLdUIsTUFBTCxHQUFjUyxJQUFsQixFQUF3QixDQUF4QixDQUFuQjtBQUNELE9BRkQsTUFHSztBQUNILGFBQUtSLE1BQUwsR0FBY3hCLHVEQUFLLENBQUMsQ0FBRCxFQUFJLEtBQUt3QixNQUFMLEdBQWNRLElBQWxCLEVBQXdCLENBQXhCLENBQW5CO0FBQ0Q7O0FBQ0QsV0FBS3dCLFdBQUw7QUFDRCxLQWREOztBQWVBLFNBQUtDLE1BQUwsR0FBYyxNQUFNO0FBQ2xCLFVBQUksS0FBS3BDLFFBQVQsRUFBbUI7QUFDakIsYUFBS0EsUUFBTCxHQUFnQixLQUFoQjtBQUNBLGFBQUtILE9BQUwsQ0FBYXdDLElBQWI7QUFDQSxhQUFLQyxTQUFMO0FBQ0Q7QUFDRixLQU5EOztBQU9BLFNBQUtDLE9BQUwsR0FBZSxNQUFNO0FBQ25CLFVBQUksQ0FBQyxLQUFLdkMsUUFBVixFQUFvQjtBQUNsQixhQUFLQSxRQUFMLEdBQWdCLElBQWhCO0FBQ0EsYUFBS0osUUFBTCxDQUFjeUMsSUFBZDtBQUNBLGFBQUtDLFNBQUw7QUFDRDtBQUNGLEtBTkQ7QUFPRDs7QUFDREUsRUFBQUEsZUFBZSxHQUFHO0FBQ2hCLFNBQUs5QyxTQUFMLEdBQWlCYix1REFBYSxDQUFDLEtBQUthLFNBQU4sRUFBaUIsS0FBS1UsUUFBdEIsQ0FBOUI7QUFDRDs7QUFDRHFDLEVBQUFBLFVBQVUsR0FBRztBQUNYLFFBQUksQ0FBQyxLQUFLMUMsUUFBVixFQUFvQjtBQUNsQixXQUFLMkMsV0FBTDtBQUNEO0FBQ0Y7O0FBQ0RDLEVBQUFBLFVBQVUsR0FBRztBQUNYLFFBQUksQ0FBQyxLQUFLNUMsUUFBVixFQUFvQjtBQUNsQixXQUFLMkMsV0FBTDtBQUNEO0FBQ0Y7O0FBQ0RFLEVBQUFBLGVBQWUsR0FBRztBQUNoQixRQUFJLEtBQUt2QixPQUFULEVBQWtCO0FBQ2hCLFdBQUtBLE9BQUwsQ0FBYVUsTUFBYixDQUFvQixDQUFDLEtBQUtsQixRQUExQjtBQUNEOztBQUNELFNBQUt5QixTQUFMO0FBQ0Q7O0FBQ0RPLEVBQUFBLFlBQVksQ0FBQy9CLEtBQUQsRUFBUTtBQUNsQixRQUFJLENBQUMsS0FBS2YsUUFBVixFQUFvQjtBQUNsQixXQUFLMkMsV0FBTDtBQUNEOztBQUNENUIsSUFBQUEsS0FBSyxHQUFHLEtBQUtFLG1CQUFMLENBQXlCRixLQUF6QixDQUFSO0FBQ0EsU0FBS3BCLFNBQUwsQ0FBZTJDLElBQWYsQ0FBb0I7QUFBRXZCLE1BQUFBO0FBQUYsS0FBcEI7QUFDRDs7QUFDRGdDLEVBQUFBLGlCQUFpQixHQUFHO0FBQ2xCO0FBQ0o7QUFDQTtBQUNBO0FBQ0ksU0FBS0MsT0FBTCxHQUFnQixLQUFLeEIsRUFBTCxDQUFReUIsWUFBUixDQUFxQixJQUFyQixDQUFELEdBQStCLEtBQUt6QixFQUFMLENBQVEwQixZQUFSLENBQXFCLElBQXJCLENBQS9CLEdBQTZELFNBQVFDLFFBQVEsRUFBRyxFQUEvRjtBQUNBLFNBQUtqRCxtQkFBTCxHQUEyQm5CLHVEQUFpQixDQUFDLEtBQUt5QyxFQUFOLEVBQVUsQ0FBQyxZQUFELENBQVYsQ0FBNUM7QUFDRDs7QUFDRDRCLEVBQUFBLGdCQUFnQixHQUFHO0FBQ2pCLFNBQUtoQyxZQUFMO0FBQ0EsU0FBS3JCLE9BQUwsR0FBZSxJQUFmO0FBQ0Q7O0FBQ0RzRCxFQUFBQSxpQkFBaUIsR0FBRztBQUNsQixTQUFLVixXQUFMO0FBQ0EsU0FBS0YsZUFBTDtBQUNBLFNBQUtJLGVBQUw7QUFDQTtBQUNKO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBQ0ksUUFBSSxLQUFLOUMsT0FBVCxFQUFrQjtBQUNoQixXQUFLcUIsWUFBTDtBQUNEO0FBQ0Y7O0FBQ0RrQyxFQUFBQSxvQkFBb0IsR0FBRztBQUNyQixRQUFJLEtBQUtoQyxPQUFULEVBQWtCO0FBQ2hCLFdBQUtBLE9BQUwsQ0FBYWlDLE9BQWI7QUFDQSxXQUFLakMsT0FBTCxHQUFla0MsU0FBZjtBQUNEO0FBQ0Y7O0FBQ0RDLEVBQUFBLFFBQVEsR0FBRztBQUNULFVBQU0xQyxLQUFLLEdBQUcsS0FBS0EsS0FBTCxJQUFjLENBQTVCOztBQUNBLFFBQUksS0FBS1IsU0FBVCxFQUFvQjtBQUNsQixVQUFJLE9BQU9RLEtBQVAsS0FBaUIsUUFBckIsRUFBK0I7QUFDN0IsZUFBT0EsS0FBUDtBQUNEOztBQUNELGFBQU87QUFDTEcsUUFBQUEsS0FBSyxFQUFFLENBREY7QUFFTEMsUUFBQUEsS0FBSyxFQUFFSjtBQUZGLE9BQVA7QUFJRCxLQVJELE1BU0s7QUFDSCxVQUFJLE9BQU9BLEtBQVAsS0FBaUIsUUFBckIsRUFBK0I7QUFDN0IsZUFBT0EsS0FBSyxDQUFDSSxLQUFiO0FBQ0Q7O0FBQ0QsYUFBT0osS0FBUDtBQUNEO0FBQ0Y7O0FBQ0R3QixFQUFBQSxTQUFTLEdBQUc7QUFDVixTQUFLM0MsUUFBTCxDQUFjMEMsSUFBZCxDQUFtQjtBQUNqQixxQkFBZSxJQURFO0FBRWpCLDhCQUF3QixLQUFLeEI7QUFGWixLQUFuQjtBQUlEOztBQUNEYyxFQUFBQSxPQUFPLENBQUM4QixNQUFELEVBQVM7QUFDZCxVQUFNQyxJQUFJLEdBQUcsS0FBS0EsSUFBTCxHQUFZLEtBQUt0QyxXQUFMLENBQWlCdUMscUJBQWpCLEVBQXpCO0FBQ0EsVUFBTUMsUUFBUSxHQUFHSCxNQUFNLENBQUNHLFFBQXhCLENBRmMsQ0FHZDs7QUFDQSxRQUFJQyxLQUFLLEdBQUdsRix1REFBSyxDQUFDLENBQUQsRUFBSSxDQUFDaUYsUUFBUSxHQUFHRixJQUFJLENBQUNJLElBQWpCLElBQXlCSixJQUFJLENBQUNLLEtBQWxDLEVBQXlDLENBQXpDLENBQWpCOztBQUNBLFFBQUlDLFFBQVEsQ0FBQ0MsR0FBVCxLQUFpQixLQUFyQixFQUE0QjtBQUMxQkosTUFBQUEsS0FBSyxHQUFHLElBQUlBLEtBQVo7QUFDRDs7QUFDRCxTQUFLSyxXQUFMLEdBQ0UsQ0FBQyxLQUFLNUQsU0FBTixJQUNFNkQsSUFBSSxDQUFDQyxHQUFMLENBQVMsS0FBS2xFLE1BQUwsR0FBYzJELEtBQXZCLElBQWdDTSxJQUFJLENBQUNDLEdBQUwsQ0FBUyxLQUFLakUsTUFBTCxHQUFjMEQsS0FBdkIsQ0FEbEMsR0FFSSxHQUZKLEdBR0ksR0FKTjtBQUtBLFNBQUtRLFFBQUwsQ0FBYyxLQUFLSCxXQUFuQixFQWJjLENBY2Q7O0FBQ0EsU0FBS0ksTUFBTCxDQUFZVixRQUFaO0FBQ0Q7O0FBQ0QvQixFQUFBQSxNQUFNLENBQUM0QixNQUFELEVBQVM7QUFDYixTQUFLYSxNQUFMLENBQVliLE1BQU0sQ0FBQ0csUUFBbkI7QUFDRDs7QUFDRDlCLEVBQUFBLEtBQUssQ0FBQzJCLE1BQUQsRUFBUztBQUNaLFNBQUthLE1BQUwsQ0FBWWIsTUFBTSxDQUFDRyxRQUFuQjtBQUNBLFNBQUtNLFdBQUwsR0FBbUJYLFNBQW5CO0FBQ0Q7O0FBQ0RlLEVBQUFBLE1BQU0sQ0FBQ1YsUUFBRCxFQUFXO0FBQ2Y7QUFDQTtBQUNBLFVBQU1GLElBQUksR0FBRyxLQUFLQSxJQUFsQjtBQUNBLFFBQUlHLEtBQUssR0FBR2xGLHVEQUFLLENBQUMsQ0FBRCxFQUFJLENBQUNpRixRQUFRLEdBQUdGLElBQUksQ0FBQ0ksSUFBakIsSUFBeUJKLElBQUksQ0FBQ0ssS0FBbEMsRUFBeUMsQ0FBekMsQ0FBakI7O0FBQ0EsUUFBSUMsUUFBUSxDQUFDQyxHQUFULEtBQWlCLEtBQXJCLEVBQTRCO0FBQzFCSixNQUFBQSxLQUFLLEdBQUcsSUFBSUEsS0FBWjtBQUNEOztBQUNELFFBQUksS0FBS25ELEtBQVQsRUFBZ0I7QUFDZDtBQUNBbUQsTUFBQUEsS0FBSyxHQUFHVSxZQUFZLENBQUNDLFlBQVksQ0FBQ1gsS0FBRCxFQUFRLEtBQUt0RCxHQUFiLEVBQWtCLEtBQUtDLEdBQXZCLEVBQTRCLEtBQUtHLElBQWpDLENBQWIsRUFBcUQsS0FBS0osR0FBMUQsRUFBK0QsS0FBS0MsR0FBcEUsQ0FBcEI7QUFDRCxLQVhjLENBWWY7OztBQUNBLFFBQUksS0FBSzBELFdBQUwsS0FBcUIsR0FBekIsRUFBOEI7QUFDNUIsV0FBS2hFLE1BQUwsR0FBYzJELEtBQWQ7QUFDRCxLQUZELE1BR0s7QUFDSCxXQUFLMUQsTUFBTCxHQUFjMEQsS0FBZDtBQUNELEtBbEJjLENBbUJmOzs7QUFDQSxTQUFLMUIsV0FBTDtBQUNEOztBQUNPLE1BQUpzQyxJQUFJLEdBQUc7QUFDVCxXQUFPRCxZQUFZLENBQUMsS0FBS3RFLE1BQU4sRUFBYyxLQUFLSyxHQUFuQixFQUF3QixLQUFLQyxHQUE3QixFQUFrQyxLQUFLRyxJQUF2QyxDQUFuQjtBQUNEOztBQUNPLE1BQUorRCxJQUFJLEdBQUc7QUFDVCxXQUFPRixZQUFZLENBQUMsS0FBS3JFLE1BQU4sRUFBYyxLQUFLSSxHQUFuQixFQUF3QixLQUFLQyxHQUE3QixFQUFrQyxLQUFLRyxJQUF2QyxDQUFuQjtBQUNEOztBQUNhLE1BQVZnRSxVQUFVLEdBQUc7QUFDZixRQUFJLEtBQUtyRSxTQUFULEVBQW9CO0FBQ2xCLGFBQU82RCxJQUFJLENBQUM1RCxHQUFMLENBQVMsS0FBS0wsTUFBZCxFQUFzQixLQUFLQyxNQUEzQixDQUFQO0FBQ0Q7O0FBQ0QsV0FBTyxDQUFQO0FBQ0Q7O0FBQ2EsTUFBVnlFLFVBQVUsR0FBRztBQUNmLFFBQUksS0FBS3RFLFNBQVQsRUFBb0I7QUFDbEIsYUFBTzZELElBQUksQ0FBQzNELEdBQUwsQ0FBUyxLQUFLTixNQUFkLEVBQXNCLEtBQUtDLE1BQTNCLENBQVA7QUFDRDs7QUFDRCxXQUFPLEtBQUtELE1BQVo7QUFDRDs7QUFDRHdDLEVBQUFBLFdBQVcsR0FBRztBQUNaLFVBQU01QixLQUFLLEdBQUcsS0FBSzBDLFFBQUwsRUFBZDtBQUNBLFVBQU07QUFBRWpELE1BQUFBLEdBQUY7QUFBT0MsTUFBQUE7QUFBUCxRQUFlLElBQXJCOztBQUNBLFFBQUksS0FBS0YsU0FBVCxFQUFvQjtBQUNsQixXQUFLSixNQUFMLEdBQWNxRSxZQUFZLENBQUN6RCxLQUFLLENBQUNHLEtBQVAsRUFBY1YsR0FBZCxFQUFtQkMsR0FBbkIsQ0FBMUI7QUFDQSxXQUFLTCxNQUFMLEdBQWNvRSxZQUFZLENBQUN6RCxLQUFLLENBQUNJLEtBQVAsRUFBY1gsR0FBZCxFQUFtQkMsR0FBbkIsQ0FBMUI7QUFDRCxLQUhELE1BSUs7QUFDSCxXQUFLTixNQUFMLEdBQWNxRSxZQUFZLENBQUN6RCxLQUFELEVBQVFQLEdBQVIsRUFBYUMsR0FBYixDQUExQjtBQUNEO0FBQ0Y7O0FBQ0QyQixFQUFBQSxXQUFXLEdBQUc7QUFDWixTQUFLcEMsUUFBTCxHQUFnQixJQUFoQjtBQUNBLFVBQU07QUFBRTBFLE1BQUFBLElBQUY7QUFBUUMsTUFBQUE7QUFBUixRQUFpQixJQUF2QjtBQUNBLFNBQUs1RCxLQUFMLEdBQWEsQ0FBQyxLQUFLUixTQUFOLEdBQ1RtRSxJQURTLEdBRVQ7QUFDQXhELE1BQUFBLEtBQUssRUFBRWtELElBQUksQ0FBQzVELEdBQUwsQ0FBU2tFLElBQVQsRUFBZUMsSUFBZixDQURQO0FBRUF4RCxNQUFBQSxLQUFLLEVBQUVpRCxJQUFJLENBQUMzRCxHQUFMLENBQVNpRSxJQUFULEVBQWVDLElBQWY7QUFGUCxLQUZKO0FBTUEsU0FBSzNFLFFBQUwsR0FBZ0IsS0FBaEI7QUFDRDs7QUFDRHNFLEVBQUFBLFFBQVEsQ0FBQ3BDLElBQUQsRUFBTztBQUNiLFFBQUksS0FBS1YsRUFBTCxDQUFRc0QsVUFBWixFQUF3QjtBQUN0QixZQUFNQyxNQUFNLEdBQUcsS0FBS3ZELEVBQUwsQ0FBUXNELFVBQVIsQ0FBbUJFLGFBQW5CLENBQWlDOUMsSUFBSSxLQUFLLEdBQVQsR0FBZSxlQUFmLEdBQWlDLGVBQWxFLENBQWY7O0FBQ0EsVUFBSTZDLE1BQUosRUFBWTtBQUNWQSxRQUFBQSxNQUFNLENBQUNFLEtBQVA7QUFDRDtBQUNGO0FBQ0Y7O0FBQ0RDLEVBQUFBLE1BQU0sR0FBRztBQUNQLFVBQU07QUFBRTFFLE1BQUFBLEdBQUY7QUFBT0MsTUFBQUEsR0FBUDtBQUFZRyxNQUFBQSxJQUFaO0FBQWtCWSxNQUFBQSxFQUFsQjtBQUFzQlMsTUFBQUEsY0FBdEI7QUFBc0NrQyxNQUFBQSxXQUF0QztBQUFtRHJELE1BQUFBLFFBQW5EO0FBQTZESixNQUFBQSxHQUE3RDtBQUFrRWtFLE1BQUFBLFVBQWxFO0FBQThFQyxNQUFBQSxVQUE5RTtBQUEwRjNFLE1BQUFBLG1CQUExRjtBQUErRzhDLE1BQUFBO0FBQS9HLFFBQTJILElBQWpJO0FBQ0E7QUFDSjtBQUNBO0FBQ0E7QUFDQTs7QUFDSSxRQUFJO0FBQUVtQyxNQUFBQTtBQUFGLFFBQWdCbEcsdURBQVksQ0FBQ3VDLEVBQUQsRUFBS3dCLE9BQUwsQ0FBaEM7O0FBQ0EsUUFBSW1DLFNBQVMsS0FBSzNCLFNBQWQsSUFBMkIyQixTQUFTLEtBQUssSUFBN0MsRUFBbUQ7QUFDakRBLE1BQUFBLFNBQVMsR0FBR2pGLG1CQUFtQixDQUFDLFlBQUQsQ0FBL0I7QUFDRDs7QUFDRCxVQUFNa0YsSUFBSSxHQUFHMUcsNERBQVUsQ0FBQyxJQUFELENBQXZCO0FBQ0EsVUFBTTJHLFFBQVEsR0FBSSxHQUFFVCxVQUFVLEdBQUcsR0FBSSxHQUFyQztBQUNBLFVBQU1VLE1BQU0sR0FBSSxHQUFFLE1BQU1ULFVBQVUsR0FBRyxHQUFJLEdBQXpDO0FBQ0EsVUFBTVUsR0FBRyxHQUFHdEIsUUFBWjtBQUNBLFVBQU11QixLQUFLLEdBQUdELEdBQUcsQ0FBQ3JCLEdBQUosS0FBWSxLQUExQjtBQUNBLFVBQU11QixLQUFLLEdBQUdELEtBQUssR0FBRyxPQUFILEdBQWEsTUFBaEM7QUFDQSxVQUFNRSxHQUFHLEdBQUdGLEtBQUssR0FBRyxNQUFILEdBQVksT0FBN0I7O0FBQ0EsVUFBTUcsU0FBUyxHQUFJQyxJQUFELElBQVU7QUFDMUIsYUFBTztBQUNMLFNBQUNILEtBQUQsR0FBU0csSUFBSSxDQUFDSCxLQUFEO0FBRFIsT0FBUDtBQUdELEtBSkQ7O0FBS0EsVUFBTUksUUFBUSxHQUFHO0FBQ2YsT0FBQ0osS0FBRCxHQUFTSixRQURNO0FBRWYsT0FBQ0ssR0FBRCxHQUFPSjtBQUZRLEtBQWpCO0FBSUEsVUFBTXpFLEtBQUssR0FBRyxFQUFkOztBQUNBLFFBQUksS0FBS0YsS0FBTCxJQUFjLEtBQUtFLEtBQXZCLEVBQThCO0FBQzVCLFdBQUssSUFBSUUsS0FBSyxHQUFHUCxHQUFqQixFQUFzQk8sS0FBSyxJQUFJTixHQUEvQixFQUFvQ00sS0FBSyxJQUFJSCxJQUE3QyxFQUFtRDtBQUNqRCxjQUFNa0QsS0FBSyxHQUFHVSxZQUFZLENBQUN6RCxLQUFELEVBQVFQLEdBQVIsRUFBYUMsR0FBYixDQUExQjtBQUNBLGNBQU1tRixJQUFJLEdBQUc7QUFDWDlCLFVBQUFBLEtBRFc7QUFFWGdDLFVBQUFBLE1BQU0sRUFBRWhDLEtBQUssSUFBSWMsVUFBVCxJQUF1QmQsS0FBSyxJQUFJZTtBQUY3QixTQUFiO0FBSUFlLFFBQUFBLElBQUksQ0FBQ0gsS0FBRCxDQUFKLEdBQWUsR0FBRTNCLEtBQUssR0FBRyxHQUFJLEdBQTdCO0FBQ0FqRCxRQUFBQSxLQUFLLENBQUNrRixJQUFOLENBQVdILElBQVg7QUFDRDtBQUNGOztBQUNEMUcsSUFBQUEsdURBQWlCLENBQUMsSUFBRCxFQUFPc0MsRUFBUCxFQUFXLEtBQUtsQixJQUFoQixFQUFzQjBGLElBQUksQ0FBQ0MsU0FBTCxDQUFlLEtBQUt4QyxRQUFMLEVBQWYsQ0FBdEIsRUFBdUQzQyxRQUF2RCxDQUFqQjtBQUNBLFdBQVExQyxxREFBQyxDQUFDRSxpREFBRCxFQUFPO0FBQUU0SCxNQUFBQSxTQUFTLEVBQUUsS0FBSzFELE9BQWxCO0FBQTJCMkQsTUFBQUEsVUFBVSxFQUFFLEtBQUs5RCxNQUE1QztBQUFvRCtELE1BQUFBLEVBQUUsRUFBRXBELE9BQXhEO0FBQWlFcUQsTUFBQUEsS0FBSyxFQUFFakgscURBQWtCLENBQUMsS0FBS2tILEtBQU4sRUFBYTtBQUNuSCxTQUFDbEIsSUFBRCxHQUFRLElBRDJHO0FBRW5ILG1CQUFXL0YscURBQVcsQ0FBQyxVQUFELEVBQWFtQyxFQUFiLENBRjZGO0FBR25ILDBCQUFrQlYsUUFIaUc7QUFJbkgseUJBQWlCcUQsV0FBVyxLQUFLWCxTQUprRjtBQUtuSCx5QkFBaUI5QztBQUxrRyxPQUFiO0FBQTFGLEtBQVAsRUFNRHRDLHFEQUFDLENBQUMsTUFBRCxFQUFTO0FBQUVrQyxNQUFBQSxJQUFJLEVBQUU7QUFBUixLQUFULENBTkEsRUFNNkJsQyxxREFBQyxDQUFDLEtBQUQsRUFBUTtBQUFFaUksTUFBQUEsS0FBSyxFQUFFLGNBQVQ7QUFBeUJFLE1BQUFBLEdBQUcsRUFBRUMsT0FBTyxJQUFJLEtBQUtuRixXQUFMLEdBQW1CbUY7QUFBNUQsS0FBUixFQUErRTNGLEtBQUssQ0FBQzRGLEdBQU4sQ0FBVWIsSUFBSSxJQUFLeEgscURBQUMsQ0FBQyxLQUFELEVBQVE7QUFBRXNJLE1BQUFBLEtBQUssRUFBRWYsU0FBUyxDQUFDQyxJQUFELENBQWxCO0FBQTBCZSxNQUFBQSxJQUFJLEVBQUUsY0FBaEM7QUFBZ0ROLE1BQUFBLEtBQUssRUFBRTtBQUNyTSxzQkFBYyxJQUR1TDtBQUVyTSw2QkFBcUJULElBQUksQ0FBQ0U7QUFGMkssT0FBdkQ7QUFHN0ljLE1BQUFBLElBQUksRUFBRWhCLElBQUksQ0FBQ0UsTUFBTCxHQUFjLGFBQWQsR0FBOEI7QUFIeUcsS0FBUixDQUFwQixDQUEvRSxFQUdlMUgscURBQUMsQ0FBQyxLQUFELEVBQVE7QUFBRWlJLE1BQUFBLEtBQUssRUFBRSxXQUFUO0FBQXNCTSxNQUFBQSxJQUFJLEVBQUUsY0FBNUI7QUFBNENDLE1BQUFBLElBQUksRUFBRTtBQUFsRCxLQUFSLENBSGhCLEVBR29GeEkscURBQUMsQ0FBQyxLQUFELEVBQVE7QUFBRWlJLE1BQUFBLEtBQUssRUFBRSw0QkFBVDtBQUF1Q00sTUFBQUEsSUFBSSxFQUFFLGNBQTdDO0FBQTZERCxNQUFBQSxLQUFLLEVBQUViLFFBQXBFO0FBQThFZSxNQUFBQSxJQUFJLEVBQUU7QUFBcEYsS0FBUixDQUhyRixFQUdrTUMsVUFBVSxDQUFDckIsS0FBRCxFQUFRO0FBQ3pQdEQsTUFBQUEsSUFBSSxFQUFFLEdBRG1QO0FBRXpQNEUsTUFBQUEsT0FBTyxFQUFFM0MsV0FBVyxLQUFLLEdBRmdPO0FBR3pQcEQsTUFBQUEsS0FBSyxFQUFFLEtBQUsyRCxJQUg2TztBQUl6UFosTUFBQUEsS0FBSyxFQUFFLEtBQUszRCxNQUo2TztBQUt6UE8sTUFBQUEsR0FMeVA7QUFNelBJLE1BQUFBLFFBTnlQO0FBT3pQbUIsTUFBQUEsY0FQeVA7QUFRelB6QixNQUFBQSxHQVJ5UDtBQVN6UEMsTUFBQUEsR0FUeVA7QUFVelAwRSxNQUFBQTtBQVZ5UCxLQUFSLENBSDVNLEVBY25DLEtBQUs1RSxTQUFMLElBQWtCc0csVUFBVSxDQUFDckIsS0FBRCxFQUFRO0FBQ3RDdEQsTUFBQUEsSUFBSSxFQUFFLEdBRGdDO0FBRXRDNEUsTUFBQUEsT0FBTyxFQUFFM0MsV0FBVyxLQUFLLEdBRmE7QUFHdENwRCxNQUFBQSxLQUFLLEVBQUUsS0FBSzRELElBSDBCO0FBSXRDYixNQUFBQSxLQUFLLEVBQUUsS0FBSzFELE1BSjBCO0FBS3RDTSxNQUFBQSxHQUxzQztBQU10Q0ksTUFBQUEsUUFOc0M7QUFPdENtQixNQUFBQSxjQVBzQztBQVF0Q3pCLE1BQUFBLEdBUnNDO0FBU3RDQyxNQUFBQSxHQVRzQztBQVV0QzBFLE1BQUFBO0FBVnNDLEtBQVIsQ0FkTyxDQU45QixFQStCSi9HLHFEQUFDLENBQUMsTUFBRCxFQUFTO0FBQUVrQyxNQUFBQSxJQUFJLEVBQUU7QUFBUixLQUFULENBL0JHLENBQVQ7QUFnQ0Q7O0FBQ0ssTUFBRmtCLEVBQUUsR0FBRztBQUFFLFdBQU9oRCxxREFBVSxDQUFDLElBQUQsQ0FBakI7QUFBMEI7O0FBQ2xCLGFBQVJ1SSxRQUFRLEdBQUc7QUFBRSxXQUFPO0FBQzdCLGtCQUFZLENBQUMsaUJBQUQsQ0FEaUI7QUFFN0IsYUFBTyxDQUFDLFlBQUQsQ0FGc0I7QUFHN0IsYUFBTyxDQUFDLFlBQUQsQ0FIc0I7QUFJN0Isa0JBQVksQ0FBQyxpQkFBRCxDQUppQjtBQUs3QixlQUFTLENBQUMsY0FBRDtBQUxvQixLQUFQO0FBTXBCOztBQTFYYyxDQUFwQjs7QUE0WEEsTUFBTUYsVUFBVSxHQUFHLENBQUNyQixLQUFELEVBQVE7QUFBRXRELEVBQUFBLElBQUY7QUFBUW5CLEVBQUFBLEtBQVI7QUFBZStDLEVBQUFBLEtBQWY7QUFBc0J0RCxFQUFBQSxHQUF0QjtBQUEyQkMsRUFBQUEsR0FBM0I7QUFBZ0NLLEVBQUFBLFFBQWhDO0FBQTBDZ0csRUFBQUEsT0FBMUM7QUFBbURwRyxFQUFBQSxHQUFuRDtBQUF3RHVCLEVBQUFBLGNBQXhEO0FBQXdFa0QsRUFBQUE7QUFBeEUsQ0FBUixLQUFnRztBQUNqSCxRQUFNTSxLQUFLLEdBQUdELEtBQUssR0FBRyxPQUFILEdBQWEsTUFBaEM7O0FBQ0EsUUFBTXdCLFNBQVMsR0FBRyxNQUFNO0FBQ3RCLFVBQU1OLEtBQUssR0FBRyxFQUFkO0FBQ0FBLElBQUFBLEtBQUssQ0FBQ2pCLEtBQUQsQ0FBTCxHQUFnQixHQUFFM0IsS0FBSyxHQUFHLEdBQUksR0FBOUI7QUFDQSxXQUFPNEMsS0FBUDtBQUNELEdBSkQ7O0FBS0EsU0FBUXRJLHFEQUFDLENBQUMsS0FBRCxFQUFRO0FBQUU2SSxJQUFBQSxTQUFTLEVBQUdwRixFQUFELElBQVE7QUFDbEMsWUFBTXFGLEdBQUcsR0FBR3JGLEVBQUUsQ0FBQ3FGLEdBQWY7O0FBQ0EsVUFBSUEsR0FBRyxLQUFLLFdBQVIsSUFBdUJBLEdBQUcsS0FBSyxXQUFuQyxFQUFnRDtBQUM5Q2pGLFFBQUFBLGNBQWMsQ0FBQ0MsSUFBRCxFQUFPLEtBQVAsQ0FBZDtBQUNBTCxRQUFBQSxFQUFFLENBQUNzRixjQUFIO0FBQ0F0RixRQUFBQSxFQUFFLENBQUN1RixlQUFIO0FBQ0QsT0FKRCxNQUtLLElBQUlGLEdBQUcsS0FBSyxZQUFSLElBQXdCQSxHQUFHLEtBQUssU0FBcEMsRUFBK0M7QUFDbERqRixRQUFBQSxjQUFjLENBQUNDLElBQUQsRUFBTyxJQUFQLENBQWQ7QUFDQUwsUUFBQUEsRUFBRSxDQUFDc0YsY0FBSDtBQUNBdEYsUUFBQUEsRUFBRSxDQUFDdUYsZUFBSDtBQUNEO0FBQ0YsS0FaYztBQVlaZixJQUFBQSxLQUFLLEVBQUU7QUFDUiwyQkFBcUIsSUFEYjtBQUVSLHNCQUFnQm5FLElBQUksS0FBSyxHQUZqQjtBQUdSLHNCQUFnQkEsSUFBSSxLQUFLLEdBSGpCO0FBSVIsNEJBQXNCNEUsT0FKZDtBQUtSLHdCQUFrQi9GLEtBQUssS0FBS1AsR0FMcEI7QUFNUix3QkFBa0JPLEtBQUssS0FBS047QUFOcEIsS0FaSztBQW1CWmlHLElBQUFBLEtBQUssRUFBRU0sU0FBUyxFQW5CSjtBQW1CUUwsSUFBQUEsSUFBSSxFQUFFLFFBbkJkO0FBbUJ3QlUsSUFBQUEsUUFBUSxFQUFFdkcsUUFBUSxHQUFHLENBQUMsQ0FBSixHQUFRLENBbkJsRDtBQW1CcUQsa0JBQWNxRSxTQW5CbkU7QUFtQjhFLHFCQUFpQjNFLEdBbkIvRjtBQW1Cb0cscUJBQWlCQyxHQW5Cckg7QUFtQjBILHFCQUFpQkssUUFBUSxHQUFHLE1BQUgsR0FBWSxJQW5CL0o7QUFtQnFLLHFCQUFpQkM7QUFuQnRMLEdBQVIsRUFtQnVNTCxHQUFHLElBQUl0QyxxREFBQyxDQUFDLEtBQUQsRUFBUTtBQUFFaUksSUFBQUEsS0FBSyxFQUFFLFdBQVQ7QUFBc0JNLElBQUFBLElBQUksRUFBRSxjQUE1QjtBQUE0Q0MsSUFBQUEsSUFBSSxFQUFFO0FBQWxELEdBQVIsRUFBbUV4QyxJQUFJLENBQUNrRCxLQUFMLENBQVd2RyxLQUFYLENBQW5FLENBbkIvTSxFQW1Cc1MzQyxxREFBQyxDQUFDLEtBQUQsRUFBUTtBQUFFaUksSUFBQUEsS0FBSyxFQUFFLFlBQVQ7QUFBdUJNLElBQUFBLElBQUksRUFBRSxjQUE3QjtBQUE2Q0MsSUFBQUEsSUFBSSxFQUFFO0FBQW5ELEdBQVIsQ0FuQnZTLENBQVQ7QUFvQkQsQ0EzQkQ7O0FBNEJBLE1BQU1uQyxZQUFZLEdBQUcsQ0FBQ1gsS0FBRCxFQUFRdEQsR0FBUixFQUFhQyxHQUFiLEVBQWtCRyxJQUFsQixLQUEyQjtBQUM5QyxNQUFJRyxLQUFLLEdBQUcsQ0FBQ04sR0FBRyxHQUFHRCxHQUFQLElBQWNzRCxLQUExQjs7QUFDQSxNQUFJbEQsSUFBSSxHQUFHLENBQVgsRUFBYztBQUNaRyxJQUFBQSxLQUFLLEdBQUdxRCxJQUFJLENBQUNrRCxLQUFMLENBQVd2RyxLQUFLLEdBQUdILElBQW5CLElBQTJCQSxJQUEzQixHQUFrQ0osR0FBMUM7QUFDRDs7QUFDRCxTQUFPNUIsdURBQUssQ0FBQzRCLEdBQUQsRUFBTU8sS0FBTixFQUFhTixHQUFiLENBQVo7QUFDRCxDQU5EOztBQU9BLE1BQU0rRCxZQUFZLEdBQUcsQ0FBQ3pELEtBQUQsRUFBUVAsR0FBUixFQUFhQyxHQUFiLEtBQXFCO0FBQ3hDLFNBQU83Qix1REFBSyxDQUFDLENBQUQsRUFBSSxDQUFDbUMsS0FBSyxHQUFHUCxHQUFULEtBQWlCQyxHQUFHLEdBQUdELEdBQXZCLENBQUosRUFBaUMsQ0FBakMsQ0FBWjtBQUNELENBRkQ7O0FBR0EsSUFBSTJDLFFBQVEsR0FBRyxDQUFmO0FBQ0EzRCxLQUFLLENBQUNrSCxLQUFOLEdBQWM7QUFDWmEsRUFBQUEsR0FBRyxFQUFFakksV0FETztBQUVaa0ksRUFBQUEsRUFBRSxFQUFFakk7QUFGUSxDQUFkIiwic291cmNlcyI6WyIuL25vZGVfbW9kdWxlcy9AaW9uaWMvY29yZS9kaXN0L2VzbS9pb24tcmFuZ2UuZW50cnkuanMiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgciBhcyByZWdpc3Rlckluc3RhbmNlLCBlIGFzIGNyZWF0ZUV2ZW50LCBoLCBIIGFzIEhvc3QsIGkgYXMgZ2V0RWxlbWVudCB9IGZyb20gJy4vaW5kZXgtN2E4YjdhMWMuanMnO1xuaW1wb3J0IHsgYiBhcyBnZXRJb25Nb2RlIH0gZnJvbSAnLi9pb25pYy1nbG9iYWwtNjNhOTdhMzIuanMnO1xuaW1wb3J0IHsgaiBhcyBjbGFtcCwgZiBhcyBkZWJvdW5jZUV2ZW50LCBpIGFzIGluaGVyaXRBdHRyaWJ1dGVzLCBkIGFzIGdldEFyaWFMYWJlbCwgZSBhcyByZW5kZXJIaWRkZW5JbnB1dCB9IGZyb20gJy4vaGVscGVycy1kZDdlNGI3Yi5qcyc7XG5pbXBvcnQgeyBjIGFzIGNyZWF0ZUNvbG9yQ2xhc3NlcywgaCBhcyBob3N0Q29udGV4dCB9IGZyb20gJy4vdGhlbWUtZmYzZmM1MmYuanMnO1xuXG5jb25zdCByYW5nZUlvc0NzcyA9IFwiOmhvc3R7LS1rbm9iLWhhbmRsZS1zaXplOmNhbGModmFyKC0ta25vYi1zaXplKSAqIDIpO2Rpc3BsYXk6LW1zLWZsZXhib3g7ZGlzcGxheTpmbGV4O3Bvc2l0aW9uOnJlbGF0aXZlOy1tcy1mbGV4OjM7ZmxleDozOy1tcy1mbGV4LWFsaWduOmNlbnRlcjthbGlnbi1pdGVtczpjZW50ZXI7Zm9udC1mYW1pbHk6dmFyKC0taW9uLWZvbnQtZmFtaWx5LCBpbmhlcml0KTstd2Via2l0LXVzZXItc2VsZWN0Om5vbmU7LW1vei11c2VyLXNlbGVjdDpub25lOy1tcy11c2VyLXNlbGVjdDpub25lO3VzZXItc2VsZWN0Om5vbmU7ei1pbmRleDoyfTpob3N0KC5yYW5nZS1kaXNhYmxlZCl7cG9pbnRlci1ldmVudHM6bm9uZX06OnNsb3R0ZWQoaW9uLWxhYmVsKXstbXMtZmxleDppbml0aWFsO2ZsZXg6aW5pdGlhbH06OnNsb3R0ZWQoaW9uLWljb25bc2xvdF0pe2ZvbnQtc2l6ZToyNHB4fS5yYW5nZS1zbGlkZXJ7cG9zaXRpb246cmVsYXRpdmU7LW1zLWZsZXg6MTtmbGV4OjE7d2lkdGg6MTAwJTtoZWlnaHQ6dmFyKC0taGVpZ2h0KTtjb250YWluOnNpemUgbGF5b3V0IHN0eWxlO2N1cnNvcjotd2Via2l0LWdyYWI7Y3Vyc29yOmdyYWI7LW1zLXRvdWNoLWFjdGlvbjpwYW4teTt0b3VjaC1hY3Rpb246cGFuLXl9Omhvc3QoLnJhbmdlLXByZXNzZWQpIC5yYW5nZS1zbGlkZXJ7Y3Vyc29yOi13ZWJraXQtZ3JhYmJpbmc7Y3Vyc29yOmdyYWJiaW5nfS5yYW5nZS1waW57cG9zaXRpb246YWJzb2x1dGU7YmFja2dyb3VuZDp2YXIoLS1pb24tY29sb3ItYmFzZSk7Y29sb3I6dmFyKC0taW9uLWNvbG9yLWNvbnRyYXN0KTt0ZXh0LWFsaWduOmNlbnRlcjstd2Via2l0LWJveC1zaXppbmc6Ym9yZGVyLWJveDtib3gtc2l6aW5nOmJvcmRlci1ib3h9LnJhbmdlLWtub2ItaGFuZGxle2xlZnQ6MDt0b3A6Y2FsYygodmFyKC0taGVpZ2h0KSAtIHZhcigtLWtub2ItaGFuZGxlLXNpemUpKSAvIDIpO21hcmdpbi1sZWZ0OmNhbGMoMHB4IC0gdmFyKC0ta25vYi1oYW5kbGUtc2l6ZSkgLyAyKTtwb3NpdGlvbjphYnNvbHV0ZTt3aWR0aDp2YXIoLS1rbm9iLWhhbmRsZS1zaXplKTtoZWlnaHQ6dmFyKC0ta25vYi1oYW5kbGUtc2l6ZSk7dGV4dC1hbGlnbjpjZW50ZXJ9W2Rpcj1ydGxdIC5yYW5nZS1rbm9iLWhhbmRsZSw6aG9zdC1jb250ZXh0KFtkaXI9cnRsXSkgLnJhbmdlLWtub2ItaGFuZGxle2xlZnQ6dW5zZXQ7cmlnaHQ6dW5zZXQ7cmlnaHQ6MH1Ac3VwcG9ydHMgKCgtd2Via2l0LW1hcmdpbi1zdGFydDogMCkgb3IgKG1hcmdpbi1pbmxpbmUtc3RhcnQ6IDApKSBvciAoLXdlYmtpdC1tYXJnaW4tc3RhcnQ6IDApey5yYW5nZS1rbm9iLWhhbmRsZXttYXJnaW4tbGVmdDp1bnNldDstd2Via2l0LW1hcmdpbi1zdGFydDpjYWxjKDBweCAtIHZhcigtLWtub2ItaGFuZGxlLXNpemUpIC8gMik7bWFyZ2luLWlubGluZS1zdGFydDpjYWxjKDBweCAtIHZhcigtLWtub2ItaGFuZGxlLXNpemUpIC8gMil9fVtkaXI9cnRsXSAucmFuZ2Uta25vYi1oYW5kbGUsOmhvc3QtY29udGV4dChbZGlyPXJ0bF0pIC5yYW5nZS1rbm9iLWhhbmRsZXtsZWZ0OnVuc2V0fS5yYW5nZS1rbm9iLWhhbmRsZTphY3RpdmUsLnJhbmdlLWtub2ItaGFuZGxlOmZvY3Vze291dGxpbmU6bm9uZX0ucmFuZ2UtYmFye2JvcmRlci1yYWRpdXM6dmFyKC0tYmFyLWJvcmRlci1yYWRpdXMpO2xlZnQ6MDt0b3A6Y2FsYygodmFyKC0taGVpZ2h0KSAtIHZhcigtLWJhci1oZWlnaHQpKSAvIDIpO3Bvc2l0aW9uOmFic29sdXRlO3dpZHRoOjEwMCU7aGVpZ2h0OnZhcigtLWJhci1oZWlnaHQpO2JhY2tncm91bmQ6dmFyKC0tYmFyLWJhY2tncm91bmQpO3BvaW50ZXItZXZlbnRzOm5vbmV9W2Rpcj1ydGxdIC5yYW5nZS1iYXIsOmhvc3QtY29udGV4dChbZGlyPXJ0bF0pIC5yYW5nZS1iYXJ7bGVmdDp1bnNldDtyaWdodDp1bnNldDtyaWdodDowfVtkaXI9cnRsXSAucmFuZ2UtYmFyLDpob3N0LWNvbnRleHQoW2Rpcj1ydGxdKSAucmFuZ2UtYmFye2xlZnQ6dW5zZXR9LnJhbmdlLWtub2J7Ym9yZGVyLXJhZGl1czp2YXIoLS1rbm9iLWJvcmRlci1yYWRpdXMpO2xlZnQ6Y2FsYyg1MCUgLSB2YXIoLS1rbm9iLXNpemUpIC8gMik7dG9wOmNhbGMoNTAlIC0gdmFyKC0ta25vYi1zaXplKSAvIDIpO3Bvc2l0aW9uOmFic29sdXRlO3dpZHRoOnZhcigtLWtub2Itc2l6ZSk7aGVpZ2h0OnZhcigtLWtub2Itc2l6ZSk7YmFja2dyb3VuZDp2YXIoLS1rbm9iLWJhY2tncm91bmQpOy13ZWJraXQtYm94LXNoYWRvdzp2YXIoLS1rbm9iLWJveC1zaGFkb3cpO2JveC1zaGFkb3c6dmFyKC0ta25vYi1ib3gtc2hhZG93KTt6LWluZGV4OjI7cG9pbnRlci1ldmVudHM6bm9uZX1bZGlyPXJ0bF0gLnJhbmdlLWtub2IsOmhvc3QtY29udGV4dChbZGlyPXJ0bF0pIC5yYW5nZS1rbm9ie2xlZnQ6dW5zZXQ7cmlnaHQ6dW5zZXQ7cmlnaHQ6Y2FsYyg1MCUgLSB2YXIoLS1rbm9iLXNpemUpIC8gMil9W2Rpcj1ydGxdIC5yYW5nZS1rbm9iLDpob3N0LWNvbnRleHQoW2Rpcj1ydGxdKSAucmFuZ2Uta25vYntsZWZ0OnVuc2V0fTpob3N0KC5yYW5nZS1wcmVzc2VkKSAucmFuZ2UtYmFyLWFjdGl2ZXt3aWxsLWNoYW5nZTpsZWZ0LCByaWdodH06aG9zdCguaW4taXRlbSl7d2lkdGg6MTAwJX06aG9zdCguaW4taXRlbSkgOjpzbG90dGVkKGlvbi1sYWJlbCl7LW1zLWZsZXgtaXRlbS1hbGlnbjpjZW50ZXI7YWxpZ24tc2VsZjpjZW50ZXJ9Omhvc3R7LS1rbm9iLWJvcmRlci1yYWRpdXM6NTAlOy0ta25vYi1iYWNrZ3JvdW5kOiNmZmZmZmY7LS1rbm9iLWJveC1zaGFkb3c6MCAzcHggMXB4IHJnYmEoMCwgMCwgMCwgMC4xKSwgMCA0cHggOHB4IHJnYmEoMCwgMCwgMCwgMC4xMyksIDAgMCAwIDFweCByZ2JhKDAsIDAsIDAsIDAuMDIpOy0ta25vYi1zaXplOjI4cHg7LS1iYXItaGVpZ2h0OjJweDstLWJhci1iYWNrZ3JvdW5kOnJnYmEodmFyKC0taW9uLXRleHQtY29sb3ItcmdiLCAwLCAwLCAwKSwgMC4xKTstLWJhci1iYWNrZ3JvdW5kLWFjdGl2ZTp2YXIoLS1pb24tY29sb3ItcHJpbWFyeSwgIzM4ODBmZik7LS1iYXItYm9yZGVyLXJhZGl1czowOy0taGVpZ2h0OjQycHg7cGFkZGluZy1sZWZ0OjE2cHg7cGFkZGluZy1yaWdodDoxNnB4O3BhZGRpbmctdG9wOjhweDtwYWRkaW5nLWJvdHRvbTo4cHh9QHN1cHBvcnRzICgoLXdlYmtpdC1tYXJnaW4tc3RhcnQ6IDApIG9yIChtYXJnaW4taW5saW5lLXN0YXJ0OiAwKSkgb3IgKC13ZWJraXQtbWFyZ2luLXN0YXJ0OiAwKXs6aG9zdHtwYWRkaW5nLWxlZnQ6dW5zZXQ7cGFkZGluZy1yaWdodDp1bnNldDstd2Via2l0LXBhZGRpbmctc3RhcnQ6MTZweDtwYWRkaW5nLWlubGluZS1zdGFydDoxNnB4Oy13ZWJraXQtcGFkZGluZy1lbmQ6MTZweDtwYWRkaW5nLWlubGluZS1lbmQ6MTZweH19Omhvc3QoLmlvbi1jb2xvcikgLnJhbmdlLWJhci1hY3RpdmUsOmhvc3QoLmlvbi1jb2xvcikgLnJhbmdlLXRpY2stYWN0aXZle2JhY2tncm91bmQ6dmFyKC0taW9uLWNvbG9yLWJhc2UpfTo6c2xvdHRlZChbc2xvdD1zdGFydF0pe21hcmdpbi1sZWZ0OjA7bWFyZ2luLXJpZ2h0OjE2cHg7bWFyZ2luLXRvcDowO21hcmdpbi1ib3R0b206MH1Ac3VwcG9ydHMgKCgtd2Via2l0LW1hcmdpbi1zdGFydDogMCkgb3IgKG1hcmdpbi1pbmxpbmUtc3RhcnQ6IDApKSBvciAoLXdlYmtpdC1tYXJnaW4tc3RhcnQ6IDApezo6c2xvdHRlZChbc2xvdD1zdGFydF0pe21hcmdpbi1sZWZ0OnVuc2V0O21hcmdpbi1yaWdodDp1bnNldDstd2Via2l0LW1hcmdpbi1zdGFydDowO21hcmdpbi1pbmxpbmUtc3RhcnQ6MDstd2Via2l0LW1hcmdpbi1lbmQ6MTZweDttYXJnaW4taW5saW5lLWVuZDoxNnB4fX06OnNsb3R0ZWQoW3Nsb3Q9ZW5kXSl7bWFyZ2luLWxlZnQ6MTZweDttYXJnaW4tcmlnaHQ6MDttYXJnaW4tdG9wOjA7bWFyZ2luLWJvdHRvbTowfUBzdXBwb3J0cyAoKC13ZWJraXQtbWFyZ2luLXN0YXJ0OiAwKSBvciAobWFyZ2luLWlubGluZS1zdGFydDogMCkpIG9yICgtd2Via2l0LW1hcmdpbi1zdGFydDogMCl7OjpzbG90dGVkKFtzbG90PWVuZF0pe21hcmdpbi1sZWZ0OnVuc2V0O21hcmdpbi1yaWdodDp1bnNldDstd2Via2l0LW1hcmdpbi1zdGFydDoxNnB4O21hcmdpbi1pbmxpbmUtc3RhcnQ6MTZweDstd2Via2l0LW1hcmdpbi1lbmQ6MDttYXJnaW4taW5saW5lLWVuZDowfX06aG9zdCgucmFuZ2UtaGFzLXBpbil7cGFkZGluZy10b3A6MjBweH0ucmFuZ2UtYmFyLWFjdGl2ZXtib3R0b206MDt3aWR0aDphdXRvO2JhY2tncm91bmQ6dmFyKC0tYmFyLWJhY2tncm91bmQtYWN0aXZlKX0ucmFuZ2UtdGlja3ttYXJnaW4tbGVmdDotMXB4O2JvcmRlci1yYWRpdXM6MDtwb3NpdGlvbjphYnNvbHV0ZTt0b3A6MThweDt3aWR0aDoycHg7aGVpZ2h0OjhweDtiYWNrZ3JvdW5kOnJnYmEodmFyKC0taW9uLXRleHQtY29sb3ItcmdiLCAwLCAwLCAwKSwgMC4xKTtwb2ludGVyLWV2ZW50czpub25lfUBzdXBwb3J0cyAoKC13ZWJraXQtbWFyZ2luLXN0YXJ0OiAwKSBvciAobWFyZ2luLWlubGluZS1zdGFydDogMCkpIG9yICgtd2Via2l0LW1hcmdpbi1zdGFydDogMCl7LnJhbmdlLXRpY2t7bWFyZ2luLWxlZnQ6dW5zZXQ7LXdlYmtpdC1tYXJnaW4tc3RhcnQ6LTFweDttYXJnaW4taW5saW5lLXN0YXJ0Oi0xcHh9fS5yYW5nZS10aWNrLWFjdGl2ZXtiYWNrZ3JvdW5kOnZhcigtLWJhci1iYWNrZ3JvdW5kLWFjdGl2ZSl9LnJhbmdlLXBpbnstd2Via2l0LXRyYW5zZm9ybTp0cmFuc2xhdGUzZCgwLCAgMjhweCwgIDApIHNjYWxlKDAuMDEpO3RyYW5zZm9ybTp0cmFuc2xhdGUzZCgwLCAgMjhweCwgIDApIHNjYWxlKDAuMDEpO3BhZGRpbmctbGVmdDo4cHg7cGFkZGluZy1yaWdodDo4cHg7cGFkZGluZy10b3A6OHB4O3BhZGRpbmctYm90dG9tOjhweDtkaXNwbGF5OmlubGluZS1ibG9jaztwb3NpdGlvbjpyZWxhdGl2ZTt0b3A6LTIwcHg7bWluLXdpZHRoOjI4cHg7LXdlYmtpdC10cmFuc2l0aW9uOi13ZWJraXQtdHJhbnNmb3JtIDEyMG1zIGVhc2U7dHJhbnNpdGlvbjotd2Via2l0LXRyYW5zZm9ybSAxMjBtcyBlYXNlO3RyYW5zaXRpb246dHJhbnNmb3JtIDEyMG1zIGVhc2U7dHJhbnNpdGlvbjp0cmFuc2Zvcm0gMTIwbXMgZWFzZSwgLXdlYmtpdC10cmFuc2Zvcm0gMTIwbXMgZWFzZTtiYWNrZ3JvdW5kOnRyYW5zcGFyZW50O2NvbG9yOnZhcigtLWlvbi10ZXh0LWNvbG9yLCAjMDAwKTtmb250LXNpemU6MTJweDt0ZXh0LWFsaWduOmNlbnRlcn1Ac3VwcG9ydHMgKCgtd2Via2l0LW1hcmdpbi1zdGFydDogMCkgb3IgKG1hcmdpbi1pbmxpbmUtc3RhcnQ6IDApKSBvciAoLXdlYmtpdC1tYXJnaW4tc3RhcnQ6IDApey5yYW5nZS1waW57cGFkZGluZy1sZWZ0OnVuc2V0O3BhZGRpbmctcmlnaHQ6dW5zZXQ7LXdlYmtpdC1wYWRkaW5nLXN0YXJ0OjhweDtwYWRkaW5nLWlubGluZS1zdGFydDo4cHg7LXdlYmtpdC1wYWRkaW5nLWVuZDo4cHg7cGFkZGluZy1pbmxpbmUtZW5kOjhweH19LnJhbmdlLWtub2ItcHJlc3NlZCAucmFuZ2UtcGluey13ZWJraXQtdHJhbnNmb3JtOnRyYW5zbGF0ZTNkKDAsICAwLCAgMCkgc2NhbGUoMSk7dHJhbnNmb3JtOnRyYW5zbGF0ZTNkKDAsICAwLCAgMCkgc2NhbGUoMSl9Omhvc3QoLnJhbmdlLWRpc2FibGVkKXtvcGFjaXR5OjAuNX1cIjtcblxuY29uc3QgcmFuZ2VNZENzcyA9IFwiOmhvc3R7LS1rbm9iLWhhbmRsZS1zaXplOmNhbGModmFyKC0ta25vYi1zaXplKSAqIDIpO2Rpc3BsYXk6LW1zLWZsZXhib3g7ZGlzcGxheTpmbGV4O3Bvc2l0aW9uOnJlbGF0aXZlOy1tcy1mbGV4OjM7ZmxleDozOy1tcy1mbGV4LWFsaWduOmNlbnRlcjthbGlnbi1pdGVtczpjZW50ZXI7Zm9udC1mYW1pbHk6dmFyKC0taW9uLWZvbnQtZmFtaWx5LCBpbmhlcml0KTstd2Via2l0LXVzZXItc2VsZWN0Om5vbmU7LW1vei11c2VyLXNlbGVjdDpub25lOy1tcy11c2VyLXNlbGVjdDpub25lO3VzZXItc2VsZWN0Om5vbmU7ei1pbmRleDoyfTpob3N0KC5yYW5nZS1kaXNhYmxlZCl7cG9pbnRlci1ldmVudHM6bm9uZX06OnNsb3R0ZWQoaW9uLWxhYmVsKXstbXMtZmxleDppbml0aWFsO2ZsZXg6aW5pdGlhbH06OnNsb3R0ZWQoaW9uLWljb25bc2xvdF0pe2ZvbnQtc2l6ZToyNHB4fS5yYW5nZS1zbGlkZXJ7cG9zaXRpb246cmVsYXRpdmU7LW1zLWZsZXg6MTtmbGV4OjE7d2lkdGg6MTAwJTtoZWlnaHQ6dmFyKC0taGVpZ2h0KTtjb250YWluOnNpemUgbGF5b3V0IHN0eWxlO2N1cnNvcjotd2Via2l0LWdyYWI7Y3Vyc29yOmdyYWI7LW1zLXRvdWNoLWFjdGlvbjpwYW4teTt0b3VjaC1hY3Rpb246cGFuLXl9Omhvc3QoLnJhbmdlLXByZXNzZWQpIC5yYW5nZS1zbGlkZXJ7Y3Vyc29yOi13ZWJraXQtZ3JhYmJpbmc7Y3Vyc29yOmdyYWJiaW5nfS5yYW5nZS1waW57cG9zaXRpb246YWJzb2x1dGU7YmFja2dyb3VuZDp2YXIoLS1pb24tY29sb3ItYmFzZSk7Y29sb3I6dmFyKC0taW9uLWNvbG9yLWNvbnRyYXN0KTt0ZXh0LWFsaWduOmNlbnRlcjstd2Via2l0LWJveC1zaXppbmc6Ym9yZGVyLWJveDtib3gtc2l6aW5nOmJvcmRlci1ib3h9LnJhbmdlLWtub2ItaGFuZGxle2xlZnQ6MDt0b3A6Y2FsYygodmFyKC0taGVpZ2h0KSAtIHZhcigtLWtub2ItaGFuZGxlLXNpemUpKSAvIDIpO21hcmdpbi1sZWZ0OmNhbGMoMHB4IC0gdmFyKC0ta25vYi1oYW5kbGUtc2l6ZSkgLyAyKTtwb3NpdGlvbjphYnNvbHV0ZTt3aWR0aDp2YXIoLS1rbm9iLWhhbmRsZS1zaXplKTtoZWlnaHQ6dmFyKC0ta25vYi1oYW5kbGUtc2l6ZSk7dGV4dC1hbGlnbjpjZW50ZXJ9W2Rpcj1ydGxdIC5yYW5nZS1rbm9iLWhhbmRsZSw6aG9zdC1jb250ZXh0KFtkaXI9cnRsXSkgLnJhbmdlLWtub2ItaGFuZGxle2xlZnQ6dW5zZXQ7cmlnaHQ6dW5zZXQ7cmlnaHQ6MH1Ac3VwcG9ydHMgKCgtd2Via2l0LW1hcmdpbi1zdGFydDogMCkgb3IgKG1hcmdpbi1pbmxpbmUtc3RhcnQ6IDApKSBvciAoLXdlYmtpdC1tYXJnaW4tc3RhcnQ6IDApey5yYW5nZS1rbm9iLWhhbmRsZXttYXJnaW4tbGVmdDp1bnNldDstd2Via2l0LW1hcmdpbi1zdGFydDpjYWxjKDBweCAtIHZhcigtLWtub2ItaGFuZGxlLXNpemUpIC8gMik7bWFyZ2luLWlubGluZS1zdGFydDpjYWxjKDBweCAtIHZhcigtLWtub2ItaGFuZGxlLXNpemUpIC8gMil9fVtkaXI9cnRsXSAucmFuZ2Uta25vYi1oYW5kbGUsOmhvc3QtY29udGV4dChbZGlyPXJ0bF0pIC5yYW5nZS1rbm9iLWhhbmRsZXtsZWZ0OnVuc2V0fS5yYW5nZS1rbm9iLWhhbmRsZTphY3RpdmUsLnJhbmdlLWtub2ItaGFuZGxlOmZvY3Vze291dGxpbmU6bm9uZX0ucmFuZ2UtYmFye2JvcmRlci1yYWRpdXM6dmFyKC0tYmFyLWJvcmRlci1yYWRpdXMpO2xlZnQ6MDt0b3A6Y2FsYygodmFyKC0taGVpZ2h0KSAtIHZhcigtLWJhci1oZWlnaHQpKSAvIDIpO3Bvc2l0aW9uOmFic29sdXRlO3dpZHRoOjEwMCU7aGVpZ2h0OnZhcigtLWJhci1oZWlnaHQpO2JhY2tncm91bmQ6dmFyKC0tYmFyLWJhY2tncm91bmQpO3BvaW50ZXItZXZlbnRzOm5vbmV9W2Rpcj1ydGxdIC5yYW5nZS1iYXIsOmhvc3QtY29udGV4dChbZGlyPXJ0bF0pIC5yYW5nZS1iYXJ7bGVmdDp1bnNldDtyaWdodDp1bnNldDtyaWdodDowfVtkaXI9cnRsXSAucmFuZ2UtYmFyLDpob3N0LWNvbnRleHQoW2Rpcj1ydGxdKSAucmFuZ2UtYmFye2xlZnQ6dW5zZXR9LnJhbmdlLWtub2J7Ym9yZGVyLXJhZGl1czp2YXIoLS1rbm9iLWJvcmRlci1yYWRpdXMpO2xlZnQ6Y2FsYyg1MCUgLSB2YXIoLS1rbm9iLXNpemUpIC8gMik7dG9wOmNhbGMoNTAlIC0gdmFyKC0ta25vYi1zaXplKSAvIDIpO3Bvc2l0aW9uOmFic29sdXRlO3dpZHRoOnZhcigtLWtub2Itc2l6ZSk7aGVpZ2h0OnZhcigtLWtub2Itc2l6ZSk7YmFja2dyb3VuZDp2YXIoLS1rbm9iLWJhY2tncm91bmQpOy13ZWJraXQtYm94LXNoYWRvdzp2YXIoLS1rbm9iLWJveC1zaGFkb3cpO2JveC1zaGFkb3c6dmFyKC0ta25vYi1ib3gtc2hhZG93KTt6LWluZGV4OjI7cG9pbnRlci1ldmVudHM6bm9uZX1bZGlyPXJ0bF0gLnJhbmdlLWtub2IsOmhvc3QtY29udGV4dChbZGlyPXJ0bF0pIC5yYW5nZS1rbm9ie2xlZnQ6dW5zZXQ7cmlnaHQ6dW5zZXQ7cmlnaHQ6Y2FsYyg1MCUgLSB2YXIoLS1rbm9iLXNpemUpIC8gMil9W2Rpcj1ydGxdIC5yYW5nZS1rbm9iLDpob3N0LWNvbnRleHQoW2Rpcj1ydGxdKSAucmFuZ2Uta25vYntsZWZ0OnVuc2V0fTpob3N0KC5yYW5nZS1wcmVzc2VkKSAucmFuZ2UtYmFyLWFjdGl2ZXt3aWxsLWNoYW5nZTpsZWZ0LCByaWdodH06aG9zdCguaW4taXRlbSl7d2lkdGg6MTAwJX06aG9zdCguaW4taXRlbSkgOjpzbG90dGVkKGlvbi1sYWJlbCl7LW1zLWZsZXgtaXRlbS1hbGlnbjpjZW50ZXI7YWxpZ24tc2VsZjpjZW50ZXJ9Omhvc3R7LS1rbm9iLWJvcmRlci1yYWRpdXM6NTAlOy0ta25vYi1iYWNrZ3JvdW5kOnZhcigtLWJhci1iYWNrZ3JvdW5kLWFjdGl2ZSk7LS1rbm9iLWJveC1zaGFkb3c6bm9uZTstLWtub2Itc2l6ZToxOHB4Oy0tYmFyLWhlaWdodDoycHg7LS1iYXItYmFja2dyb3VuZDpyZ2JhKHZhcigtLWlvbi1jb2xvci1wcmltYXJ5LXJnYiwgNTYsIDEyOCwgMjU1KSwgMC4yNik7LS1iYXItYmFja2dyb3VuZC1hY3RpdmU6dmFyKC0taW9uLWNvbG9yLXByaW1hcnksICMzODgwZmYpOy0tYmFyLWJvcmRlci1yYWRpdXM6MDstLWhlaWdodDo0MnB4Oy0tcGluLWJhY2tncm91bmQ6dmFyKC0taW9uLWNvbG9yLXByaW1hcnksICMzODgwZmYpOy0tcGluLWNvbG9yOnZhcigtLWlvbi1jb2xvci1wcmltYXJ5LWNvbnRyYXN0LCAjZmZmKTtwYWRkaW5nLWxlZnQ6MTRweDtwYWRkaW5nLXJpZ2h0OjE0cHg7cGFkZGluZy10b3A6OHB4O3BhZGRpbmctYm90dG9tOjhweDtmb250LXNpemU6MTJweH1Ac3VwcG9ydHMgKCgtd2Via2l0LW1hcmdpbi1zdGFydDogMCkgb3IgKG1hcmdpbi1pbmxpbmUtc3RhcnQ6IDApKSBvciAoLXdlYmtpdC1tYXJnaW4tc3RhcnQ6IDApezpob3N0e3BhZGRpbmctbGVmdDp1bnNldDtwYWRkaW5nLXJpZ2h0OnVuc2V0Oy13ZWJraXQtcGFkZGluZy1zdGFydDoxNHB4O3BhZGRpbmctaW5saW5lLXN0YXJ0OjE0cHg7LXdlYmtpdC1wYWRkaW5nLWVuZDoxNHB4O3BhZGRpbmctaW5saW5lLWVuZDoxNHB4fX06aG9zdCguaW9uLWNvbG9yKSAucmFuZ2UtYmFye2JhY2tncm91bmQ6cmdiYSh2YXIoLS1pb24tY29sb3ItYmFzZS1yZ2IpLCAwLjI2KX06aG9zdCguaW9uLWNvbG9yKSAucmFuZ2UtYmFyLWFjdGl2ZSw6aG9zdCguaW9uLWNvbG9yKSAucmFuZ2Uta25vYiw6aG9zdCguaW9uLWNvbG9yKSAucmFuZ2UtcGluLDpob3N0KC5pb24tY29sb3IpIC5yYW5nZS1waW46OmJlZm9yZSw6aG9zdCguaW9uLWNvbG9yKSAucmFuZ2UtdGlja3tiYWNrZ3JvdW5kOnZhcigtLWlvbi1jb2xvci1iYXNlKTtjb2xvcjp2YXIoLS1pb24tY29sb3ItY29udHJhc3QpfTo6c2xvdHRlZChbc2xvdD1zdGFydF0pe21hcmdpbi1sZWZ0OjA7bWFyZ2luLXJpZ2h0OjE0cHg7bWFyZ2luLXRvcDowO21hcmdpbi1ib3R0b206MH1Ac3VwcG9ydHMgKCgtd2Via2l0LW1hcmdpbi1zdGFydDogMCkgb3IgKG1hcmdpbi1pbmxpbmUtc3RhcnQ6IDApKSBvciAoLXdlYmtpdC1tYXJnaW4tc3RhcnQ6IDApezo6c2xvdHRlZChbc2xvdD1zdGFydF0pe21hcmdpbi1sZWZ0OnVuc2V0O21hcmdpbi1yaWdodDp1bnNldDstd2Via2l0LW1hcmdpbi1zdGFydDowO21hcmdpbi1pbmxpbmUtc3RhcnQ6MDstd2Via2l0LW1hcmdpbi1lbmQ6MTRweDttYXJnaW4taW5saW5lLWVuZDoxNHB4fX06OnNsb3R0ZWQoW3Nsb3Q9ZW5kXSl7bWFyZ2luLWxlZnQ6MTRweDttYXJnaW4tcmlnaHQ6MDttYXJnaW4tdG9wOjA7bWFyZ2luLWJvdHRvbTowfUBzdXBwb3J0cyAoKC13ZWJraXQtbWFyZ2luLXN0YXJ0OiAwKSBvciAobWFyZ2luLWlubGluZS1zdGFydDogMCkpIG9yICgtd2Via2l0LW1hcmdpbi1zdGFydDogMCl7OjpzbG90dGVkKFtzbG90PWVuZF0pe21hcmdpbi1sZWZ0OnVuc2V0O21hcmdpbi1yaWdodDp1bnNldDstd2Via2l0LW1hcmdpbi1zdGFydDoxNHB4O21hcmdpbi1pbmxpbmUtc3RhcnQ6MTRweDstd2Via2l0LW1hcmdpbi1lbmQ6MDttYXJnaW4taW5saW5lLWVuZDowfX06aG9zdCgucmFuZ2UtaGFzLXBpbil7cGFkZGluZy10b3A6MjhweH0ucmFuZ2UtYmFyLWFjdGl2ZXtib3R0b206MDt3aWR0aDphdXRvO2JhY2tncm91bmQ6dmFyKC0tYmFyLWJhY2tncm91bmQtYWN0aXZlKX0ucmFuZ2Uta25vYnstd2Via2l0LXRyYW5zZm9ybTpzY2FsZSgwLjY3KTt0cmFuc2Zvcm06c2NhbGUoMC42Nyk7LXdlYmtpdC10cmFuc2l0aW9uLWR1cmF0aW9uOjEyMG1zO3RyYW5zaXRpb24tZHVyYXRpb246MTIwbXM7LXdlYmtpdC10cmFuc2l0aW9uLXByb3BlcnR5OmJhY2tncm91bmQtY29sb3IsIGJvcmRlciwgLXdlYmtpdC10cmFuc2Zvcm07dHJhbnNpdGlvbi1wcm9wZXJ0eTpiYWNrZ3JvdW5kLWNvbG9yLCBib3JkZXIsIC13ZWJraXQtdHJhbnNmb3JtO3RyYW5zaXRpb24tcHJvcGVydHk6dHJhbnNmb3JtLCBiYWNrZ3JvdW5kLWNvbG9yLCBib3JkZXI7dHJhbnNpdGlvbi1wcm9wZXJ0eTp0cmFuc2Zvcm0sIGJhY2tncm91bmQtY29sb3IsIGJvcmRlciwgLXdlYmtpdC10cmFuc2Zvcm07LXdlYmtpdC10cmFuc2l0aW9uLXRpbWluZy1mdW5jdGlvbjplYXNlO3RyYW5zaXRpb24tdGltaW5nLWZ1bmN0aW9uOmVhc2U7ei1pbmRleDoyfS5yYW5nZS10aWNre3Bvc2l0aW9uOmFic29sdXRlO3RvcDpjYWxjKCh2YXIoLS1oZWlnaHQpIC0gdmFyKC0tYmFyLWhlaWdodCkpIC8gMik7d2lkdGg6dmFyKC0tYmFyLWhlaWdodCk7aGVpZ2h0OnZhcigtLWJhci1oZWlnaHQpO2JhY2tncm91bmQ6dmFyKC0tYmFyLWJhY2tncm91bmQtYWN0aXZlKTt6LWluZGV4OjE7cG9pbnRlci1ldmVudHM6bm9uZX0ucmFuZ2UtdGljay1hY3RpdmV7YmFja2dyb3VuZDp0cmFuc3BhcmVudH0ucmFuZ2UtcGlue3BhZGRpbmctbGVmdDowO3BhZGRpbmctcmlnaHQ6MDtwYWRkaW5nLXRvcDo4cHg7cGFkZGluZy1ib3R0b206OHB4O2JvcmRlci1yYWRpdXM6NTAlOy13ZWJraXQtdHJhbnNmb3JtOnRyYW5zbGF0ZTNkKDAsICAwLCAgMCkgc2NhbGUoMC4wMSk7dHJhbnNmb3JtOnRyYW5zbGF0ZTNkKDAsICAwLCAgMCkgc2NhbGUoMC4wMSk7ZGlzcGxheTppbmxpbmUtYmxvY2s7cG9zaXRpb246cmVsYXRpdmU7bWluLXdpZHRoOjI4cHg7aGVpZ2h0OjI4cHg7LXdlYmtpdC10cmFuc2l0aW9uOmJhY2tncm91bmQgMTIwbXMgZWFzZSwgLXdlYmtpdC10cmFuc2Zvcm0gMTIwbXMgZWFzZTt0cmFuc2l0aW9uOmJhY2tncm91bmQgMTIwbXMgZWFzZSwgLXdlYmtpdC10cmFuc2Zvcm0gMTIwbXMgZWFzZTt0cmFuc2l0aW9uOnRyYW5zZm9ybSAxMjBtcyBlYXNlLCBiYWNrZ3JvdW5kIDEyMG1zIGVhc2U7dHJhbnNpdGlvbjp0cmFuc2Zvcm0gMTIwbXMgZWFzZSwgYmFja2dyb3VuZCAxMjBtcyBlYXNlLCAtd2Via2l0LXRyYW5zZm9ybSAxMjBtcyBlYXNlO2JhY2tncm91bmQ6dmFyKC0tcGluLWJhY2tncm91bmQpO2NvbG9yOnZhcigtLXBpbi1jb2xvcik7dGV4dC1hbGlnbjpjZW50ZXJ9LnJhbmdlLXBpbjo6YmVmb3Jle2xlZnQ6NTAlO3RvcDozcHg7bWFyZ2luLWxlZnQ6LTEzcHg7Ym9yZGVyLXJhZGl1czo1MCUgNTAlIDUwJSAwO3Bvc2l0aW9uOmFic29sdXRlO3dpZHRoOjI2cHg7aGVpZ2h0OjI2cHg7LXdlYmtpdC10cmFuc2Zvcm06cm90YXRlKC00NWRlZyk7dHJhbnNmb3JtOnJvdGF0ZSgtNDVkZWcpOy13ZWJraXQtdHJhbnNpdGlvbjpiYWNrZ3JvdW5kIDEyMG1zIGVhc2U7dHJhbnNpdGlvbjpiYWNrZ3JvdW5kIDEyMG1zIGVhc2U7YmFja2dyb3VuZDp2YXIoLS1waW4tYmFja2dyb3VuZCk7Y29udGVudDpcXFwiXFxcIjt6LWluZGV4Oi0xfVtkaXI9cnRsXSAucmFuZ2UtcGluOjpiZWZvcmUsOmhvc3QtY29udGV4dChbZGlyPXJ0bF0pIC5yYW5nZS1waW46OmJlZm9yZXtsZWZ0OnVuc2V0O3JpZ2h0OnVuc2V0O3JpZ2h0OjUwJX1Ac3VwcG9ydHMgKCgtd2Via2l0LW1hcmdpbi1zdGFydDogMCkgb3IgKG1hcmdpbi1pbmxpbmUtc3RhcnQ6IDApKSBvciAoLXdlYmtpdC1tYXJnaW4tc3RhcnQ6IDApey5yYW5nZS1waW46OmJlZm9yZXttYXJnaW4tbGVmdDp1bnNldDstd2Via2l0LW1hcmdpbi1zdGFydDotMTNweDttYXJnaW4taW5saW5lLXN0YXJ0Oi0xM3B4fX1bZGlyPXJ0bF0gLnJhbmdlLXBpbjo6YmVmb3JlLDpob3N0LWNvbnRleHQoW2Rpcj1ydGxdKSAucmFuZ2UtcGluOjpiZWZvcmV7bGVmdDp1bnNldH0ucmFuZ2Uta25vYi1wcmVzc2VkIC5yYW5nZS1waW57LXdlYmtpdC10cmFuc2Zvcm06dHJhbnNsYXRlM2QoMCwgIC0yNHB4LCAgMCkgc2NhbGUoMSk7dHJhbnNmb3JtOnRyYW5zbGF0ZTNkKDAsICAtMjRweCwgIDApIHNjYWxlKDEpfTpob3N0KDpub3QoLnJhbmdlLWhhcy1waW4pKSAucmFuZ2Uta25vYi1wcmVzc2VkIC5yYW5nZS1rbm9iey13ZWJraXQtdHJhbnNmb3JtOnNjYWxlKDEpO3RyYW5zZm9ybTpzY2FsZSgxKX06aG9zdCgucmFuZ2UtZGlzYWJsZWQpIC5yYW5nZS1iYXItYWN0aXZlLDpob3N0KC5yYW5nZS1kaXNhYmxlZCkgLnJhbmdlLWJhciw6aG9zdCgucmFuZ2UtZGlzYWJsZWQpIC5yYW5nZS10aWNre2JhY2tncm91bmQtY29sb3I6dmFyKC0taW9uLWNvbG9yLXN0ZXAtMjUwLCAjYmZiZmJmKX06aG9zdCgucmFuZ2UtZGlzYWJsZWQpIC5yYW5nZS1rbm9iey13ZWJraXQtdHJhbnNmb3JtOnNjYWxlKDAuNTUpO3RyYW5zZm9ybTpzY2FsZSgwLjU1KTtvdXRsaW5lOjVweCBzb2xpZCAjZmZmO2JhY2tncm91bmQtY29sb3I6dmFyKC0taW9uLWNvbG9yLXN0ZXAtMjUwLCAjYmZiZmJmKX1cIjtcblxuY29uc3QgUmFuZ2UgPSBjbGFzcyB7XG4gIGNvbnN0cnVjdG9yKGhvc3RSZWYpIHtcbiAgICByZWdpc3Rlckluc3RhbmNlKHRoaXMsIGhvc3RSZWYpO1xuICAgIHRoaXMuaW9uQ2hhbmdlID0gY3JlYXRlRXZlbnQodGhpcywgXCJpb25DaGFuZ2VcIiwgNyk7XG4gICAgdGhpcy5pb25TdHlsZSA9IGNyZWF0ZUV2ZW50KHRoaXMsIFwiaW9uU3R5bGVcIiwgNyk7XG4gICAgdGhpcy5pb25Gb2N1cyA9IGNyZWF0ZUV2ZW50KHRoaXMsIFwiaW9uRm9jdXNcIiwgNyk7XG4gICAgdGhpcy5pb25CbHVyID0gY3JlYXRlRXZlbnQodGhpcywgXCJpb25CbHVyXCIsIDcpO1xuICAgIHRoaXMuZGlkTG9hZCA9IGZhbHNlO1xuICAgIHRoaXMubm9VcGRhdGUgPSBmYWxzZTtcbiAgICB0aGlzLmhhc0ZvY3VzID0gZmFsc2U7XG4gICAgdGhpcy5pbmhlcml0ZWRBdHRyaWJ1dGVzID0ge307XG4gICAgdGhpcy5yYXRpb0EgPSAwO1xuICAgIHRoaXMucmF0aW9CID0gMDtcbiAgICAvKipcbiAgICAgKiBIb3cgbG9uZywgaW4gbWlsbGlzZWNvbmRzLCB0byB3YWl0IHRvIHRyaWdnZXIgdGhlXG4gICAgICogYGlvbkNoYW5nZWAgZXZlbnQgYWZ0ZXIgZWFjaCBjaGFuZ2UgaW4gdGhlIHJhbmdlIHZhbHVlLlxuICAgICAqIFRoaXMgYWxzbyBpbXBhY3RzIGZvcm0gYmluZGluZ3Mgc3VjaCBhcyBgbmdNb2RlbGAgb3IgYHYtbW9kZWxgLlxuICAgICAqL1xuICAgIHRoaXMuZGVib3VuY2UgPSAwO1xuICAgIC8vIFRPRE86IEluIElvbmljIEZyYW1ld29yayB2NiB0aGlzIHNob3VsZCBpbml0aWFsaXplIHRvIHRoaXMucmFuZ2VJZCBsaWtlIHRoZSBvdGhlciBmb3JtIGNvbXBvbmVudHMgZG8uXG4gICAgLyoqXG4gICAgICogVGhlIG5hbWUgb2YgdGhlIGNvbnRyb2wsIHdoaWNoIGlzIHN1Ym1pdHRlZCB3aXRoIHRoZSBmb3JtIGRhdGEuXG4gICAgICovXG4gICAgdGhpcy5uYW1lID0gJyc7XG4gICAgLyoqXG4gICAgICogU2hvdyB0d28ga25vYnMuXG4gICAgICovXG4gICAgdGhpcy5kdWFsS25vYnMgPSBmYWxzZTtcbiAgICAvKipcbiAgICAgKiBNaW5pbXVtIGludGVnZXIgdmFsdWUgb2YgdGhlIHJhbmdlLlxuICAgICAqL1xuICAgIHRoaXMubWluID0gMDtcbiAgICAvKipcbiAgICAgKiBNYXhpbXVtIGludGVnZXIgdmFsdWUgb2YgdGhlIHJhbmdlLlxuICAgICAqL1xuICAgIHRoaXMubWF4ID0gMTAwO1xuICAgIC8qKlxuICAgICAqIElmIGB0cnVlYCwgYSBwaW4gd2l0aCBpbnRlZ2VyIHZhbHVlIGlzIHNob3duIHdoZW4gdGhlIGtub2JcbiAgICAgKiBpcyBwcmVzc2VkLlxuICAgICAqL1xuICAgIHRoaXMucGluID0gZmFsc2U7XG4gICAgLyoqXG4gICAgICogSWYgYHRydWVgLCB0aGUga25vYiBzbmFwcyB0byB0aWNrIG1hcmtzIGV2ZW5seSBzcGFjZWQgYmFzZWRcbiAgICAgKiBvbiB0aGUgc3RlcCBwcm9wZXJ0eSB2YWx1ZS5cbiAgICAgKi9cbiAgICB0aGlzLnNuYXBzID0gZmFsc2U7XG4gICAgLyoqXG4gICAgICogU3BlY2lmaWVzIHRoZSB2YWx1ZSBncmFudWxhcml0eS5cbiAgICAgKi9cbiAgICB0aGlzLnN0ZXAgPSAxO1xuICAgIC8qKlxuICAgICAqIElmIGB0cnVlYCwgdGljayBtYXJrcyBhcmUgZGlzcGxheWVkIGJhc2VkIG9uIHRoZSBzdGVwIHZhbHVlLlxuICAgICAqIE9ubHkgYXBwbGllcyB3aGVuIGBzbmFwc2AgaXMgYHRydWVgLlxuICAgICAqL1xuICAgIHRoaXMudGlja3MgPSB0cnVlO1xuICAgIC8qKlxuICAgICAqIElmIGB0cnVlYCwgdGhlIHVzZXIgY2Fubm90IGludGVyYWN0IHdpdGggdGhlIHJhbmdlLlxuICAgICAqL1xuICAgIHRoaXMuZGlzYWJsZWQgPSBmYWxzZTtcbiAgICAvKipcbiAgICAgKiB0aGUgdmFsdWUgb2YgdGhlIHJhbmdlLlxuICAgICAqL1xuICAgIHRoaXMudmFsdWUgPSAwO1xuICAgIHRoaXMuY2xhbXBCb3VuZHMgPSAodmFsdWUpID0+IHtcbiAgICAgIHJldHVybiBjbGFtcCh0aGlzLm1pbiwgdmFsdWUsIHRoaXMubWF4KTtcbiAgICB9O1xuICAgIHRoaXMuZW5zdXJlVmFsdWVJbkJvdW5kcyA9ICh2YWx1ZSkgPT4ge1xuICAgICAgaWYgKHRoaXMuZHVhbEtub2JzKSB7XG4gICAgICAgIHJldHVybiB7XG4gICAgICAgICAgbG93ZXI6IHRoaXMuY2xhbXBCb3VuZHModmFsdWUubG93ZXIpLFxuICAgICAgICAgIHVwcGVyOiB0aGlzLmNsYW1wQm91bmRzKHZhbHVlLnVwcGVyKVxuICAgICAgICB9O1xuICAgICAgfVxuICAgICAgZWxzZSB7XG4gICAgICAgIHJldHVybiB0aGlzLmNsYW1wQm91bmRzKHZhbHVlKTtcbiAgICAgIH1cbiAgICB9O1xuICAgIHRoaXMuc2V0dXBHZXN0dXJlID0gYXN5bmMgKCkgPT4ge1xuICAgICAgY29uc3QgcmFuZ2VTbGlkZXIgPSB0aGlzLnJhbmdlU2xpZGVyO1xuICAgICAgaWYgKHJhbmdlU2xpZGVyKSB7XG4gICAgICAgIHRoaXMuZ2VzdHVyZSA9IChhd2FpdCBpbXBvcnQoJy4vaW5kZXgtMzRjYjI3NDMuanMnKSkuY3JlYXRlR2VzdHVyZSh7XG4gICAgICAgICAgZWw6IHJhbmdlU2xpZGVyLFxuICAgICAgICAgIGdlc3R1cmVOYW1lOiAncmFuZ2UnLFxuICAgICAgICAgIGdlc3R1cmVQcmlvcml0eTogMTAwLFxuICAgICAgICAgIHRocmVzaG9sZDogMCxcbiAgICAgICAgICBvblN0YXJ0OiBldiA9PiB0aGlzLm9uU3RhcnQoZXYpLFxuICAgICAgICAgIG9uTW92ZTogZXYgPT4gdGhpcy5vbk1vdmUoZXYpLFxuICAgICAgICAgIG9uRW5kOiBldiA9PiB0aGlzLm9uRW5kKGV2KSxcbiAgICAgICAgfSk7XG4gICAgICAgIHRoaXMuZ2VzdHVyZS5lbmFibGUoIXRoaXMuZGlzYWJsZWQpO1xuICAgICAgfVxuICAgIH07XG4gICAgdGhpcy5oYW5kbGVLZXlib2FyZCA9IChrbm9iLCBpc0luY3JlYXNlKSA9PiB7XG4gICAgICBsZXQgc3RlcCA9IHRoaXMuc3RlcDtcbiAgICAgIHN0ZXAgPSBzdGVwID4gMCA/IHN0ZXAgOiAxO1xuICAgICAgc3RlcCA9IHN0ZXAgLyAodGhpcy5tYXggLSB0aGlzLm1pbik7XG4gICAgICBpZiAoIWlzSW5jcmVhc2UpIHtcbiAgICAgICAgc3RlcCAqPSAtMTtcbiAgICAgIH1cbiAgICAgIGlmIChrbm9iID09PSAnQScpIHtcbiAgICAgICAgdGhpcy5yYXRpb0EgPSBjbGFtcCgwLCB0aGlzLnJhdGlvQSArIHN0ZXAsIDEpO1xuICAgICAgfVxuICAgICAgZWxzZSB7XG4gICAgICAgIHRoaXMucmF0aW9CID0gY2xhbXAoMCwgdGhpcy5yYXRpb0IgKyBzdGVwLCAxKTtcbiAgICAgIH1cbiAgICAgIHRoaXMudXBkYXRlVmFsdWUoKTtcbiAgICB9O1xuICAgIHRoaXMub25CbHVyID0gKCkgPT4ge1xuICAgICAgaWYgKHRoaXMuaGFzRm9jdXMpIHtcbiAgICAgICAgdGhpcy5oYXNGb2N1cyA9IGZhbHNlO1xuICAgICAgICB0aGlzLmlvbkJsdXIuZW1pdCgpO1xuICAgICAgICB0aGlzLmVtaXRTdHlsZSgpO1xuICAgICAgfVxuICAgIH07XG4gICAgdGhpcy5vbkZvY3VzID0gKCkgPT4ge1xuICAgICAgaWYgKCF0aGlzLmhhc0ZvY3VzKSB7XG4gICAgICAgIHRoaXMuaGFzRm9jdXMgPSB0cnVlO1xuICAgICAgICB0aGlzLmlvbkZvY3VzLmVtaXQoKTtcbiAgICAgICAgdGhpcy5lbWl0U3R5bGUoKTtcbiAgICAgIH1cbiAgICB9O1xuICB9XG4gIGRlYm91bmNlQ2hhbmdlZCgpIHtcbiAgICB0aGlzLmlvbkNoYW5nZSA9IGRlYm91bmNlRXZlbnQodGhpcy5pb25DaGFuZ2UsIHRoaXMuZGVib3VuY2UpO1xuICB9XG4gIG1pbkNoYW5nZWQoKSB7XG4gICAgaWYgKCF0aGlzLm5vVXBkYXRlKSB7XG4gICAgICB0aGlzLnVwZGF0ZVJhdGlvKCk7XG4gICAgfVxuICB9XG4gIG1heENoYW5nZWQoKSB7XG4gICAgaWYgKCF0aGlzLm5vVXBkYXRlKSB7XG4gICAgICB0aGlzLnVwZGF0ZVJhdGlvKCk7XG4gICAgfVxuICB9XG4gIGRpc2FibGVkQ2hhbmdlZCgpIHtcbiAgICBpZiAodGhpcy5nZXN0dXJlKSB7XG4gICAgICB0aGlzLmdlc3R1cmUuZW5hYmxlKCF0aGlzLmRpc2FibGVkKTtcbiAgICB9XG4gICAgdGhpcy5lbWl0U3R5bGUoKTtcbiAgfVxuICB2YWx1ZUNoYW5nZWQodmFsdWUpIHtcbiAgICBpZiAoIXRoaXMubm9VcGRhdGUpIHtcbiAgICAgIHRoaXMudXBkYXRlUmF0aW8oKTtcbiAgICB9XG4gICAgdmFsdWUgPSB0aGlzLmVuc3VyZVZhbHVlSW5Cb3VuZHModmFsdWUpO1xuICAgIHRoaXMuaW9uQ2hhbmdlLmVtaXQoeyB2YWx1ZSB9KTtcbiAgfVxuICBjb21wb25lbnRXaWxsTG9hZCgpIHtcbiAgICAvKipcbiAgICAgKiBJZiB1c2VyIGhhcyBjdXN0b20gSUQgc2V0IHRoZW4gd2Ugc2hvdWxkXG4gICAgICogbm90IGFzc2lnbiB0aGUgZGVmYXVsdCBpbmNyZW1lbnRpbmcgSUQuXG4gICAgICovXG4gICAgdGhpcy5yYW5nZUlkID0gKHRoaXMuZWwuaGFzQXR0cmlidXRlKCdpZCcpKSA/IHRoaXMuZWwuZ2V0QXR0cmlidXRlKCdpZCcpIDogYGlvbi1yLSR7cmFuZ2VJZHMrK31gO1xuICAgIHRoaXMuaW5oZXJpdGVkQXR0cmlidXRlcyA9IGluaGVyaXRBdHRyaWJ1dGVzKHRoaXMuZWwsIFsnYXJpYS1sYWJlbCddKTtcbiAgfVxuICBjb21wb25lbnREaWRMb2FkKCkge1xuICAgIHRoaXMuc2V0dXBHZXN0dXJlKCk7XG4gICAgdGhpcy5kaWRMb2FkID0gdHJ1ZTtcbiAgfVxuICBjb25uZWN0ZWRDYWxsYmFjaygpIHtcbiAgICB0aGlzLnVwZGF0ZVJhdGlvKCk7XG4gICAgdGhpcy5kZWJvdW5jZUNoYW5nZWQoKTtcbiAgICB0aGlzLmRpc2FibGVkQ2hhbmdlZCgpO1xuICAgIC8qKlxuICAgICAqIElmIHdlIGhhdmUgbm90IHlldCByZW5kZXJlZFxuICAgICAqIGlvbi1yYW5nZSwgdGhlbiByYW5nZVNsaWRlciBpcyBub3QgZGVmaW5lZC5cbiAgICAgKiBCdXQgaWYgd2UgYXJlIG1vdmluZyBpb24tcmFuZ2UgdmlhIGFwcGVuZENoaWxkLFxuICAgICAqIHRoZW4gcmFuZ2VTbGlkZXIgd2lsbCBiZSBkZWZpbmVkLlxuICAgICAqL1xuICAgIGlmICh0aGlzLmRpZExvYWQpIHtcbiAgICAgIHRoaXMuc2V0dXBHZXN0dXJlKCk7XG4gICAgfVxuICB9XG4gIGRpc2Nvbm5lY3RlZENhbGxiYWNrKCkge1xuICAgIGlmICh0aGlzLmdlc3R1cmUpIHtcbiAgICAgIHRoaXMuZ2VzdHVyZS5kZXN0cm95KCk7XG4gICAgICB0aGlzLmdlc3R1cmUgPSB1bmRlZmluZWQ7XG4gICAgfVxuICB9XG4gIGdldFZhbHVlKCkge1xuICAgIGNvbnN0IHZhbHVlID0gdGhpcy52YWx1ZSB8fCAwO1xuICAgIGlmICh0aGlzLmR1YWxLbm9icykge1xuICAgICAgaWYgKHR5cGVvZiB2YWx1ZSA9PT0gJ29iamVjdCcpIHtcbiAgICAgICAgcmV0dXJuIHZhbHVlO1xuICAgICAgfVxuICAgICAgcmV0dXJuIHtcbiAgICAgICAgbG93ZXI6IDAsXG4gICAgICAgIHVwcGVyOiB2YWx1ZVxuICAgICAgfTtcbiAgICB9XG4gICAgZWxzZSB7XG4gICAgICBpZiAodHlwZW9mIHZhbHVlID09PSAnb2JqZWN0Jykge1xuICAgICAgICByZXR1cm4gdmFsdWUudXBwZXI7XG4gICAgICB9XG4gICAgICByZXR1cm4gdmFsdWU7XG4gICAgfVxuICB9XG4gIGVtaXRTdHlsZSgpIHtcbiAgICB0aGlzLmlvblN0eWxlLmVtaXQoe1xuICAgICAgJ2ludGVyYWN0aXZlJzogdHJ1ZSxcbiAgICAgICdpbnRlcmFjdGl2ZS1kaXNhYmxlZCc6IHRoaXMuZGlzYWJsZWRcbiAgICB9KTtcbiAgfVxuICBvblN0YXJ0KGRldGFpbCkge1xuICAgIGNvbnN0IHJlY3QgPSB0aGlzLnJlY3QgPSB0aGlzLnJhbmdlU2xpZGVyLmdldEJvdW5kaW5nQ2xpZW50UmVjdCgpO1xuICAgIGNvbnN0IGN1cnJlbnRYID0gZGV0YWlsLmN1cnJlbnRYO1xuICAgIC8vIGZpZ3VyZSBvdXQgd2hpY2gga25vYiB0aGV5IHN0YXJ0ZWQgY2xvc2VyIHRvXG4gICAgbGV0IHJhdGlvID0gY2xhbXAoMCwgKGN1cnJlbnRYIC0gcmVjdC5sZWZ0KSAvIHJlY3Qud2lkdGgsIDEpO1xuICAgIGlmIChkb2N1bWVudC5kaXIgPT09ICdydGwnKSB7XG4gICAgICByYXRpbyA9IDEgLSByYXRpbztcbiAgICB9XG4gICAgdGhpcy5wcmVzc2VkS25vYiA9XG4gICAgICAhdGhpcy5kdWFsS25vYnMgfHxcbiAgICAgICAgTWF0aC5hYnModGhpcy5yYXRpb0EgLSByYXRpbykgPCBNYXRoLmFicyh0aGlzLnJhdGlvQiAtIHJhdGlvKVxuICAgICAgICA/ICdBJ1xuICAgICAgICA6ICdCJztcbiAgICB0aGlzLnNldEZvY3VzKHRoaXMucHJlc3NlZEtub2IpO1xuICAgIC8vIHVwZGF0ZSB0aGUgYWN0aXZlIGtub2IncyBwb3NpdGlvblxuICAgIHRoaXMudXBkYXRlKGN1cnJlbnRYKTtcbiAgfVxuICBvbk1vdmUoZGV0YWlsKSB7XG4gICAgdGhpcy51cGRhdGUoZGV0YWlsLmN1cnJlbnRYKTtcbiAgfVxuICBvbkVuZChkZXRhaWwpIHtcbiAgICB0aGlzLnVwZGF0ZShkZXRhaWwuY3VycmVudFgpO1xuICAgIHRoaXMucHJlc3NlZEtub2IgPSB1bmRlZmluZWQ7XG4gIH1cbiAgdXBkYXRlKGN1cnJlbnRYKSB7XG4gICAgLy8gZmlndXJlIG91dCB3aGVyZSB0aGUgcG9pbnRlciBpcyBjdXJyZW50bHkgYXRcbiAgICAvLyB1cGRhdGUgdGhlIGtub2IgYmVpbmcgaW50ZXJhY3RlZCB3aXRoXG4gICAgY29uc3QgcmVjdCA9IHRoaXMucmVjdDtcbiAgICBsZXQgcmF0aW8gPSBjbGFtcCgwLCAoY3VycmVudFggLSByZWN0LmxlZnQpIC8gcmVjdC53aWR0aCwgMSk7XG4gICAgaWYgKGRvY3VtZW50LmRpciA9PT0gJ3J0bCcpIHtcbiAgICAgIHJhdGlvID0gMSAtIHJhdGlvO1xuICAgIH1cbiAgICBpZiAodGhpcy5zbmFwcykge1xuICAgICAgLy8gc25hcHMgdGhlIHJhdGlvIHRvIHRoZSBjdXJyZW50IHZhbHVlXG4gICAgICByYXRpbyA9IHZhbHVlVG9SYXRpbyhyYXRpb1RvVmFsdWUocmF0aW8sIHRoaXMubWluLCB0aGlzLm1heCwgdGhpcy5zdGVwKSwgdGhpcy5taW4sIHRoaXMubWF4KTtcbiAgICB9XG4gICAgLy8gdXBkYXRlIHdoaWNoIGtub2IgaXMgcHJlc3NlZFxuICAgIGlmICh0aGlzLnByZXNzZWRLbm9iID09PSAnQScpIHtcbiAgICAgIHRoaXMucmF0aW9BID0gcmF0aW87XG4gICAgfVxuICAgIGVsc2Uge1xuICAgICAgdGhpcy5yYXRpb0IgPSByYXRpbztcbiAgICB9XG4gICAgLy8gVXBkYXRlIGlucHV0IHZhbHVlXG4gICAgdGhpcy51cGRhdGVWYWx1ZSgpO1xuICB9XG4gIGdldCB2YWxBKCkge1xuICAgIHJldHVybiByYXRpb1RvVmFsdWUodGhpcy5yYXRpb0EsIHRoaXMubWluLCB0aGlzLm1heCwgdGhpcy5zdGVwKTtcbiAgfVxuICBnZXQgdmFsQigpIHtcbiAgICByZXR1cm4gcmF0aW9Ub1ZhbHVlKHRoaXMucmF0aW9CLCB0aGlzLm1pbiwgdGhpcy5tYXgsIHRoaXMuc3RlcCk7XG4gIH1cbiAgZ2V0IHJhdGlvTG93ZXIoKSB7XG4gICAgaWYgKHRoaXMuZHVhbEtub2JzKSB7XG4gICAgICByZXR1cm4gTWF0aC5taW4odGhpcy5yYXRpb0EsIHRoaXMucmF0aW9CKTtcbiAgICB9XG4gICAgcmV0dXJuIDA7XG4gIH1cbiAgZ2V0IHJhdGlvVXBwZXIoKSB7XG4gICAgaWYgKHRoaXMuZHVhbEtub2JzKSB7XG4gICAgICByZXR1cm4gTWF0aC5tYXgodGhpcy5yYXRpb0EsIHRoaXMucmF0aW9CKTtcbiAgICB9XG4gICAgcmV0dXJuIHRoaXMucmF0aW9BO1xuICB9XG4gIHVwZGF0ZVJhdGlvKCkge1xuICAgIGNvbnN0IHZhbHVlID0gdGhpcy5nZXRWYWx1ZSgpO1xuICAgIGNvbnN0IHsgbWluLCBtYXggfSA9IHRoaXM7XG4gICAgaWYgKHRoaXMuZHVhbEtub2JzKSB7XG4gICAgICB0aGlzLnJhdGlvQSA9IHZhbHVlVG9SYXRpbyh2YWx1ZS5sb3dlciwgbWluLCBtYXgpO1xuICAgICAgdGhpcy5yYXRpb0IgPSB2YWx1ZVRvUmF0aW8odmFsdWUudXBwZXIsIG1pbiwgbWF4KTtcbiAgICB9XG4gICAgZWxzZSB7XG4gICAgICB0aGlzLnJhdGlvQSA9IHZhbHVlVG9SYXRpbyh2YWx1ZSwgbWluLCBtYXgpO1xuICAgIH1cbiAgfVxuICB1cGRhdGVWYWx1ZSgpIHtcbiAgICB0aGlzLm5vVXBkYXRlID0gdHJ1ZTtcbiAgICBjb25zdCB7IHZhbEEsIHZhbEIgfSA9IHRoaXM7XG4gICAgdGhpcy52YWx1ZSA9ICF0aGlzLmR1YWxLbm9ic1xuICAgICAgPyB2YWxBXG4gICAgICA6IHtcbiAgICAgICAgbG93ZXI6IE1hdGgubWluKHZhbEEsIHZhbEIpLFxuICAgICAgICB1cHBlcjogTWF0aC5tYXgodmFsQSwgdmFsQilcbiAgICAgIH07XG4gICAgdGhpcy5ub1VwZGF0ZSA9IGZhbHNlO1xuICB9XG4gIHNldEZvY3VzKGtub2IpIHtcbiAgICBpZiAodGhpcy5lbC5zaGFkb3dSb290KSB7XG4gICAgICBjb25zdCBrbm9iRWwgPSB0aGlzLmVsLnNoYWRvd1Jvb3QucXVlcnlTZWxlY3Rvcihrbm9iID09PSAnQScgPyAnLnJhbmdlLWtub2ItYScgOiAnLnJhbmdlLWtub2ItYicpO1xuICAgICAgaWYgKGtub2JFbCkge1xuICAgICAgICBrbm9iRWwuZm9jdXMoKTtcbiAgICAgIH1cbiAgICB9XG4gIH1cbiAgcmVuZGVyKCkge1xuICAgIGNvbnN0IHsgbWluLCBtYXgsIHN0ZXAsIGVsLCBoYW5kbGVLZXlib2FyZCwgcHJlc3NlZEtub2IsIGRpc2FibGVkLCBwaW4sIHJhdGlvTG93ZXIsIHJhdGlvVXBwZXIsIGluaGVyaXRlZEF0dHJpYnV0ZXMsIHJhbmdlSWQgfSA9IHRoaXM7XG4gICAgLyoqXG4gICAgICogTG9vayBmb3IgZXh0ZXJuYWwgbGFiZWwsIGlvbi1sYWJlbCwgb3IgYXJpYS1sYWJlbGxlZGJ5LlxuICAgICAqIElmIG5vbmUsIHNlZSBpZiB1c2VyIHBsYWNlZCBhbiBhcmlhLWxhYmVsIG9uIHRoZSBob3N0XG4gICAgICogYW5kIHVzZSB0aGF0IGluc3RlYWQuXG4gICAgICovXG4gICAgbGV0IHsgbGFiZWxUZXh0IH0gPSBnZXRBcmlhTGFiZWwoZWwsIHJhbmdlSWQpO1xuICAgIGlmIChsYWJlbFRleHQgPT09IHVuZGVmaW5lZCB8fCBsYWJlbFRleHQgPT09IG51bGwpIHtcbiAgICAgIGxhYmVsVGV4dCA9IGluaGVyaXRlZEF0dHJpYnV0ZXNbJ2FyaWEtbGFiZWwnXTtcbiAgICB9XG4gICAgY29uc3QgbW9kZSA9IGdldElvbk1vZGUodGhpcyk7XG4gICAgY29uc3QgYmFyU3RhcnQgPSBgJHtyYXRpb0xvd2VyICogMTAwfSVgO1xuICAgIGNvbnN0IGJhckVuZCA9IGAkezEwMCAtIHJhdGlvVXBwZXIgKiAxMDB9JWA7XG4gICAgY29uc3QgZG9jID0gZG9jdW1lbnQ7XG4gICAgY29uc3QgaXNSVEwgPSBkb2MuZGlyID09PSAncnRsJztcbiAgICBjb25zdCBzdGFydCA9IGlzUlRMID8gJ3JpZ2h0JyA6ICdsZWZ0JztcbiAgICBjb25zdCBlbmQgPSBpc1JUTCA/ICdsZWZ0JyA6ICdyaWdodCc7XG4gICAgY29uc3QgdGlja1N0eWxlID0gKHRpY2spID0+IHtcbiAgICAgIHJldHVybiB7XG4gICAgICAgIFtzdGFydF06IHRpY2tbc3RhcnRdXG4gICAgICB9O1xuICAgIH07XG4gICAgY29uc3QgYmFyU3R5bGUgPSB7XG4gICAgICBbc3RhcnRdOiBiYXJTdGFydCxcbiAgICAgIFtlbmRdOiBiYXJFbmRcbiAgICB9O1xuICAgIGNvbnN0IHRpY2tzID0gW107XG4gICAgaWYgKHRoaXMuc25hcHMgJiYgdGhpcy50aWNrcykge1xuICAgICAgZm9yIChsZXQgdmFsdWUgPSBtaW47IHZhbHVlIDw9IG1heDsgdmFsdWUgKz0gc3RlcCkge1xuICAgICAgICBjb25zdCByYXRpbyA9IHZhbHVlVG9SYXRpbyh2YWx1ZSwgbWluLCBtYXgpO1xuICAgICAgICBjb25zdCB0aWNrID0ge1xuICAgICAgICAgIHJhdGlvLFxuICAgICAgICAgIGFjdGl2ZTogcmF0aW8gPj0gcmF0aW9Mb3dlciAmJiByYXRpbyA8PSByYXRpb1VwcGVyLFxuICAgICAgICB9O1xuICAgICAgICB0aWNrW3N0YXJ0XSA9IGAke3JhdGlvICogMTAwfSVgO1xuICAgICAgICB0aWNrcy5wdXNoKHRpY2spO1xuICAgICAgfVxuICAgIH1cbiAgICByZW5kZXJIaWRkZW5JbnB1dCh0cnVlLCBlbCwgdGhpcy5uYW1lLCBKU09OLnN0cmluZ2lmeSh0aGlzLmdldFZhbHVlKCkpLCBkaXNhYmxlZCk7XG4gICAgcmV0dXJuIChoKEhvc3QsIHsgb25Gb2N1c2luOiB0aGlzLm9uRm9jdXMsIG9uRm9jdXNvdXQ6IHRoaXMub25CbHVyLCBpZDogcmFuZ2VJZCwgY2xhc3M6IGNyZWF0ZUNvbG9yQ2xhc3Nlcyh0aGlzLmNvbG9yLCB7XG4gICAgICAgIFttb2RlXTogdHJ1ZSxcbiAgICAgICAgJ2luLWl0ZW0nOiBob3N0Q29udGV4dCgnaW9uLWl0ZW0nLCBlbCksXG4gICAgICAgICdyYW5nZS1kaXNhYmxlZCc6IGRpc2FibGVkLFxuICAgICAgICAncmFuZ2UtcHJlc3NlZCc6IHByZXNzZWRLbm9iICE9PSB1bmRlZmluZWQsXG4gICAgICAgICdyYW5nZS1oYXMtcGluJzogcGluXG4gICAgICB9KSB9LCBoKFwic2xvdFwiLCB7IG5hbWU6IFwic3RhcnRcIiB9KSwgaChcImRpdlwiLCB7IGNsYXNzOiBcInJhbmdlLXNsaWRlclwiLCByZWY6IHJhbmdlRWwgPT4gdGhpcy5yYW5nZVNsaWRlciA9IHJhbmdlRWwgfSwgdGlja3MubWFwKHRpY2sgPT4gKGgoXCJkaXZcIiwgeyBzdHlsZTogdGlja1N0eWxlKHRpY2spLCByb2xlOiBcInByZXNlbnRhdGlvblwiLCBjbGFzczoge1xuICAgICAgICAncmFuZ2UtdGljayc6IHRydWUsXG4gICAgICAgICdyYW5nZS10aWNrLWFjdGl2ZSc6IHRpY2suYWN0aXZlXG4gICAgICB9LCBwYXJ0OiB0aWNrLmFjdGl2ZSA/ICd0aWNrLWFjdGl2ZScgOiAndGljaycgfSkpKSwgaChcImRpdlwiLCB7IGNsYXNzOiBcInJhbmdlLWJhclwiLCByb2xlOiBcInByZXNlbnRhdGlvblwiLCBwYXJ0OiBcImJhclwiIH0pLCBoKFwiZGl2XCIsIHsgY2xhc3M6IFwicmFuZ2UtYmFyIHJhbmdlLWJhci1hY3RpdmVcIiwgcm9sZTogXCJwcmVzZW50YXRpb25cIiwgc3R5bGU6IGJhclN0eWxlLCBwYXJ0OiBcImJhci1hY3RpdmVcIiB9KSwgcmVuZGVyS25vYihpc1JUTCwge1xuICAgICAga25vYjogJ0EnLFxuICAgICAgcHJlc3NlZDogcHJlc3NlZEtub2IgPT09ICdBJyxcbiAgICAgIHZhbHVlOiB0aGlzLnZhbEEsXG4gICAgICByYXRpbzogdGhpcy5yYXRpb0EsXG4gICAgICBwaW4sXG4gICAgICBkaXNhYmxlZCxcbiAgICAgIGhhbmRsZUtleWJvYXJkLFxuICAgICAgbWluLFxuICAgICAgbWF4LFxuICAgICAgbGFiZWxUZXh0XG4gICAgfSksIHRoaXMuZHVhbEtub2JzICYmIHJlbmRlcktub2IoaXNSVEwsIHtcbiAgICAgIGtub2I6ICdCJyxcbiAgICAgIHByZXNzZWQ6IHByZXNzZWRLbm9iID09PSAnQicsXG4gICAgICB2YWx1ZTogdGhpcy52YWxCLFxuICAgICAgcmF0aW86IHRoaXMucmF0aW9CLFxuICAgICAgcGluLFxuICAgICAgZGlzYWJsZWQsXG4gICAgICBoYW5kbGVLZXlib2FyZCxcbiAgICAgIG1pbixcbiAgICAgIG1heCxcbiAgICAgIGxhYmVsVGV4dFxuICAgIH0pKSwgaChcInNsb3RcIiwgeyBuYW1lOiBcImVuZFwiIH0pKSk7XG4gIH1cbiAgZ2V0IGVsKCkgeyByZXR1cm4gZ2V0RWxlbWVudCh0aGlzKTsgfVxuICBzdGF0aWMgZ2V0IHdhdGNoZXJzKCkgeyByZXR1cm4ge1xuICAgIFwiZGVib3VuY2VcIjogW1wiZGVib3VuY2VDaGFuZ2VkXCJdLFxuICAgIFwibWluXCI6IFtcIm1pbkNoYW5nZWRcIl0sXG4gICAgXCJtYXhcIjogW1wibWF4Q2hhbmdlZFwiXSxcbiAgICBcImRpc2FibGVkXCI6IFtcImRpc2FibGVkQ2hhbmdlZFwiXSxcbiAgICBcInZhbHVlXCI6IFtcInZhbHVlQ2hhbmdlZFwiXVxuICB9OyB9XG59O1xuY29uc3QgcmVuZGVyS25vYiA9IChpc1JUTCwgeyBrbm9iLCB2YWx1ZSwgcmF0aW8sIG1pbiwgbWF4LCBkaXNhYmxlZCwgcHJlc3NlZCwgcGluLCBoYW5kbGVLZXlib2FyZCwgbGFiZWxUZXh0IH0pID0+IHtcbiAgY29uc3Qgc3RhcnQgPSBpc1JUTCA/ICdyaWdodCcgOiAnbGVmdCc7XG4gIGNvbnN0IGtub2JTdHlsZSA9ICgpID0+IHtcbiAgICBjb25zdCBzdHlsZSA9IHt9O1xuICAgIHN0eWxlW3N0YXJ0XSA9IGAke3JhdGlvICogMTAwfSVgO1xuICAgIHJldHVybiBzdHlsZTtcbiAgfTtcbiAgcmV0dXJuIChoKFwiZGl2XCIsIHsgb25LZXlEb3duOiAoZXYpID0+IHtcbiAgICAgIGNvbnN0IGtleSA9IGV2LmtleTtcbiAgICAgIGlmIChrZXkgPT09ICdBcnJvd0xlZnQnIHx8IGtleSA9PT0gJ0Fycm93RG93bicpIHtcbiAgICAgICAgaGFuZGxlS2V5Ym9hcmQoa25vYiwgZmFsc2UpO1xuICAgICAgICBldi5wcmV2ZW50RGVmYXVsdCgpO1xuICAgICAgICBldi5zdG9wUHJvcGFnYXRpb24oKTtcbiAgICAgIH1cbiAgICAgIGVsc2UgaWYgKGtleSA9PT0gJ0Fycm93UmlnaHQnIHx8IGtleSA9PT0gJ0Fycm93VXAnKSB7XG4gICAgICAgIGhhbmRsZUtleWJvYXJkKGtub2IsIHRydWUpO1xuICAgICAgICBldi5wcmV2ZW50RGVmYXVsdCgpO1xuICAgICAgICBldi5zdG9wUHJvcGFnYXRpb24oKTtcbiAgICAgIH1cbiAgICB9LCBjbGFzczoge1xuICAgICAgJ3JhbmdlLWtub2ItaGFuZGxlJzogdHJ1ZSxcbiAgICAgICdyYW5nZS1rbm9iLWEnOiBrbm9iID09PSAnQScsXG4gICAgICAncmFuZ2Uta25vYi1iJzoga25vYiA9PT0gJ0InLFxuICAgICAgJ3JhbmdlLWtub2ItcHJlc3NlZCc6IHByZXNzZWQsXG4gICAgICAncmFuZ2Uta25vYi1taW4nOiB2YWx1ZSA9PT0gbWluLFxuICAgICAgJ3JhbmdlLWtub2ItbWF4JzogdmFsdWUgPT09IG1heFxuICAgIH0sIHN0eWxlOiBrbm9iU3R5bGUoKSwgcm9sZTogXCJzbGlkZXJcIiwgdGFiaW5kZXg6IGRpc2FibGVkID8gLTEgOiAwLCBcImFyaWEtbGFiZWxcIjogbGFiZWxUZXh0LCBcImFyaWEtdmFsdWVtaW5cIjogbWluLCBcImFyaWEtdmFsdWVtYXhcIjogbWF4LCBcImFyaWEtZGlzYWJsZWRcIjogZGlzYWJsZWQgPyAndHJ1ZScgOiBudWxsLCBcImFyaWEtdmFsdWVub3dcIjogdmFsdWUgfSwgcGluICYmIGgoXCJkaXZcIiwgeyBjbGFzczogXCJyYW5nZS1waW5cIiwgcm9sZTogXCJwcmVzZW50YXRpb25cIiwgcGFydDogXCJwaW5cIiB9LCBNYXRoLnJvdW5kKHZhbHVlKSksIGgoXCJkaXZcIiwgeyBjbGFzczogXCJyYW5nZS1rbm9iXCIsIHJvbGU6IFwicHJlc2VudGF0aW9uXCIsIHBhcnQ6IFwia25vYlwiIH0pKSk7XG59O1xuY29uc3QgcmF0aW9Ub1ZhbHVlID0gKHJhdGlvLCBtaW4sIG1heCwgc3RlcCkgPT4ge1xuICBsZXQgdmFsdWUgPSAobWF4IC0gbWluKSAqIHJhdGlvO1xuICBpZiAoc3RlcCA+IDApIHtcbiAgICB2YWx1ZSA9IE1hdGgucm91bmQodmFsdWUgLyBzdGVwKSAqIHN0ZXAgKyBtaW47XG4gIH1cbiAgcmV0dXJuIGNsYW1wKG1pbiwgdmFsdWUsIG1heCk7XG59O1xuY29uc3QgdmFsdWVUb1JhdGlvID0gKHZhbHVlLCBtaW4sIG1heCkgPT4ge1xuICByZXR1cm4gY2xhbXAoMCwgKHZhbHVlIC0gbWluKSAvIChtYXggLSBtaW4pLCAxKTtcbn07XG5sZXQgcmFuZ2VJZHMgPSAwO1xuUmFuZ2Uuc3R5bGUgPSB7XG4gIGlvczogcmFuZ2VJb3NDc3MsXG4gIG1kOiByYW5nZU1kQ3NzXG59O1xuXG5leHBvcnQgeyBSYW5nZSBhcyBpb25fcmFuZ2UgfTtcbiJdLCJuYW1lcyI6WyJyIiwicmVnaXN0ZXJJbnN0YW5jZSIsImUiLCJjcmVhdGVFdmVudCIsImgiLCJIIiwiSG9zdCIsImkiLCJnZXRFbGVtZW50IiwiYiIsImdldElvbk1vZGUiLCJqIiwiY2xhbXAiLCJmIiwiZGVib3VuY2VFdmVudCIsImluaGVyaXRBdHRyaWJ1dGVzIiwiZCIsImdldEFyaWFMYWJlbCIsInJlbmRlckhpZGRlbklucHV0IiwiYyIsImNyZWF0ZUNvbG9yQ2xhc3NlcyIsImhvc3RDb250ZXh0IiwicmFuZ2VJb3NDc3MiLCJyYW5nZU1kQ3NzIiwiUmFuZ2UiLCJjb25zdHJ1Y3RvciIsImhvc3RSZWYiLCJpb25DaGFuZ2UiLCJpb25TdHlsZSIsImlvbkZvY3VzIiwiaW9uQmx1ciIsImRpZExvYWQiLCJub1VwZGF0ZSIsImhhc0ZvY3VzIiwiaW5oZXJpdGVkQXR0cmlidXRlcyIsInJhdGlvQSIsInJhdGlvQiIsImRlYm91bmNlIiwibmFtZSIsImR1YWxLbm9icyIsIm1pbiIsIm1heCIsInBpbiIsInNuYXBzIiwic3RlcCIsInRpY2tzIiwiZGlzYWJsZWQiLCJ2YWx1ZSIsImNsYW1wQm91bmRzIiwiZW5zdXJlVmFsdWVJbkJvdW5kcyIsImxvd2VyIiwidXBwZXIiLCJzZXR1cEdlc3R1cmUiLCJyYW5nZVNsaWRlciIsImdlc3R1cmUiLCJjcmVhdGVHZXN0dXJlIiwiZWwiLCJnZXN0dXJlTmFtZSIsImdlc3R1cmVQcmlvcml0eSIsInRocmVzaG9sZCIsIm9uU3RhcnQiLCJldiIsIm9uTW92ZSIsIm9uRW5kIiwiZW5hYmxlIiwiaGFuZGxlS2V5Ym9hcmQiLCJrbm9iIiwiaXNJbmNyZWFzZSIsInVwZGF0ZVZhbHVlIiwib25CbHVyIiwiZW1pdCIsImVtaXRTdHlsZSIsIm9uRm9jdXMiLCJkZWJvdW5jZUNoYW5nZWQiLCJtaW5DaGFuZ2VkIiwidXBkYXRlUmF0aW8iLCJtYXhDaGFuZ2VkIiwiZGlzYWJsZWRDaGFuZ2VkIiwidmFsdWVDaGFuZ2VkIiwiY29tcG9uZW50V2lsbExvYWQiLCJyYW5nZUlkIiwiaGFzQXR0cmlidXRlIiwiZ2V0QXR0cmlidXRlIiwicmFuZ2VJZHMiLCJjb21wb25lbnREaWRMb2FkIiwiY29ubmVjdGVkQ2FsbGJhY2siLCJkaXNjb25uZWN0ZWRDYWxsYmFjayIsImRlc3Ryb3kiLCJ1bmRlZmluZWQiLCJnZXRWYWx1ZSIsImRldGFpbCIsInJlY3QiLCJnZXRCb3VuZGluZ0NsaWVudFJlY3QiLCJjdXJyZW50WCIsInJhdGlvIiwibGVmdCIsIndpZHRoIiwiZG9jdW1lbnQiLCJkaXIiLCJwcmVzc2VkS25vYiIsIk1hdGgiLCJhYnMiLCJzZXRGb2N1cyIsInVwZGF0ZSIsInZhbHVlVG9SYXRpbyIsInJhdGlvVG9WYWx1ZSIsInZhbEEiLCJ2YWxCIiwicmF0aW9Mb3dlciIsInJhdGlvVXBwZXIiLCJzaGFkb3dSb290Iiwia25vYkVsIiwicXVlcnlTZWxlY3RvciIsImZvY3VzIiwicmVuZGVyIiwibGFiZWxUZXh0IiwibW9kZSIsImJhclN0YXJ0IiwiYmFyRW5kIiwiZG9jIiwiaXNSVEwiLCJzdGFydCIsImVuZCIsInRpY2tTdHlsZSIsInRpY2siLCJiYXJTdHlsZSIsImFjdGl2ZSIsInB1c2giLCJKU09OIiwic3RyaW5naWZ5Iiwib25Gb2N1c2luIiwib25Gb2N1c291dCIsImlkIiwiY2xhc3MiLCJjb2xvciIsInJlZiIsInJhbmdlRWwiLCJtYXAiLCJzdHlsZSIsInJvbGUiLCJwYXJ0IiwicmVuZGVyS25vYiIsInByZXNzZWQiLCJ3YXRjaGVycyIsImtub2JTdHlsZSIsIm9uS2V5RG93biIsImtleSIsInByZXZlbnREZWZhdWx0Iiwic3RvcFByb3BhZ2F0aW9uIiwidGFiaW5kZXgiLCJyb3VuZCIsImlvcyIsIm1kIiwiaW9uX3JhbmdlIl0sInNvdXJjZVJvb3QiOiJ3ZWJwYWNrOi8vLyJ9