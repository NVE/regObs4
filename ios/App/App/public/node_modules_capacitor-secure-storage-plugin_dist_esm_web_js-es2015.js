"use strict";
(self["webpackChunkregobs4"] = self["webpackChunkregobs4"] || []).push([["node_modules_capacitor-secure-storage-plugin_dist_esm_web_js"],{

/***/ 87424:
/*!**********************************************************************!*\
  !*** ./node_modules/capacitor-secure-storage-plugin/dist/esm/web.js ***!
  \**********************************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "SecureStoragePluginWeb": function() { return /* binding */ SecureStoragePluginWeb; },
/* harmony export */   "SecureStoragePlugin": function() { return /* binding */ SecureStoragePlugin; }
/* harmony export */ });
/* harmony import */ var _capacitor_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @capacitor/core */ 41899);

class SecureStoragePluginWeb extends _capacitor_core__WEBPACK_IMPORTED_MODULE_0__.WebPlugin {
    constructor() {
        super({
            name: 'SecureStoragePlugin',
            platforms: ['web'],
        });
        this.PREFIX = 'cap_sec_';
        this.addPrefix = (key) => this.PREFIX + key;
    }
    get(options) {
        return localStorage.getItem(this.addPrefix(options.key)) !== null
            ? Promise.resolve({
                value: atob(localStorage.getItem(this.addPrefix(options.key))),
            })
            : Promise.reject('Item with given key does not exist');
    }
    set(options) {
        localStorage.setItem(this.addPrefix(options.key), btoa(options.value));
        return Promise.resolve({ value: true });
    }
    remove(options) {
        localStorage.removeItem(this.addPrefix(options.key));
        return Promise.resolve({ value: true });
    }
    clear() {
        for (const key in localStorage) {
            if (key.indexOf(this.PREFIX) === 0) {
                localStorage.removeItem(key);
            }
        }
        return Promise.resolve({ value: true });
    }
    keys() {
        const keys = Object.keys(localStorage).filter((k) => k.indexOf(this.PREFIX) === 0);
        return Promise.resolve({ value: keys });
    }
    getPlatform() {
        return Promise.resolve({ value: 'web' });
    }
}
const SecureStoragePlugin = new SecureStoragePluginWeb();



/***/ })

}]);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibm9kZV9tb2R1bGVzX2NhcGFjaXRvci1zZWN1cmUtc3RvcmFnZS1wbHVnaW5fZGlzdF9lc21fd2ViX2pzLWVzMjAxNS5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7Ozs7QUFBNEM7QUFDckMscUNBQXFDLHNEQUFTO0FBQ3JEO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsU0FBUztBQUNUO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsYUFBYTtBQUNiO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsaUNBQWlDLGFBQWE7QUFDOUM7QUFDQTtBQUNBO0FBQ0EsaUNBQWlDLGFBQWE7QUFDOUM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxpQ0FBaUMsYUFBYTtBQUM5QztBQUNBO0FBQ0E7QUFDQSxpQ0FBaUMsYUFBYTtBQUM5QztBQUNBO0FBQ0EsaUNBQWlDLGNBQWM7QUFDL0M7QUFDQTtBQUNBO0FBQytCIiwic291cmNlcyI6WyIuL25vZGVfbW9kdWxlcy9jYXBhY2l0b3Itc2VjdXJlLXN0b3JhZ2UtcGx1Z2luL2Rpc3QvZXNtL3dlYi5qcyJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBXZWJQbHVnaW4gfSBmcm9tICdAY2FwYWNpdG9yL2NvcmUnO1xuZXhwb3J0IGNsYXNzIFNlY3VyZVN0b3JhZ2VQbHVnaW5XZWIgZXh0ZW5kcyBXZWJQbHVnaW4ge1xuICAgIGNvbnN0cnVjdG9yKCkge1xuICAgICAgICBzdXBlcih7XG4gICAgICAgICAgICBuYW1lOiAnU2VjdXJlU3RvcmFnZVBsdWdpbicsXG4gICAgICAgICAgICBwbGF0Zm9ybXM6IFsnd2ViJ10sXG4gICAgICAgIH0pO1xuICAgICAgICB0aGlzLlBSRUZJWCA9ICdjYXBfc2VjXyc7XG4gICAgICAgIHRoaXMuYWRkUHJlZml4ID0gKGtleSkgPT4gdGhpcy5QUkVGSVggKyBrZXk7XG4gICAgfVxuICAgIGdldChvcHRpb25zKSB7XG4gICAgICAgIHJldHVybiBsb2NhbFN0b3JhZ2UuZ2V0SXRlbSh0aGlzLmFkZFByZWZpeChvcHRpb25zLmtleSkpICE9PSBudWxsXG4gICAgICAgICAgICA/IFByb21pc2UucmVzb2x2ZSh7XG4gICAgICAgICAgICAgICAgdmFsdWU6IGF0b2IobG9jYWxTdG9yYWdlLmdldEl0ZW0odGhpcy5hZGRQcmVmaXgob3B0aW9ucy5rZXkpKSksXG4gICAgICAgICAgICB9KVxuICAgICAgICAgICAgOiBQcm9taXNlLnJlamVjdCgnSXRlbSB3aXRoIGdpdmVuIGtleSBkb2VzIG5vdCBleGlzdCcpO1xuICAgIH1cbiAgICBzZXQob3B0aW9ucykge1xuICAgICAgICBsb2NhbFN0b3JhZ2Uuc2V0SXRlbSh0aGlzLmFkZFByZWZpeChvcHRpb25zLmtleSksIGJ0b2Eob3B0aW9ucy52YWx1ZSkpO1xuICAgICAgICByZXR1cm4gUHJvbWlzZS5yZXNvbHZlKHsgdmFsdWU6IHRydWUgfSk7XG4gICAgfVxuICAgIHJlbW92ZShvcHRpb25zKSB7XG4gICAgICAgIGxvY2FsU3RvcmFnZS5yZW1vdmVJdGVtKHRoaXMuYWRkUHJlZml4KG9wdGlvbnMua2V5KSk7XG4gICAgICAgIHJldHVybiBQcm9taXNlLnJlc29sdmUoeyB2YWx1ZTogdHJ1ZSB9KTtcbiAgICB9XG4gICAgY2xlYXIoKSB7XG4gICAgICAgIGZvciAoY29uc3Qga2V5IGluIGxvY2FsU3RvcmFnZSkge1xuICAgICAgICAgICAgaWYgKGtleS5pbmRleE9mKHRoaXMuUFJFRklYKSA9PT0gMCkge1xuICAgICAgICAgICAgICAgIGxvY2FsU3RvcmFnZS5yZW1vdmVJdGVtKGtleSk7XG4gICAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICAgICAgcmV0dXJuIFByb21pc2UucmVzb2x2ZSh7IHZhbHVlOiB0cnVlIH0pO1xuICAgIH1cbiAgICBrZXlzKCkge1xuICAgICAgICBjb25zdCBrZXlzID0gT2JqZWN0LmtleXMobG9jYWxTdG9yYWdlKS5maWx0ZXIoKGspID0+IGsuaW5kZXhPZih0aGlzLlBSRUZJWCkgPT09IDApO1xuICAgICAgICByZXR1cm4gUHJvbWlzZS5yZXNvbHZlKHsgdmFsdWU6IGtleXMgfSk7XG4gICAgfVxuICAgIGdldFBsYXRmb3JtKCkge1xuICAgICAgICByZXR1cm4gUHJvbWlzZS5yZXNvbHZlKHsgdmFsdWU6ICd3ZWInIH0pO1xuICAgIH1cbn1cbmNvbnN0IFNlY3VyZVN0b3JhZ2VQbHVnaW4gPSBuZXcgU2VjdXJlU3RvcmFnZVBsdWdpbldlYigpO1xuZXhwb3J0IHsgU2VjdXJlU3RvcmFnZVBsdWdpbiB9O1xuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IndlYnBhY2s6Ly8vIn0=