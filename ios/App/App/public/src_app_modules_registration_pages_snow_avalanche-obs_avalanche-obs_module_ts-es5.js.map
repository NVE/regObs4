{"version":3,"mappings":"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","names":["routes","path","component","_avalanche_obs_page__WEBPACK_IMPORTED_MODULE_0__","canDeactivate","_can_deactivate_route_guard__WEBPACK_IMPORTED_MODULE_2__","AvalancheObsPageModule","_shared_components_module__WEBPACK_IMPORTED_MODULE_1__","_add_web_url_modal_add_web_url_modal_module__WEBPACK_IMPORTED_MODULE_3__","_set_avalanche_position_set_avalanche_position_module__WEBPACK_IMPORTED_MODULE_4__","_angular_router__WEBPACK_IMPORTED_MODULE_6__","declarations","imports","_angular_core__WEBPACK_IMPORTED_MODULE_14__","ctx_r0","_r1","AvalancheObsPage","basePageService","activatedRoute","modalController","src_app_modules_common_registration_registration_models__WEBPACK_IMPORTED_MODULE_2__","text","id","registration","request","AvalancheObs","DtAvalancheTime","moment__WEBPACK_IMPORTED_MODULE_5___default","startOf","isSame","DtObsTime","Incident","maxDate","getMaxDateForNow","minutes","toISOString","showWarning","reset","CommonRegistrationService","hasAnyDataToShowInRegistrationTypes","registrationTid","pipe","toPromise","isEmpty","isIncidentEmpty","relativeToLatLng","ObsLocation","leaflet__WEBPACK_IMPORTED_MODULE_3__","Latitude","Longitude","startLatLng","StartLat","StartLong","endLatLng","StopLat","StopLong","create","_set_avalanche_position_set_avalanche_position_page__WEBPACK_IMPORTED_MODULE_4__","componentProps","geoHazard","modal","present","onDidDismiss","result","data","start","end","lat","lng","_base_page__WEBPACK_IMPORTED_MODULE_0__","selectors","features","decls","vars","consts","template"],"sources":["webpack:///src/app/modules/registration/pages/snow/avalanche-obs/avalanche-obs.module.ts","webpack:///src/app/modules/registration/pages/snow/avalanche-obs/avalanche-obs.page.html","webpack:///src/app/modules/registration/pages/snow/avalanche-obs/avalanche-obs.page.ts"],"sourcesContent":["import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\nimport { AvalancheObsPage } from './avalanche-obs.page';\r\nimport { SharedComponentsModule } from '../../../shared-components.module';\r\nimport { CanDeactivateRouteGuard } from '../../can-deactivate-route.guard';\r\nimport { AddWebUrlModalPageModule } from '../../add-web-url-modal/add-web-url-modal.module';\r\nimport { SetAvalanchePositionPageModule } from '../../set-avalanche-position/set-avalanche-position.module';\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: '',\r\n    component: AvalancheObsPage,\r\n    canDeactivate: [CanDeactivateRouteGuard]\r\n  }\r\n];\r\n\r\n@NgModule({\r\n  imports: [\r\n    SharedComponentsModule,\r\n    AddWebUrlModalPageModule,\r\n    SetAvalanchePositionPageModule,\r\n    RouterModule.forChild(routes)\r\n  ],\r\n  declarations: [AvalancheObsPage]\r\n})\r\nexport class AvalancheObsPageModule {}\r\n","<ion-header>\r\n  <ion-toolbar appHeaderColor mode=\"ios\">\r\n    <ion-buttons slot=\"start\">\r\n      <ion-back-button text=\"\" defaultHref=\"/\"></ion-back-button>\r\n    </ion-buttons>\r\n    <ion-title>\r\n      {{'REGISTRATION.SNOW.AVALANCHE_OBS.TITLE' | translate}}\r\n    </ion-title>\r\n  </ion-toolbar>\r\n</ion-header>\r\n\r\n<ion-content>\r\n  <app-registration-content-wrapper\r\n    *ngIf=\"registration && registration.request.AvalancheObs && registration.request.Incident\"\r\n    [registration]=\"registration\" [registrationTid]=\"registrationTid\" (reset)=\"reset()\">\r\n    <ion-list lines=\"full\">\r\n      <ion-list-header class=\"ion-text-uppercase\">\r\n        <ion-label>\r\n          {{ 'REGISTRATION.SNOW.AVALANCHE_OBS.TITLE' | translate}}\r\n        </ion-label>\r\n      </ion-list-header>\r\n      <ion-item [ngClass]=\"{'hasWarning': dateIsDifferentThanObsTime}\">\r\n        <ion-label [color]=\"(!registration.request.AvalancheObs.DtAvalancheTime && showWarning) ? 'danger' : 'medium'\"\r\n          position=\"stacked\" class=\"ion-text-uppercase\">{{\r\n          'REGISTRATION.SNOW.AVALANCHE_OBS.TIME' | translate }}</ion-label>\r\n        <ion-datetime color=\"medium\" monthShortNames=\"{{ 'MONTHS.SHORT_LIST' | translate }}\"\r\n          doneText=\"{{'DIALOGS.OK' | translate}}\" cancelText=\"{{'DIALOGS.CANCEL' | translate}}\"\r\n          display-format=\"D. MMM, YYYY HH:mm\" [(ngModel)]=\"registration.request.AvalancheObs.DtAvalancheTime\"\r\n          [max]=\"maxDate\">\r\n        </ion-datetime>\r\n        <ion-button class=\"set-to-now-button\" slot=\"end\" fill=\"outline\" color=\"medium\"\r\n          (click)=\"setAvalancheTimeTimeToNow()\">\r\n          <ion-icon slot=\"start\" name=\"time\"></ion-icon> {{\"REGISTRATION.SET_TIME.NOW\" | translate}}\r\n        </ion-button>\r\n      </ion-item>\r\n      <ion-item *ngIf=\"dateIsDifferentThanObsTime\">\r\n        <ion-label color=\"danger\" class=\"ion-text-wrap\">\r\n          {{'ALERT.WARNING' | translate}}! {{'REGISTRATION.SNOW.AVALANCHE_ACTIVITY.DATE_WARNING' | translate}}\r\n        </ion-label>\r\n      </ion-item>\r\n      <ion-item (click)=\"setAvalanchePosition()\">\r\n        <ion-label color=\"medium\" position=\"stacked\" class=\"ion-text-uppercase\">{{'REGISTRATION.SNOW.AVALANCHE_OBS.POSITION' |\r\n              translate}}</ion-label>\r\n        <ion-text color=\"medium\" class=\"ion-align-self-start ion-text-wrap\">\r\n          <ion-icon class=\"position-pin\" color=\"medium\" name=\"location\"></ion-icon>\r\n          <ng-container *ngIf=\"registration.request.AvalancheObs.StartLat else noPosition\">\r\n            {{\r\n                registration.request.AvalancheObs.StartLat |\r\n                number:'0.3'\r\n                }}&deg;{{'MAP_CENTER_INFO.NORTH_SHORT'|translate}},\r\n            {{ registration.request.AvalancheObs.StartLong | number:'0.3'\r\n                }}&deg;{{'MAP_CENTER_INFO.EAST_SHORT'|translate}} - {{ registration.request.AvalancheObs.StopLat |\r\n                number:'0.3'\r\n                }}&deg;{{'MAP_CENTER_INFO.NORTH_SHORT'|translate}},\r\n            {{ registration.request.AvalancheObs.StopLong | number:'0.3'\r\n                }}&deg;{{'MAP_CENTER_INFO.EAST_SHORT'|translate}}\r\n          </ng-container>\r\n        </ion-text>\r\n        <ion-icon slot=\"end\" class=\"item-detail-icon\" name=\"chevron-forward\">\r\n        </ion-icon>\r\n      </ion-item>\r\n      <ion-item>\r\n        <ion-label color=\"medium\" position=\"stacked\" class=\"ion-text-uppercase\">{{\r\n          'REGISTRATION.SNOW.AVALANCHE_OBS.VALID_EXPOSITION'\r\n          | translate}}</ion-label>\r\n        <app-select title=\"REGISTRATION.SNOW.AVALANCHE_OBS.VALID_EXPOSITION\"\r\n          [(selectedValue)]=\"registration.request.AvalancheObs.ValidExposition\" [options]=\"expoArray\"></app-select>\r\n      </ion-item>\r\n      <app-kdv-select title=\"REGISTRATION.SNOW.AVALANCHE_OBS.DESTRUCTIVE_SIZE\" kdvKey=\"Snow_DestructiveSizeKDV\"\r\n        [(value)]=\"registration.request.AvalancheObs.DestructiveSizeTID\"></app-kdv-select>\r\n      <app-kdv-select title=\"REGISTRATION.SNOW.AVALANCHE_OBS.AVALANCHE_TYPE\" kdvKey=\"Snow_AvalancheKDV\"\r\n        [(value)]=\"registration.request.AvalancheObs.AvalancheTID\"></app-kdv-select>\r\n      <app-kdv-select title=\"REGISTRATION.SNOW.AVALANCHE_OBS.AVALANCHE_TRIGGER\" kdvKey=\"Snow_AvalancheTriggerKDV\"\r\n        [(value)]=\"registration.request.AvalancheObs.AvalancheTriggerTID\"></app-kdv-select>\r\n      <app-kdv-select title=\"REGISTRATION.SNOW.AVALANCHE_OBS.TERRAIN_START_ZONE\" kdvKey=\"Snow_TerrainStartZoneKDV\"\r\n        [(value)]=\"registration.request.AvalancheObs.TerrainStartZoneTID\"></app-kdv-select>\r\n      <app-kdv-select title=\"REGISTRATION.SNOW.AVALANCHE_OBS.AVAL_CAUSE\" kdvKey=\"Snow_AvalCauseKDV\"\r\n        [(value)]=\"registration.request.AvalancheObs.AvalCauseTID\"></app-kdv-select>\r\n      <app-numeric-input [(value)]=\"registration.request.AvalancheObs.FractureHeight\"\r\n        title=\"REGISTRATION.SNOW.AVALANCHE_OBS.FRACTURE_HEIGTH\" [min]=\"0\" [max]=\"9999\" suffix=\"cm\" [decimalPlaces]=\"0\">\r\n      </app-numeric-input>\r\n      <app-numeric-input [(value)]=\"registration.request.AvalancheObs.FractureWidth\"\r\n        title=\"REGISTRATION.SNOW.AVALANCHE_OBS.FRACTURE_WIDTH\" [min]=\"0\" [max]=\"99999\" suffix=\"m\" [decimalPlaces]=\"0\">\r\n      </app-numeric-input>\r\n      <app-text-comment title=\"REGISTRATION.SNOW.AVALANCHE_OBS.TRAJECTORY_NAME\" [max]=\"100\" [rows]=\"2\"\r\n        [(value)]=\"registration.request.AvalancheObs.Trajectory\"></app-text-comment>\r\n      <app-text-comment title=\"REGISTRATION.DANGER_OBS.COMMENT\" [(value)]=\"registration.request.AvalancheObs.Comment\">\r\n      </app-text-comment>\r\n      <ion-list-header class=\"ion-text-uppercase\">\r\n        <ion-label>\r\n          {{ 'REGISTRATION.ADD_IMAGES' | translate}}\r\n        </ion-label>\r\n      </ion-list-header>\r\n      <app-add-picture-item [geoHazard]=\"registration.geoHazard\" [registrationId]=\"registration.id\"\r\n        [registrationTid]=\"registrationTid\" [onBeforeAdd]=\"getSaveFunc()\">\r\n      </app-add-picture-item>\r\n      <ion-list-header class=\"ion-text-uppercase\">\r\n        <ion-label>\r\n          {{ 'REGISTRATION.SNOW.AVALANCHE_OBS.INCIDENT_DESCRIPTION' | translate}}\r\n        </ion-label>\r\n      </ion-list-header>\r\n      <app-text-comment title=\"REGISTRATION.INCIDENT.COMMENT\" [(value)]=\"registration.request.Incident.IncidentText\">\r\n      </app-text-comment>\r\n      <app-kdv-select title=\"REGISTRATION.INCIDENT.ACTIVITY\" kdvKey=\"Snow_ActivityInfluencedKDV\"\r\n        [(value)]=\"registration.request.Incident.ActivityInfluencedTID\"></app-kdv-select>\r\n      <app-kdv-select title=\"REGISTRATION.INCIDENT.DAMAGE_EXTENT\" kdvKey=\"DamageExtentKDV\"\r\n        [(value)]=\"registration.request.Incident.DamageExtentTID\"></app-kdv-select>\r\n      <ion-item-divider>\r\n        <ion-label class=\"ion-text-wrap\">\r\n          {{'REGISTRATION.SNOW.AVALANCHE_OBS.INCIDENT_PLACEHOLDER' | translate }}\r\n        </ion-label>\r\n      </ion-item-divider>\r\n      <ion-list-header class=\"ion-text-uppercase\">\r\n        <ion-label>\r\n          {{ 'REGISTRATION.ADD_WEB_URL.TITLE' | translate}}\r\n        </ion-label>\r\n      </ion-list-header>\r\n      <app-add-web-url-item [(weburls)]=\"registration.request.Incident.IncidentURLs\"></app-add-web-url-item>\r\n    </ion-list>\r\n  </app-registration-content-wrapper>\r\n</ion-content>\r\n<ng-template #noPosition>\r\n  {{ 'REGISTRATION.SNOW.AVALANCHE_OBS.SET_AVALANCHE_POSITION' | translate }} {{\r\n        'REGISTRATION.DIRT.LAND_SLIDE_OBS.IN_MAP' | translate }}\r\n</ng-template>","import { Component } from '@angular/core';\r\nimport { BasePage } from '../../base.page';\r\nimport { BasePageService } from '../../base-page-service';\r\nimport { ActivatedRoute } from '@angular/router';\r\nimport { ModalController } from '@ionic/angular';\r\nimport { RegistrationTid } from 'src/app/modules/common-registration/registration.models';\r\nimport * as L from 'leaflet';\r\nimport { SetAvalanchePositionPage } from '../../set-avalanche-position/set-avalanche-position.page';\r\nimport moment from 'moment';\r\nimport { SelectOption } from '../../../../shared/components/input/select/select-option.model';\r\nimport { take } from 'rxjs/operators';\r\n\r\n@Component({\r\n  selector: 'app-avalanche-obs',\r\n  templateUrl: './avalanche-obs.page.html',\r\n  styleUrls: ['./avalanche-obs.page.scss']\r\n})\r\nexport class AvalancheObsPage extends BasePage {\r\n  expoArray: SelectOption[] = [\r\n    {\r\n      text: 'DIRECTION.N',\r\n      id: '10000000'\r\n    },\r\n    {\r\n      text: 'DIRECTION.NE',\r\n      id: '01000000'\r\n    },\r\n    {\r\n      text: 'DIRECTION.E',\r\n      id: '00100000'\r\n    },\r\n    {\r\n      text: 'DIRECTION.SE',\r\n      id: '00010000'\r\n    },\r\n    {\r\n      text: 'DIRECTION.S',\r\n      id: '00001000'\r\n    },\r\n    {\r\n      text: 'DIRECTION.SW',\r\n      id: '00000100'\r\n    },\r\n    {\r\n      text: 'DIRECTION.W',\r\n      id: '00000010'\r\n    },\r\n    {\r\n      text: 'DIRECTION.NW',\r\n      id: '00000001'\r\n    }\r\n  ];\r\n\r\n  showWarning = false;\r\n  maxDate: string;\r\n\r\n  get dateIsDifferentThanObsTime() {\r\n    return (\r\n      this.registration.request.AvalancheObs.DtAvalancheTime &&\r\n      !moment(this.registration.request.AvalancheObs.DtAvalancheTime)\r\n        .startOf('day')\r\n        .isSame(moment(this.registration.request.DtObsTime).startOf('day'))\r\n    );\r\n  }\r\n\r\n  constructor(\r\n    basePageService: BasePageService,\r\n    activatedRoute: ActivatedRoute,\r\n    private modalController: ModalController\r\n  ) {\r\n    super(RegistrationTid.AvalancheObs, basePageService, activatedRoute);\r\n  }\r\n\r\n  onInit() {\r\n    if (!this.registration.request.Incident) {\r\n      this.registration.request.Incident = {};\r\n    }\r\n    this.maxDate = this.getMaxDateForNow();\r\n  }\r\n\r\n  getMaxDateForNow() {\r\n    // There is an issue when setting max date that when changing hour, the minutes is still max minutes.\r\n    // Workaround is to set minutes to 59.\r\n    return moment().minutes(59).toISOString(true);\r\n  }\r\n\r\n  async onReset() {\r\n    this.showWarning = false;\r\n    // Also reset Incident when Avalanche obs is reset.\r\n    await this.basePageService.reset(\r\n      this.registration,\r\n      RegistrationTid.Incident\r\n    );\r\n  }\r\n\r\n  isValid() {\r\n    this.showWarning = true;\r\n    return !!this.registration.request.AvalancheObs.DtAvalancheTime;\r\n  }\r\n\r\n  async isEmpty(): Promise<boolean> {\r\n    const isEmpty = !await this.basePageService.CommonRegistrationService.hasAnyDataToShowInRegistrationTypes(\r\n      this.registration,\r\n      this.registrationTid\r\n    ).pipe(take(1)).toPromise();\r\n    const isIncidentEmpty = !await this.basePageService.CommonRegistrationService.hasAnyDataToShowInRegistrationTypes(\r\n        this.registration,\r\n        RegistrationTid.Incident\r\n      ).pipe(take(1)).toPromise();\r\n    return isEmpty && isIncidentEmpty;\r\n  }\r\n\r\n  setAvalancheTimeTimeToNow() {\r\n    this.registration.request.AvalancheObs.DtAvalancheTime = moment().toISOString(\r\n      true\r\n    );\r\n  }\r\n\r\n  async setAvalanchePosition() {\r\n    const relativeToLatLng = this.registration.request.ObsLocation\r\n      ? L.latLng(\r\n          this.registration.request.ObsLocation.Latitude,\r\n          this.registration.request.ObsLocation.Longitude\r\n        )\r\n      : null;\r\n    const startLatLng =\r\n      this.registration.request.AvalancheObs.StartLat &&\r\n      this.registration.request.AvalancheObs.StartLong\r\n        ? L.latLng(\r\n            this.registration.request.AvalancheObs.StartLat,\r\n            this.registration.request.AvalancheObs.StartLong\r\n          )\r\n        : null;\r\n    const endLatLng =\r\n      this.registration.request.AvalancheObs.StopLat &&\r\n      this.registration.request.AvalancheObs.StopLong\r\n        ? L.latLng(\r\n            this.registration.request.AvalancheObs.StopLat,\r\n            this.registration.request.AvalancheObs.StopLong\r\n          )\r\n        : null;\r\n    const modal = await this.modalController.create({\r\n      component: SetAvalanchePositionPage,\r\n      componentProps: {\r\n        relativeToLatLng,\r\n        startLatLng,\r\n        endLatLng,\r\n        geoHazard: this.registration.geoHazard\r\n      }\r\n    });\r\n    modal.present();\r\n    const result = await modal.onDidDismiss();\r\n    if (result.data) {\r\n      const start: L.LatLng = result.data.start;\r\n      const end: L.LatLng = result.data.end;\r\n      this.registration.request.AvalancheObs.StartLat = start.lat;\r\n      this.registration.request.AvalancheObs.StartLong = start.lng;\r\n      this.registration.request.AvalancheObs.StopLat = end.lat;\r\n      this.registration.request.AvalancheObs.StopLong = end.lng;\r\n    }\r\n  }\r\n}\r\n"]}