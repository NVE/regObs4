{"version":3,"mappings":"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","names":["DEBUG_TAG","BasePageService","registrationService","newAttachmentService","commonRegistrationService","ngZone","alertController","translateService","loggingService","registration","registrationTid","onReset","get","toPromise","leaveText","createResetDialog","message","translations","create","buttons","text","role","alert","present","onDidDismiss","result","reset","Zone","run","request","getDefaultValue","resetImages","saveRegistrationAsync","propName","getAttachments","id","pipe","attachments","map","a","removeAttachment","subscribe","debug","error","_angular_core__WEBPACK_IMPORTED_MODULE_7__","factory","providedIn","BasePage","basePageService","activatedRoute","snapshot","params","CommonRegistrationService","getRegistrationByIdShared$","reg","createDefaultProps","createInitObservable","ngDestroy$","Promise","resolve","isValid","valid","isEmpty","confirmLeave","onInit","onBeforeLeave","save","clean","syncStatus","src_app_modules_common_registration_registration_models__WEBPACK_IMPORTED_MODULE_1__","RegistrationService","hasAnyDataToShowInRegistrationTypes","confirmReset","pathFromRoot","v","url","segment","toString","join","filter","path","_core_helpers_observable_helper__WEBPACK_IMPORTED_MODULE_2__","_angular_core__WEBPACK_IMPORTED_MODULE_11__","features","AvalancheActivityModalPageModule","_shared_components_module__WEBPACK_IMPORTED_MODULE_1__","declarations","_avalanche_activity_modal_page__WEBPACK_IMPORTED_MODULE_0__","imports","_angular_core__WEBPACK_IMPORTED_MODULE_8__","ctx_r3","ctx_r0","AvalancheActivityModalPage","modalController","start","h","m","end","avalancheActivityCopy","EstimatedNumTID","val","undefined","startDate","moment__WEBPACK_IMPORTED_MODULE_1___default","startOf","isSame","dtObsTime","maxDate","getMaxDateForNow","avalancheActivity","Object","isNew","DtStart","DtEnd","toISOString","timeFrame","timeFrames","find","tf","hours","minutes","selectedTimeFrame","dismiss","AvalancheExtTID","AvalTriggerSimpleTID","DestructiveSizeTID","AvalPropagationTID","ExposedHeightComboTID","ExposedHeight1","ExposedHeight2","ValidExposition","resetWhenNoActivityFields","_core_helpers_is_empty_helper__WEBPACK_IMPORTED_MODULE_0__","selectors","inputs","decls","vars","consts","template","ctx","routes","component","_avalanche_activity_page__WEBPACK_IMPORTED_MODULE_0__","AvalancheActivityPageModule","_avalanche_activity_modal_avalanche_activity_modal_module__WEBPACK_IMPORTED_MODULE_2__","_angular_router__WEBPACK_IMPORTED_MODULE_4__","AvalancheActivityPage","kdvService","src_app_modules_common_registration_registration_models__WEBPACK_IMPORTED_MODULE_0__","avalancheCause","estimatedNumber","kdvSubscription","getKdvRepositoryByKeyObservable","causeKdv","estimatedNumberKdv","unsubscribe","index","_avalanche_activity_modal_avalanche_activity_modal_page__WEBPACK_IMPORTED_MODULE_3__","componentProps","AvalancheActivityObs2","DtObsTime","modal","data","splice","avalancheActivityObs","push","cause","c","Id","Name","kdvalue","_base_page__WEBPACK_IMPORTED_MODULE_1__"],"sources":["webpack:///src/app/modules/registration/pages/base-page-service.ts","webpack:///src/app/modules/registration/pages/base.page.ts","webpack:///src/app/modules/registration/pages/snow/avalanche-activity/avalanche-activity-modal/avalanche-activity-modal.module.ts","webpack:///src/app/modules/registration/pages/snow/avalanche-activity/avalanche-activity-modal/avalanche-activity-modal.page.html","webpack:///src/app/modules/registration/pages/snow/avalanche-activity/avalanche-activity-modal/avalanche-activity-modal.page.ts","webpack:///src/app/modules/registration/pages/snow/avalanche-activity/avalanche-activity.module.ts","webpack:///src/app/modules/registration/pages/snow/avalanche-activity/avalanche-activity.page.html","webpack:///src/app/modules/registration/pages/snow/avalanche-activity/avalanche-activity.page.ts"],"sourcesContent":["import { Injectable, NgZone } from '@angular/core';\r\nimport { IRegistration, RegistrationTid } from 'src/app/modules/common-registration/registration.models';\r\nimport { getPropertyName, isArrayType } from 'src/app/modules/common-registration/registration.helpers';\r\nimport { NewAttachmentService, RegistrationService as CommonRegistrationService } from 'src/app/modules/common-registration/registration.services';\r\nimport { RegistrationService } from '../services/registration.service';\r\nimport { AlertController } from '@ionic/angular';\r\nimport { TranslateService } from '@ngx-translate/core';\r\nimport { switchMap } from 'rxjs/operators';\r\nimport { forkJoin } from 'rxjs';\r\nimport { LoggingService } from '../../shared/services/logging/logging.service';\r\n\r\nconst DEBUG_TAG = 'BasePageService';\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class BasePageService {\r\n  get Zone() {\r\n    return this.ngZone;\r\n  }\r\n\r\n  get RegistrationService() {\r\n    return this.registrationService;\r\n  }\r\n\r\n  get AlertController() {\r\n    return this.alertController;\r\n  }\r\n\r\n  get TranslateService() {\r\n    return this.translateService;\r\n  }\r\n\r\n  get CommonRegistrationService() {\r\n    return this.commonRegistrationService;\r\n  }\r\n\r\n  constructor(\r\n    private registrationService: RegistrationService,\r\n    private newAttachmentService: NewAttachmentService,\r\n    private commonRegistrationService: CommonRegistrationService,\r\n    private ngZone: NgZone,\r\n    private alertController: AlertController,\r\n    private translateService: TranslateService,\r\n    private loggingService: LoggingService\r\n  ) {}\r\n\r\n  async confirmLeave(registration: IRegistration, registrationTid: RegistrationTid, onReset?: () => void) {\r\n    const leaveText = await this.translateService.get('REGISTRATION.REQUIRED_FIELDS_MISSING').toPromise();\r\n    return this.createResetDialog(leaveText, registration, registrationTid, onReset);\r\n  }\r\n\r\n  async confirmReset(registration: IRegistration, registrationTid: RegistrationTid, onReset?: () => void) {\r\n    const leaveText = await this.translateService.get('REGISTRATION.CONFIRM_RESET').toPromise();\r\n    return this.createResetDialog(leaveText, registration, registrationTid, onReset);\r\n  }\r\n\r\n  private async createResetDialog(message: string, registration: IRegistration, registrationTid: RegistrationTid, onReset?: () => void) {\r\n    const translations = await this.translateService.get(['DIALOGS.CANCEL', 'DIALOGS.YES']).toPromise();\r\n    const alert = await this.alertController.create({\r\n      message,\r\n      buttons: [\r\n        {\r\n          text: translations['DIALOGS.CANCEL'],\r\n          role: 'cancel'\r\n        },\r\n        {\r\n          text: translations['DIALOGS.YES']\r\n        }\r\n      ]\r\n    });\r\n    await alert.present();\r\n    const result = await alert.onDidDismiss();\r\n    const reset: boolean = result.role !== 'cancel';\r\n    if (reset) {\r\n      await this.reset(registration, registrationTid, onReset);\r\n    }\r\n    return reset;\r\n  }\r\n\r\n  async reset(registration: IRegistration, registrationTid: RegistrationTid, onReset?: () => void) {\r\n    this.Zone.run(() => {\r\n      if (registrationTid) {\r\n        registration.request[getPropertyName(registrationTid)] = this.getDefaultValue(registrationTid);\r\n        this.resetImages(registration);\r\n      }\r\n      if (onReset) {\r\n        onReset();\r\n      }\r\n    });\r\n    await this.registrationService.saveRegistrationAsync(registration);\r\n  }\r\n\r\n  createDefaultProps(registration: IRegistration, registrationTid: RegistrationTid) {\r\n    const propName = getPropertyName(registrationTid);\r\n    if (!registration.request[propName]) {\r\n      // Init to new object if null\r\n      registration.request[propName] = this.getDefaultValue(registrationTid);\r\n    }\r\n  }\r\n\r\n  getDefaultValue(registrationTid: RegistrationTid) {\r\n    if (isArrayType(registrationTid)) {\r\n      return [];\r\n    } else {\r\n      return {};\r\n    }\r\n  }\r\n\r\n  resetImages(registration: IRegistration) {\r\n    this.newAttachmentService\r\n      .getAttachments(registration.id)\r\n      .pipe(switchMap((attachments) => forkJoin(attachments.map((a) => this.newAttachmentService.removeAttachment(registration.id, a.id)))))\r\n      .subscribe(\r\n        () => {\r\n          this.loggingService.debug('Reset images complete', DEBUG_TAG);\r\n        },\r\n        (error) => {\r\n          this.loggingService.error(error, DEBUG_TAG, 'Could not reset images');\r\n        }\r\n      );\r\n  }\r\n}\r\n","import { Directive, OnInit } from '@angular/core';\r\nimport { from, of } from 'rxjs';\r\nimport { BasePageService } from './base-page-service';\r\nimport { IRegistration, RegistrationTid, SyncStatus } from 'src/app/modules/common-registration/registration.models';\r\nimport { ActivatedRoute } from '@angular/router';\r\nimport { take, takeUntil, map, switchMap, tap } from 'rxjs/operators';\r\nimport { NgDestoryBase } from '../../../core/helpers/observable-helper';\r\n\r\n@Directive()\r\nexport abstract class BasePage extends NgDestoryBase implements OnInit {\r\n  registration: IRegistration;\r\n  basePageService: BasePageService;\r\n  registrationTid: RegistrationTid;\r\n  activatedRoute: ActivatedRoute;\r\n\r\n  constructor(registrationTid: RegistrationTid, basePageService: BasePageService, activatedRoute: ActivatedRoute) {\r\n    super();\r\n    this.basePageService = basePageService;\r\n    this.activatedRoute = activatedRoute;\r\n    this.registrationTid = registrationTid;\r\n  }\r\n\r\n  ngOnInit() {}\r\n\r\n  ionViewDidEnter() {\r\n    const id = this.activatedRoute.snapshot.params['id'];\r\n    this.basePageService.CommonRegistrationService.getRegistrationByIdShared$(id)\r\n      .pipe(\r\n        take(1),\r\n        map((reg) => {\r\n          this.basePageService.createDefaultProps(reg, this.registrationTid);\r\n          return reg;\r\n        }),\r\n        tap((reg) => {\r\n          this.registration = reg;\r\n        }),\r\n        switchMap(() => this.createInitObservable()),\r\n        takeUntil(this.ngDestroy$)\r\n      )\r\n      .subscribe();\r\n  }\r\n\r\n  onInit?(): void | Promise<any>;\r\n\r\n  onBeforeLeave?(): void | Promise<any>;\r\n\r\n  onReset?(): void;\r\n\r\n  isValid?(): boolean | Promise<boolean>;\r\n\r\n  // NOTE: Remember to add canDeactivate: [CanDeactivateRouteGuard] in page module\r\n  async canLeave() {\r\n    // Check if implementation page has implemented custom isValid logic\r\n    const valid = await Promise.resolve(this.isValid ? this.isValid() : true);\r\n    // Only return alert if page is not empty and invalid\r\n    const isEmpty = await Promise.resolve(this.isEmpty());\r\n    if (!isEmpty && !valid) {\r\n      return this.basePageService.confirmLeave(this.registration, this.registrationTid, () => (this.onReset ? this.onReset() : null));\r\n    }\r\n    return true;\r\n  }\r\n\r\n  private createInitObservable() {\r\n    if (this.onInit) {\r\n      return from(Promise.resolve(this.onInit()));\r\n    }\r\n    return of({});\r\n  }\r\n\r\n  async ionViewWillLeave() {\r\n    if (this.onBeforeLeave) {\r\n      await Promise.resolve(this.onBeforeLeave());\r\n    }\r\n    await this.save(true);\r\n  }\r\n\r\n  save(clean = false) {\r\n    this.registration.syncStatus = SyncStatus.Draft;\r\n    return this.basePageService.RegistrationService.saveRegistrationAsync(this.registration, clean);\r\n  }\r\n\r\n  getSaveFunc() {\r\n    return () => this.save();\r\n  }\r\n\r\n  async isEmpty(): Promise<boolean> {\r\n    return !(await this.basePageService.CommonRegistrationService.hasAnyDataToShowInRegistrationTypes(\r\n      this.registration,\r\n      this.registrationTid\r\n    )\r\n      .pipe(take(1))\r\n      .toPromise());\r\n  }\r\n\r\n  reset() {\r\n    return this.basePageService.confirmReset(this.registration, this.registrationTid, () => (this.onReset ? this.onReset() : null));\r\n  }\r\n\r\n  getResolvedUrl(): string {\r\n    return (\r\n      '/' +\r\n      this.activatedRoute.snapshot.pathFromRoot\r\n        .map((v) => v.url.map((segment) => segment.toString()).join('/'))\r\n        .filter((path) => !!path)\r\n        .join('/')\r\n    );\r\n  }\r\n\r\n  // getConfiguredUrl(): string {\r\n  //     return '/' + this.activatedRoute.snapshot.pathFromRoot\r\n  //         .filter(v => v.routeConfig)\r\n  //         .map(v => v.routeConfig.path)\r\n  //         .join('/');\r\n  // }\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { AvalancheActivityModalPage } from './avalanche-activity-modal.page';\r\nimport { SharedComponentsModule } from '../../../../shared-components.module';\r\n\r\n@NgModule({\r\n  imports: [SharedComponentsModule],\r\n  declarations: [AvalancheActivityModalPage],\r\n  entryComponents: [AvalancheActivityModalPage]\r\n})\r\nexport class AvalancheActivityModalPageModule {}\r\n","<ion-header>\r\n  <ion-toolbar appHeaderColor mode=\"ios\">\r\n    <ion-buttons slot=\"start\">\r\n      <ion-button (click)=\"cancel()\">{{ 'DIALOGS.CANCEL' | translate }}</ion-button>\r\n    </ion-buttons>\r\n    <ion-title>{{'REGISTRATION.SNOW.AVALANCHE_ACTIVITY.TITLE' | translate}}</ion-title>\r\n  </ion-toolbar>\r\n</ion-header>\r\n\r\n<ion-content *ngIf=\"avalancheActivityCopy\">\r\n  <ion-list lines=\"full\">\r\n    <ion-item>\r\n      <ion-label>{{'REGISTRATION.SNOW.AVALANCHE_ACTIVITY.NO_AVALANCHE_ACTIVITY' | translate}}</ion-label>\r\n      <ion-checkbox mode=\"md\" slot=\"start\" [(ngModel)]=\"noAvalancheActivity\"></ion-checkbox>\r\n    </ion-item>\r\n    <ion-item [ngClass]=\"{'hasWarning': dateIsDifferentThanObsTime}\">\r\n      <ion-label color=\"medium\" position=\"stacked\" class=\"ion-text-uppercase\">{{\r\n        'DATE' | translate }}</ion-label>\r\n      <ion-datetime color=\"medium\" monthShortNames=\"{{ 'MONTHS.SHORT_LIST' | translate }}\"\r\n        doneText=\"{{'DIALOGS.OK' | translate}}\" cancelText=\"{{'DIALOGS.CANCEL' | translate}}\"\r\n        display-format=\"D. MMM, YYYY\" [max]=\"maxDate\" [(ngModel)]=\"startDate\">\r\n      </ion-datetime>\r\n    </ion-item>\r\n    <ion-item *ngIf=\"dateIsDifferentThanObsTime\">\r\n      <ion-label color=\"danger\" class=\"ion-text-wrap\">\r\n        {{'ALERT.WARNING' | translate}}! {{'REGISTRATION.SNOW.AVALANCHE_ACTIVITY.DATE_WARNING' | translate}}\r\n      </ion-label>\r\n    </ion-item>\r\n    <ion-item>\r\n      <ion-label color=\"medium\" position=\"stacked\" class=\"ion-text-uppercase\">{{'REGISTRATION.SNOW.AVALANCHE_ACTIVITY.ESTIMATED_TIME'\r\n        | translate}}</ion-label>\r\n      <ion-select cancelText=\"{{'DIALOGS.CANCEL' | translate}}\" [(ngModel)]=\"selectedTimeFrame\"\r\n        interface=\"action-sheet\">\r\n        <ion-select-option [value]=\"timeFrame.id\" *ngFor=\"let timeFrame of timeFrames\">\r\n          {{ timeFrame.text | translate }}</ion-select-option>\r\n      </ion-select>\r\n    </ion-item>\r\n    <ng-container *ngIf=\"!noAvalancheActivity\">\r\n      <app-kdv-select title=\"REGISTRATION.SNOW.AVALANCHE_ACTIVITY.HOW_MANY_AVALANCHES\" kdvKey=\"Snow_EstimatedNumKDV\"\r\n        [(value)]=\"avalancheActivityCopy.EstimatedNumTID\"></app-kdv-select>\r\n      <app-kdv-select title=\"REGISTRATION.SNOW.AVALANCHE_PROBLEM.AVALANCHE_TYPE\" kdvKey=\"Snow_AvalancheExtKDV\"\r\n        [(value)]=\"avalancheActivityCopy.AvalancheExtTID\"></app-kdv-select>\r\n      <app-kdv-select title=\"REGISTRATION.SNOW.AVALANCHE_OBS.AVALANCHE_TRIGGER\" kdvKey=\"Snow_AvalTriggerSimpleKDV\"\r\n        [(value)]=\"avalancheActivityCopy.AvalTriggerSimpleTID\"></app-kdv-select>\r\n      <app-kdv-select title=\"REGISTRATION.SNOW.AVALANCHE_OBS.DESTRUCTIVE_SIZE\" kdvKey=\"Snow_DestructiveSizeKDV\"\r\n        [(value)]=\"avalancheActivityCopy.DestructiveSizeTID\"></app-kdv-select>\r\n      <app-kdv-select title=\"REGISTRATION.SNOW.AVALANCHE_PROBLEM.PROPAGATION\" kdvKey=\"Snow_AvalPropagationKDV\"\r\n        [(value)]=\"avalancheActivityCopy.AvalPropagationTID\"></app-kdv-select>\r\n      <app-exposed-height [(exposedHeightComboTID)]=\"avalancheActivityCopy.ExposedHeightComboTID\"\r\n        [(exposedHight1)]=\"avalancheActivityCopy.ExposedHeight1\"\r\n        [(exposedHight2)]=\"avalancheActivityCopy.ExposedHeight2\"></app-exposed-height>\r\n      <app-valid-exposition [(validExposition)]=\"avalancheActivityCopy.ValidExposition\"></app-valid-exposition>\r\n    </ng-container>\r\n    <app-text-comment title=\"REGISTRATION.DANGER_OBS.COMMENT\" [(value)]=\"avalancheActivityCopy.Comment\">\r\n    </app-text-comment>\r\n  </ion-list>\r\n  <app-modal-save-or-delete-buttons (saveClicked)=\"ok()\" (deleteClicked)=\"delete()\" [showDelete]=\"!isNew\">\r\n  </app-modal-save-or-delete-buttons>\r\n</ion-content>","import { Component, OnInit, Input } from '@angular/core';\r\nimport { AvalancheActivityObs2EditModel } from '@varsom-regobs-common/regobs-api';\r\nimport { ModalController } from '@ionic/angular';\r\nimport { IsEmptyHelper } from '../../../../../../core/helpers/is-empty.helper';\r\nimport moment from 'moment';\r\n\r\n@Component({\r\n  selector: 'app-avalanche-activity-modal',\r\n  templateUrl: './avalanche-activity-modal.page.html',\r\n  styleUrls: ['./avalanche-activity-modal.page.scss']\r\n})\r\nexport class AvalancheActivityModalPage implements OnInit {\r\n  @Input() avalancheActivity: AvalancheActivityObs2EditModel;\r\n  @Input() dtObsTime: string;\r\n\r\n  avalancheActivityCopy: AvalancheActivityObs2EditModel;\r\n  isNew = false;\r\n  maxDate: string;\r\n\r\n  get noAvalancheActivity() {\r\n    return this.avalancheActivityCopy.EstimatedNumTID === 1;\r\n  }\r\n\r\n  set noAvalancheActivity(val: boolean) {\r\n    if (val) {\r\n      this.avalancheActivityCopy.EstimatedNumTID = 1;\r\n    } else {\r\n      this.avalancheActivityCopy.EstimatedNumTID = undefined;\r\n    }\r\n  }\r\n\r\n  get dateIsDifferentThanObsTime() {\r\n    return (\r\n      this.startDate &&\r\n      !moment(this.startDate)\r\n        .startOf('day')\r\n        .isSame(moment(this.dtObsTime).startOf('day'))\r\n    );\r\n  }\r\n\r\n  timeFrames = [\r\n    {\r\n      id: 1,\r\n      start: { h: 0, m: 0 },\r\n      end: { h: 23, m: 59 },\r\n      text: 'REGISTRATION.SNOW.AVALANCHE_ACTIVITY.DURING_THE_DAY'\r\n    },\r\n    {\r\n      id: 2,\r\n      start: { h: 0, m: 0 },\r\n      end: { h: 6, m: 0 },\r\n      text: '0-6'\r\n    },\r\n    {\r\n      id: 3,\r\n      start: { h: 6, m: 0 },\r\n      end: { h: 12, m: 0 },\r\n      text: '6-12'\r\n    },\r\n    {\r\n      id: 4,\r\n      start: { h: 12, m: 0 },\r\n      end: { h: 18, m: 0 },\r\n      text: '12-18'\r\n    },\r\n    {\r\n      id: 5,\r\n      start: { h: 18, m: 0 },\r\n      end: { h: 23, m: 59 },\r\n      text: '18-24'\r\n    }\r\n  ];\r\n\r\n  selectedTimeFrame = 1;\r\n  startDate: string;\r\n\r\n  constructor(private modalController: ModalController) {}\r\n\r\n  async ngOnInit() {\r\n    this.maxDate = this.getMaxDateForNow();\r\n    if (this.avalancheActivity) {\r\n      this.avalancheActivityCopy = { ...this.avalancheActivity };\r\n    } else {\r\n      this.avalancheActivityCopy = {};\r\n      this.isNew = true;\r\n    }\r\n    if (\r\n      this.avalancheActivityCopy.DtStart &&\r\n      this.avalancheActivityCopy.DtEnd\r\n    ) {\r\n      const start = moment(this.avalancheActivityCopy.DtStart);\r\n      const end = moment(this.avalancheActivityCopy.DtEnd);\r\n      this.startDate = moment(this.avalancheActivityCopy.DtStart)\r\n        .startOf('day')\r\n        .toISOString(true);\r\n      const timeFrame = this.timeFrames.find(\r\n        (tf) =>\r\n          tf.start.h === start.hours() &&\r\n          tf.end.h === end.hours() &&\r\n          tf.start.m === start.minutes() &&\r\n          tf.end.m === end.minutes()\r\n      );\r\n      if (timeFrame) {\r\n        this.selectedTimeFrame = timeFrame.id;\r\n      }\r\n    } else {\r\n      this.startDate = moment(this.dtObsTime).startOf('day').toISOString(true);\r\n    }\r\n  }\r\n\r\n  getMaxDateForNow() {\r\n    // There is an issue when setting max date that when changing hour, the minutes is still max minutes.\r\n    // Workaround is to set minutes to 59.\r\n    return moment().minutes(59).toISOString(true);\r\n  }\r\n\r\n  cancel() {\r\n    this.modalController.dismiss();\r\n  }\r\n\r\n  private resetWhenNoActivityFields() {\r\n    this.avalancheActivityCopy.AvalancheExtTID = undefined;\r\n    this.avalancheActivityCopy.AvalTriggerSimpleTID = undefined;\r\n    this.avalancheActivityCopy.DestructiveSizeTID = undefined;\r\n    this.avalancheActivityCopy.AvalPropagationTID = undefined;\r\n    this.avalancheActivityCopy.ExposedHeightComboTID = undefined;\r\n    this.avalancheActivityCopy.ExposedHeight1 = undefined;\r\n    this.avalancheActivityCopy.ExposedHeight2 = undefined;\r\n    this.avalancheActivityCopy.ValidExposition = undefined;\r\n  }\r\n\r\n  ok() {\r\n    if (this.avalancheActivityCopy.EstimatedNumTID === 1) {\r\n      this.resetWhenNoActivityFields();\r\n    }\r\n    const timeFrame = this.timeFrames.find(\r\n      (tf) => tf.id === this.selectedTimeFrame\r\n    );\r\n    if (this.startDate && timeFrame) {\r\n      this.avalancheActivityCopy.DtStart = moment(this.startDate)\r\n        .hours(timeFrame.start.h)\r\n        .minutes(timeFrame.start.m)\r\n        .toISOString(true);\r\n      this.avalancheActivityCopy.DtEnd = moment(this.startDate)\r\n        .hours(timeFrame.end.h)\r\n        .minutes(timeFrame.end.m)\r\n        .toISOString(true);\r\n    }\r\n    if (this.isNew && IsEmptyHelper.isEmpty(this.avalancheActivityCopy)) {\r\n      this.modalController.dismiss(null);\r\n    } else {\r\n      this.modalController.dismiss(this.avalancheActivityCopy);\r\n    }\r\n  }\r\n\r\n  delete() {\r\n    this.modalController.dismiss({ delete: true });\r\n  }\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\nimport { AvalancheActivityPage } from './avalanche-activity.page';\r\nimport { SharedComponentsModule } from '../../../shared-components.module';\r\nimport { AvalancheActivityModalPageModule } from './avalanche-activity-modal/avalanche-activity-modal.module';\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: '',\r\n    component: AvalancheActivityPage\r\n  }\r\n];\r\n\r\n@NgModule({\r\n  imports: [\r\n    SharedComponentsModule,\r\n    AvalancheActivityModalPageModule,\r\n    RouterModule.forChild(routes)\r\n  ],\r\n  declarations: [AvalancheActivityPage]\r\n})\r\nexport class AvalancheActivityPageModule {}\r\n","<ion-header>\r\n  <ion-toolbar appHeaderColor mode=\"ios\">\r\n    <ion-buttons slot=\"start\">\r\n      <ion-back-button text=\"\" defaultHref=\"/\"></ion-back-button>\r\n    </ion-buttons>\r\n    <ion-title>\r\n      {{'REGISTRATION.SNOW.AVALANCHE_ACTIVITY.TITLE' | translate}}\r\n    </ion-title>\r\n  </ion-toolbar>\r\n</ion-header>\r\n<ion-content>\r\n  <app-registration-content-wrapper *ngIf=\"registration && registration.request.AvalancheActivityObs2\"\r\n    [registration]=\"registration\" [registrationTid]=\"registrationTid\" (reset)=\"reset()\">\r\n    <ion-list lines=\"full\">\r\n      <ion-list-header class=\"ion-text-uppercase\">\r\n        <ion-label>\r\n          {{ 'REGISTRATION.SNOW.AVALANCHE_ACTIVITY.TITLE' | translate }}\r\n        </ion-label>\r\n      </ion-list-header>\r\n      <ion-item detail=\"true\" (click)=\"addOrEditAvalancheActivity(i)\"\r\n        *ngFor=\"let avalancheActivity of registration.request.AvalancheActivityObs2; let i = index\">\r\n        <ion-label>{{ getEstimatedNumber(avalancheActivity) |\r\n          translate }}<span *ngIf=\"avalancheActivity.EstimatedNumTID !== 1\"> {{ getCause(avalancheActivity) | translate\r\n            |\r\n            lowercase\r\n            }}</span></ion-label>\r\n      </ion-item>\r\n      <ion-item (click)=\"addOrEditAvalancheActivity()\">\r\n        <ion-icon color=\"primary\" name=\"add-circle-outline\" slot=\"start\"></ion-icon>\r\n        <ion-label>{{'REGISTRATION.SNOW.AVALANCHE_ACTIVITY.ADD_NEW' | translate}}</ion-label>\r\n      </ion-item>\r\n      <ion-list-header class=\"ion-text-uppercase\">\r\n        <ion-label>\r\n          {{ 'REGISTRATION.ADD_IMAGES' | translate}}\r\n        </ion-label>\r\n      </ion-list-header>\r\n      <app-add-picture-item [geoHazard]=\"registration.geoHazard\" [registrationId]=\"registration.id\"\r\n        [registrationTid]=\"registrationTid\" [onBeforeAdd]=\"getSaveFunc()\"></app-add-picture-item>\r\n    </ion-list>\r\n  </app-registration-content-wrapper>\r\n</ion-content>","import { Component, NgZone } from '@angular/core';\r\nimport { RegistrationTid } from 'src/app/modules/common-registration/registration.models';\r\nimport { ActivatedRoute } from '@angular/router';\r\nimport { BasePage } from '../../base.page';\r\nimport { BasePageService } from '../../base-page-service';\r\nimport { ModalController } from '@ionic/angular';\r\nimport { AvalancheActivityModalPage } from './avalanche-activity-modal/avalanche-activity-modal.page';\r\nimport {\r\n  AvalancheActivityObs2EditModel,\r\n  KdvElement\r\n} from '@varsom-regobs-common/regobs-api';\r\nimport { KdvService } from '../../../../../core/services/kdv/kdv.service';\r\nimport { Subscription, combineLatest } from 'rxjs';\r\n\r\n@Component({\r\n  selector: 'app-avalanche-activity',\r\n  templateUrl: './avalanche-activity.page.html',\r\n  styleUrls: ['./avalanche-activity.page.scss']\r\n})\r\nexport class AvalancheActivityPage extends BasePage {\r\n  private avalancheCause: KdvElement[];\r\n  private estimatedNumber: KdvElement[];\r\n  private kdvSubscription: Subscription;\r\n\r\n  constructor(\r\n    basePageService: BasePageService,\r\n    activatedRoute: ActivatedRoute,\r\n    private modalController: ModalController,\r\n    private ngZone: NgZone,\r\n    private kdvService: KdvService\r\n  ) {\r\n    super(\r\n      RegistrationTid.AvalancheActivityObs2,\r\n      basePageService,\r\n      activatedRoute\r\n    );\r\n    this.avalancheCause = [];\r\n    this.estimatedNumber = [];\r\n  }\r\n\r\n  onInit() {\r\n    this.kdvSubscription = combineLatest([\r\n      this.kdvService.getKdvRepositoryByKeyObservable('Snow_AvalancheExtKDV'),\r\n      this.kdvService.getKdvRepositoryByKeyObservable('Snow_EstimatedNumKDV')\r\n    ]).subscribe(([causeKdv, estimatedNumberKdv]) => {\r\n      this.avalancheCause = causeKdv;\r\n      this.estimatedNumber = estimatedNumberKdv;\r\n    });\r\n  }\r\n\r\n  onBeforeLeave() {\r\n    if (this.kdvSubscription) {\r\n      this.kdvSubscription.unsubscribe();\r\n    }\r\n  }\r\n\r\n  async addOrEditAvalancheActivity(index?: number) {\r\n    const modal = await this.modalController.create({\r\n      component: AvalancheActivityModalPage,\r\n      componentProps: {\r\n        avalancheActivity: this.registration.request.AvalancheActivityObs2[\r\n          index\r\n        ],\r\n        dtObsTime: this.registration.request.DtObsTime\r\n      }\r\n    });\r\n    modal.present();\r\n    const result = await modal.onDidDismiss();\r\n    this.ngZone.run(() => {\r\n      if (result.data) {\r\n        if (result.data.delete) {\r\n          this.registration.request.AvalancheActivityObs2.splice(index, 1);\r\n        } else {\r\n          const avalancheActivityObs: AvalancheActivityObs2EditModel = result.data;\r\n          if (index !== undefined) {\r\n            this.registration.request.AvalancheActivityObs2[\r\n              index\r\n            ] = avalancheActivityObs;\r\n          } else {\r\n            this.registration.request.AvalancheActivityObs2.push(\r\n              avalancheActivityObs\r\n            );\r\n          }\r\n        }\r\n      }\r\n    });\r\n  }\r\n\r\n  getCause(avalancheActivityObs: AvalancheActivityObs2EditModel) {\r\n    const cause = this.avalancheCause.find(\r\n      (c) => c.Id === avalancheActivityObs.AvalancheExtTID\r\n    );\r\n    if (cause) {\r\n      return cause.Name;\r\n    } else {\r\n      return 'REGISTRATION.SNOW.AVALANCHE_PROBLEM.UNKNOWN_TYPE';\r\n    }\r\n  }\r\n\r\n  getEstimatedNumber(avalancheActivityObs: AvalancheActivityObs2EditModel) {\r\n    const kdvalue = this.estimatedNumber.find(\r\n      (c) => c.Id === avalancheActivityObs.EstimatedNumTID\r\n    );\r\n    if (kdvalue) {\r\n      return kdvalue.Name;\r\n    } else {\r\n      return 'REGISTRATION.SNOW.AVALANCHE_ACTIVITY.UNKNOWN_NUMBER';\r\n    }\r\n  }\r\n}\r\n"]}