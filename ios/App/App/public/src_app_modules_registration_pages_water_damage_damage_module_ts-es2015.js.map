{"version":3,"file":"src_app_modules_registration_pages_water_damage_damage_module_ts-es2015.js","mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;AAKuB;AACkF;AACxD;AACpB;AACoE;AAEvB;;;;;;;;;;ICApE,wEAAqE;IACnE,uDAIF;;;;;IAAA,qEAAe;;;IAJb,0DAIF;IAJE,ygBAIF;;;;IAZN,8EAAuF;IACrF,8EAAuD;IAA9B,qUAA6B;IACpD,+EAAwE;IAAA,uDACpD;;IAAA,4DAAY;IAChC,8EAAqD;IACnD,yEACW;IACX,4IAKe;IACjB,4DAAW;IACb,4DAAW;IACX,8EAA6B;IAC3B,+EAAwE;IAAA,wDAC3D;;IAAA,4DAAY;IAC3B,4DAAW;IACX,uFAMuB;IACvB,wFAC8D;IADF,uWAA6B;IAC3B,4DAAmB;IACnF,4DAAW;;;;IA1BiE,0DACpD;IADoD,sLACpD;IAIH,0DAA+B;IAA/B,iGAA+B;IASwB,0DAC3D;IAD2D,gLAC3D;IAGb,0DAAoC;IAApC,oGAAoC;IAMsB,0DAA6B;IAA7B,2FAA6B;;;IAIzF,uDACF;;;IADE,6LACF;;ADjBO,MAAM,kBAAkB;IAqB7B,YACU,MAAc,EACd,eAAgC,EAChC,mBAAwC;QAFxC,WAAM,GAAN,MAAM,CAAQ;QACd,oBAAe,GAAf,eAAe,CAAiB;QAChC,wBAAmB,GAAnB,mBAAmB,CAAqB;IAC/C,CAAC;IAjBJ,IAAI,SAAS;QACX,IACE,IAAI,CAAC,YAAY;YACjB,IAAI,CAAC,YAAY,CAAC,OAAO;YACzB,IAAI,CAAC,YAAY,CAAC,OAAO,CAAC,SAAS,EACnC;YACA,OAAO,IAAI,CAAC,YAAY,CAAC,OAAO,CAAC,SAAS,CAAC,IAAI,CAC7C,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,aAAa,KAAK,IAAI,CAAC,YAAY,CAC7C,CAAC;SACH;QACD,OAAO,SAAS,CAAC;IACnB,CAAC;IAQD,QAAQ;QACN,IAAI,IAAI,CAAC,SAAS,EAAE;YAClB,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC;SACxB;aAAM;YACL,IAAI,CAAC,UAAU,GAAG,KAAK,CAAC;SACzB;QACD,IAAI,IAAI,CAAC,SAAS,IAAI,IAAI,CAAC,SAAS,CAAC,WAAW,KAAK,SAAS,EAAE;YAC9D,IAAI,CAAC,SAAS,CAAC,WAAW,GAAG,EAAE,CAAC;SACjC;IACH,CAAC;IAED,gBAAgB;QACd,IAAI,CAAC,UAAU,GAAG,CAAC,IAAI,CAAC,UAAU,CAAC;IACrC,CAAC;IAED,eAAe;QACb,IAAI,IAAI,CAAC,UAAU,EAAE;YACnB,IAAI,CAAC,IAAI,CAAC,SAAS,EAAE;gBACnB,IAAI,CAAC,YAAY,CAAC,OAAO,CAAC,SAAS,CAAC,IAAI,CAAC;oBACvC,aAAa,EAAE,IAAI,CAAC,YAAY;oBAChC,WAAW,EAAE,EAAE;iBAChB,CAAC,CAAC;aACJ;SACF;aAAM;YACL,IAAI,CAAC,YAAY,CAAC,OAAO,CAAC,SAAS,GAAG,IAAI,CAAC,YAAY,CAAC,OAAO,CAAC,SAAS,CAAC,MAAM,CAC9E,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,aAAa,KAAK,IAAI,CAAC,YAAY,CAC7C,CAAC;SACH;QACD,IAAI,CAAC,IAAI,EAAE,CAAC;IACd,CAAC;IAED,IAAI;QACF,OAAO,IAAI,CAAC,mBAAmB,CAAC,qBAAqB,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC;IAC3E,CAAC;IAED,WAAW;QACT,OAAO,GAAG,EAAE,CAAC,IAAI,CAAC,IAAI,EAAE,CAAC;IAC3B,CAAC;IAEK,iBAAiB;;YACrB,MAAM,UAAU,GAAG,IAAI,CAAC,YAAY,CAAC,OAAO,CAAC,WAAW;gBACtD,CAAC,CAAC,2CAAQ,CACN,IAAI,CAAC,YAAY,CAAC,OAAO,CAAC,WAAW,CAAC,QAAQ,EAC9C,IAAI,CAAC,YAAY,CAAC,OAAO,CAAC,WAAW,CAAC,SAAS,CAChD;gBACH,CAAC,CAAC,IAAI,CAAC;YACT,MAAM,KAAK,GAAG,MAAM,IAAI,CAAC,eAAe,CAAC,MAAM,CAAC;gBAC9C,SAAS,EAAE,sGAAqB;gBAChC,cAAc,EAAE;oBACd,UAAU;oBACV,SAAS,EAAE,IAAI,CAAC,SAAS;oBACzB,SAAS,EAAE,IAAI,CAAC,YAAY,CAAC,SAAS;iBACvC;aACF,CAAC,CAAC;YACH,KAAK,CAAC,OAAO,EAAE,CAAC;YAChB,MAAM,MAAM,GAAG,MAAM,KAAK,CAAC,YAAY,EAAE,CAAC;YAC1C,IAAI,MAAM,CAAC,IAAI,EAAE;gBACf,MAAM,GAAG,GAAyB,MAAM,CAAC,IAAI,CAAC;gBAC9C,IAAI,CAAC,SAAS,CAAC,cAAc,GAAG;oBAC9B,QAAQ,EAAE,GAAG,CAAC,QAAQ;oBACtB,SAAS,EAAE,GAAG,CAAC,SAAS;iBACzB,CAAC;gBACF,MAAM,IAAI,CAAC,IAAI,EAAE,CAAC;aACnB;QACH,CAAC;KAAA;;oFA3FU,kBAAkB;gHAAlB,kBAAkB;QClB/B,2EAAU;QACR,kFAA8F;QAAzD,iMAAwB,gGAAc,qBAAiB,IAA/B;QAAiC,4DAAe;QAC7G,4EAAW;QAAA,uDAAoB;QAAA,4DAAY;QAC7C,4DAAW;QACX,0HA4BW;QACX,0MAEc;;QAlCyB,0DAAwB;QAAxB,mFAAwB;QAClD,0DAAoB;QAApB,mFAAoB;QAEuB,0DAA6B;QAA7B,iGAA6B;;;;;;;;;;;;;;;;;;;;;;;;;;;ACJlC;AAEqD;AAC2C;AAC5E;AACtB;AACM;AACZ;AACX;AAC+C;;;;;;;AAE/E,MAAM,SAAS,GAAG,iBAAiB,CAAC;AAI7B,MAAM,eAAe;IAqB1B,YACU,mBAAwC,EACxC,oBAA0C,EAC1C,yBAAoD,EACpD,MAAc,EACd,eAAgC,EAChC,gBAAkC,EAClC,cAA8B;QAN9B,wBAAmB,GAAnB,mBAAmB,CAAqB;QACxC,yBAAoB,GAApB,oBAAoB,CAAsB;QAC1C,8BAAyB,GAAzB,yBAAyB,CAA2B;QACpD,WAAM,GAAN,MAAM,CAAQ;QACd,oBAAe,GAAf,eAAe,CAAiB;QAChC,qBAAgB,GAAhB,gBAAgB,CAAkB;QAClC,mBAAc,GAAd,cAAc,CAAgB;IACrC,CAAC;IA5BJ,IAAI,IAAI;QACN,OAAO,IAAI,CAAC,MAAM,CAAC;IACrB,CAAC;IAED,IAAI,mBAAmB;QACrB,OAAO,IAAI,CAAC,mBAAmB,CAAC;IAClC,CAAC;IAED,IAAI,eAAe;QACjB,OAAO,IAAI,CAAC,eAAe,CAAC;IAC9B,CAAC;IAED,IAAI,gBAAgB;QAClB,OAAO,IAAI,CAAC,gBAAgB,CAAC;IAC/B,CAAC;IAED,IAAI,yBAAyB;QAC3B,OAAO,IAAI,CAAC,yBAAyB,CAAC;IACxC,CAAC;IAYK,YAAY,CAAC,YAA2B,EAAE,eAAgC,EAAE,OAAoB;;YACpG,MAAM,SAAS,GAAG,MAAM,IAAI,CAAC,gBAAgB,CAAC,GAAG,CAAC,sCAAsC,CAAC,CAAC,SAAS,EAAE,CAAC;YACtG,OAAO,IAAI,CAAC,iBAAiB,CAAC,SAAS,EAAE,YAAY,EAAE,eAAe,EAAE,OAAO,CAAC,CAAC;QACnF,CAAC;KAAA;IAEK,YAAY,CAAC,YAA2B,EAAE,eAAgC,EAAE,OAAoB;;YACpG,MAAM,SAAS,GAAG,MAAM,IAAI,CAAC,gBAAgB,CAAC,GAAG,CAAC,4BAA4B,CAAC,CAAC,SAAS,EAAE,CAAC;YAC5F,OAAO,IAAI,CAAC,iBAAiB,CAAC,SAAS,EAAE,YAAY,EAAE,eAAe,EAAE,OAAO,CAAC,CAAC;QACnF,CAAC;KAAA;IAEa,iBAAiB,CAAC,OAAe,EAAE,YAA2B,EAAE,eAAgC,EAAE,OAAoB;;YAClI,MAAM,YAAY,GAAG,MAAM,IAAI,CAAC,gBAAgB,CAAC,GAAG,CAAC,CAAC,gBAAgB,EAAE,aAAa,CAAC,CAAC,CAAC,SAAS,EAAE,CAAC;YACpG,MAAM,KAAK,GAAG,MAAM,IAAI,CAAC,eAAe,CAAC,MAAM,CAAC;gBAC9C,OAAO;gBACP,OAAO,EAAE;oBACP;wBACE,IAAI,EAAE,YAAY,CAAC,gBAAgB,CAAC;wBACpC,IAAI,EAAE,QAAQ;qBACf;oBACD;wBACE,IAAI,EAAE,YAAY,CAAC,aAAa,CAAC;qBAClC;iBACF;aACF,CAAC,CAAC;YACH,MAAM,KAAK,CAAC,OAAO,EAAE,CAAC;YACtB,MAAM,MAAM,GAAG,MAAM,KAAK,CAAC,YAAY,EAAE,CAAC;YAC1C,MAAM,KAAK,GAAY,MAAM,CAAC,IAAI,KAAK,QAAQ,CAAC;YAChD,IAAI,KAAK,EAAE;gBACT,MAAM,IAAI,CAAC,KAAK,CAAC,YAAY,EAAE,eAAe,EAAE,OAAO,CAAC,CAAC;aAC1D;YACD,OAAO,KAAK,CAAC;QACf,CAAC;KAAA;IAEK,KAAK,CAAC,YAA2B,EAAE,eAAgC,EAAE,OAAoB;;YAC7F,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,GAAG,EAAE;gBACjB,IAAI,eAAe,EAAE;oBACnB,YAAY,CAAC,OAAO,CAAC,yGAAe,CAAC,eAAe,CAAC,CAAC,GAAG,IAAI,CAAC,eAAe,CAAC,eAAe,CAAC,CAAC;oBAC/F,IAAI,CAAC,WAAW,CAAC,YAAY,CAAC,CAAC;iBAChC;gBACD,IAAI,OAAO,EAAE;oBACX,OAAO,EAAE,CAAC;iBACX;YACH,CAAC,CAAC,CAAC;YACH,MAAM,IAAI,CAAC,mBAAmB,CAAC,qBAAqB,CAAC,YAAY,CAAC,CAAC;QACrE,CAAC;KAAA;IAED,kBAAkB,CAAC,YAA2B,EAAE,eAAgC;QAC9E,MAAM,QAAQ,GAAG,yGAAe,CAAC,eAAe,CAAC,CAAC;QAClD,IAAI,CAAC,YAAY,CAAC,OAAO,CAAC,QAAQ,CAAC,EAAE;YACnC,6BAA6B;YAC7B,YAAY,CAAC,OAAO,CAAC,QAAQ,CAAC,GAAG,IAAI,CAAC,eAAe,CAAC,eAAe,CAAC,CAAC;SACxE;IACH,CAAC;IAED,eAAe,CAAC,eAAgC;QAC9C,IAAI,qGAAW,CAAC,eAAe,CAAC,EAAE;YAChC,OAAO,EAAE,CAAC;SACX;aAAM;YACL,OAAO,EAAE,CAAC;SACX;IACH,CAAC;IAED,WAAW,CAAC,YAA2B;QACrC,IAAI,CAAC,oBAAoB;aACtB,cAAc,CAAC,YAAY,CAAC,EAAE,CAAC;aAC/B,IAAI,CAAC,yDAAS,CAAC,CAAC,WAAW,EAAE,EAAE,CAAC,8CAAQ,CAAC,WAAW,CAAC,GAAG,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,IAAI,CAAC,oBAAoB,CAAC,gBAAgB,CAAC,YAAY,CAAC,EAAE,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC;aACrI,SAAS,CACR,GAAG,EAAE;YACH,IAAI,CAAC,cAAc,CAAC,KAAK,CAAC,uBAAuB,EAAE,SAAS,CAAC,CAAC;QAChE,CAAC,EACD,CAAC,KAAK,EAAE,EAAE;YACR,IAAI,CAAC,cAAc,CAAC,KAAK,CAAC,KAAK,EAAE,SAAS,EAAE,wBAAwB,CAAC,CAAC;QACxE,CAAC,CACF,CAAC;IACN,CAAC;;8EAzGU,eAAe;gHAAf,eAAe,WAAf,eAAe,mBAFd,MAAM;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACZY;AACsB;AAC+D;AACpE;AACqB;AACE;;;;;AAGjE,MAAe,QAAS,SAAQ,0EAAa;IAMlD,YAAY,eAAgC,EAAE,eAAgC,EAAE,cAA8B;QAC5G,KAAK,EAAE,CAAC;QACR,IAAI,CAAC,eAAe,GAAG,eAAe,CAAC;QACvC,IAAI,CAAC,cAAc,GAAG,cAAc,CAAC;QACrC,IAAI,CAAC,eAAe,GAAG,eAAe,CAAC;IACzC,CAAC;IAED,QAAQ,KAAI,CAAC;IAEb,eAAe;QACb,MAAM,EAAE,GAAG,IAAI,CAAC,cAAc,CAAC,QAAQ,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC;QACrD,IAAI,CAAC,eAAe,CAAC,yBAAyB,CAAC,0BAA0B,CAAC,EAAE,CAAC;aAC1E,IAAI,CACH,oDAAI,CAAC,CAAC,CAAC,EACP,mDAAG,CAAC,CAAC,GAAG,EAAE,EAAE;YACV,IAAI,CAAC,eAAe,CAAC,kBAAkB,CAAC,GAAG,EAAE,IAAI,CAAC,eAAe,CAAC,CAAC;YACnE,OAAO,GAAG,CAAC;QACb,CAAC,CAAC,EACF,mDAAG,CAAC,CAAC,GAAG,EAAE,EAAE;YACV,IAAI,CAAC,YAAY,GAAG,GAAG,CAAC;QAC1B,CAAC,CAAC,EACF,yDAAS,CAAC,GAAG,EAAE,CAAC,IAAI,CAAC,oBAAoB,EAAE,CAAC,EAC5C,yDAAS,CAAC,IAAI,CAAC,UAAU,CAAC,CAC3B;aACA,SAAS,EAAE,CAAC;IACjB,CAAC;IAUD,gFAAgF;IAC1E,QAAQ;;YACZ,oEAAoE;YACpE,MAAM,KAAK,GAAG,MAAM,OAAO,CAAC,OAAO,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC,CAAC,IAAI,CAAC,OAAO,EAAE,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC;YAC1E,qDAAqD;YACrD,MAAM,OAAO,GAAG,MAAM,OAAO,CAAC,OAAO,CAAC,IAAI,CAAC,OAAO,EAAE,CAAC,CAAC;YACtD,IAAI,CAAC,OAAO,IAAI,CAAC,KAAK,EAAE;gBACtB,OAAO,IAAI,CAAC,eAAe,CAAC,YAAY,CAAC,IAAI,CAAC,YAAY,EAAE,IAAI,CAAC,eAAe,EAAE,GAAG,EAAE,CAAC,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC,CAAC,IAAI,CAAC,OAAO,EAAE,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC;aACjI;YACD,OAAO,IAAI,CAAC;QACd,CAAC;KAAA;IAEO,oBAAoB;QAC1B,IAAI,IAAI,CAAC,MAAM,EAAE;YACf,OAAO,0CAAI,CAAC,OAAO,CAAC,OAAO,CAAC,IAAI,CAAC,MAAM,EAAE,CAAC,CAAC,CAAC;SAC7C;QACD,OAAO,yCAAE,CAAC,EAAE,CAAC,CAAC;IAChB,CAAC;IAEK,gBAAgB;;YACpB,IAAI,IAAI,CAAC,aAAa,EAAE;gBACtB,MAAM,OAAO,CAAC,OAAO,CAAC,IAAI,CAAC,aAAa,EAAE,CAAC,CAAC;aAC7C;YACD,MAAM,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;QACxB,CAAC;KAAA;IAED,IAAI,CAAC,KAAK,GAAG,KAAK;QAChB,IAAI,CAAC,YAAY,CAAC,UAAU,GAAG,qGAAgB,CAAC;QAChD,OAAO,IAAI,CAAC,eAAe,CAAC,mBAAmB,CAAC,qBAAqB,CAAC,IAAI,CAAC,YAAY,EAAE,KAAK,CAAC,CAAC;IAClG,CAAC;IAED,WAAW;QACT,OAAO,GAAG,EAAE,CAAC,IAAI,CAAC,IAAI,EAAE,CAAC;IAC3B,CAAC;IAEK,OAAO;;YACX,OAAO,CAAC,CAAC,MAAM,IAAI,CAAC,eAAe,CAAC,yBAAyB,CAAC,mCAAmC,CAC/F,IAAI,CAAC,YAAY,EACjB,IAAI,CAAC,eAAe,CACrB;iBACE,IAAI,CAAC,oDAAI,CAAC,CAAC,CAAC,CAAC;iBACb,SAAS,EAAE,CAAC,CAAC;QAClB,CAAC;KAAA;IAED,KAAK;QACH,OAAO,IAAI,CAAC,eAAe,CAAC,YAAY,CAAC,IAAI,CAAC,YAAY,EAAE,IAAI,CAAC,eAAe,EAAE,GAAG,EAAE,CAAC,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC,CAAC,IAAI,CAAC,OAAO,EAAE,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC;IAClI,CAAC;IAED,cAAc;QACZ,OAAO,CACL,GAAG;YACH,IAAI,CAAC,cAAc,CAAC,QAAQ,CAAC,YAAY;iBACtC,GAAG,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,OAAO,EAAE,EAAE,CAAC,OAAO,CAAC,QAAQ,EAAE,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;iBAChE,MAAM,CAAC,CAAC,IAAI,EAAE,EAAE,CAAC,CAAC,CAAC,IAAI,CAAC;iBACxB,IAAI,CAAC,GAAG,CAAC,CACb,CAAC;IACJ,CAAC;;gEAjGmB,QAAQ;uGAAR,QAAQ;;;;;;;;;;;;;;;;;;ACRqC;AACK;;AAOjE,MAAM,2BAA2B;;sGAA3B,2BAA2B;wHAA3B,2BAA2B;4HAJ7B,CAAC,6EAAsB,CAAC;mIAItB,2BAA2B,mBAHvB,4EAAqB,aAD1B,6EAAsB;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACJe;AAEpB;AAC4C;AACsC;AACxD;AACqC;AAED;;;;;;;;;;;ICT3F,6EAA2C;IACzC,iFAAuC;IACrC,iFAA0B;IACxB,gFAA+B;IAAnB,iUAAkB;IAAC,uDAAkC;;IAAA,4DAAa;IAChF,4DAAc;IACd,4EAAW;IACT,uDACF;;IAAA,4DAAY;IACd,4DAAc;IAChB,4DAAa;;IANwB,0DAAkC;IAAlC,kJAAkC;IAGjE,0DACF;IADE,qLACF;;;;IAIF,6FAEgJ;IAD9F,0XAAqC;IAEvF,4DAA0B;;;IAHkB,uFAAuB;;ADK9D,MAAM,qBAAqB;IAYhC,YACU,eAAgC,EAChC,gBAAkC,EAClC,iBAAoC;QAFpC,oBAAe,GAAf,eAAe,CAAiB;QAChC,qBAAgB,GAAhB,gBAAgB,CAAkB;QAClC,sBAAiB,GAAjB,iBAAiB,CAAmB;QAT9C,0BAAqB,GAAG,sCAAsC,CAAC;QAW7D,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC,iBAAiB,CAAC,aAAa,CAAC;IAC1D,CAAC;IAEK,QAAQ;;YACZ,IAAI,IAAI,CAAC,UAAU,EAAE;gBACnB,MAAM,eAAe,GAAG,yCAAM,CAAC;oBAC7B,OAAO,EAAE,mCAAmC;oBAC5C,QAAQ,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC;oBAClB,UAAU,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC;oBACpB,SAAS,EAAE,2BAA2B;oBACtC,UAAU,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC;iBACrB,CAAC,CAAC;gBACH,IAAI,CAAC,UAAU,GAAG,2CAAQ,CAAC,IAAI,CAAC,UAAU,EAAE,EAAE,IAAI,EAAE,eAAe,EAAE,CAAC,CAAC;aACxE;YACD,IACE,IAAI,CAAC,SAAS;gBACd,CAAC,gFAAqB,CAAC,IAAI,CAAC,SAAS,CAAC,cAAc,CAAC,EACrD;gBACA,MAAM,MAAM,GAAG,2CAAQ,CACrB,IAAI,CAAC,SAAS,CAAC,cAAc,CAAC,QAAQ,EACtC,IAAI,CAAC,SAAS,CAAC,cAAc,CAAC,SAAS,CACxC,CAAC;gBACF,MAAM,kBAAkB,GAAG,yCAAM,CAAC;oBAChC,OAAO,EAAE,IAAI,CAAC,qBAAqB;oBACnC,QAAQ,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC;oBAClB,UAAU,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC;oBACpB,SAAS,EAAE,2BAA2B;oBACtC,UAAU,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC;iBACrB,CAAC,CAAC;gBACH,IAAI,CAAC,cAAc,GAAG,2CAAQ,CAAC,MAAM,EAAE,EAAE,IAAI,EAAE,kBAAkB,EAAE,CAAC,CAAC;aACtE;QACH,CAAC;KAAA;IAED,eAAe;QACb,IAAI,CAAC,gBAAgB,CAAC,gBAAgB,EAAE,CAAC;IAC3C,CAAC;IAED,gBAAgB;QACd,IAAI,CAAC,gBAAgB,CAAC,eAAe,EAAE,CAAC;IAC1C,CAAC;IAEK,aAAa,CAAC,KAA2B;;YAC7C,IAAI,CAAC,eAAe,CAAC,OAAO,CAAC,KAAK,CAAC,CAAC;QACtC,CAAC;KAAA;IAED,MAAM;QACJ,IAAI,CAAC,eAAe,CAAC,OAAO,EAAE,CAAC;IACjC,CAAC;IAED,EAAE;QACA,IAAI,CAAC,yBAAyB,CAAC,eAAe,EAAE,CAAC;IACnD,CAAC;;0FApEU,qBAAqB;mHAArB,qBAAqB;kEASrB,oHAAyB;;;;;QCzBtC,+HASa;;QACb,8EAAa;QACX,yJAG0B;QAC5B,4DAAc;;QAfD,mJAA4B;QAWb,0DAAgB;QAAhB,gFAAgB;;;;;;;;;;;;;;;;;;;;;;ACVW;AACZ;AACgC;AACc;AACU;;;AAEnG,MAAM,MAAM,GAAW;IACrB;QACE,IAAI,EAAE,EAAE;QACR,SAAS,EAAE,oDAAU;KACtB;CACF,CAAC;AAUK,MAAM,gBAAgB;;gFAAhB,gBAAgB;6GAAhB,gBAAgB;iHAPlB;YACP,6EAAsB;YACtB,wGAA2B;YAC3B,kEAAqB,CAAC,MAAM,CAAC;SAC9B;mIAGU,gBAAgB,mBAFZ,oDAAU,EAAE,2FAAkB,aAJ3C,6EAAsB;QACtB,wGAA2B;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACjBmB;AACP;AAC+C;AAChB;AACnB;AAEG;AACT;AAEZ;;;;;;;;;;;;;;IC0B7B,qFACwG;IADjD,+ZAA+B;IAEtF,4DAAiB;;;;IAFsC,6FAA+B;;;IANxF,wEAA+C;IAC7C,qFAA4C;IAC1C,4EAAW;IACT,uDACF;;IAAA,4DAAY;IACd,4DAAkB;IAClB,gLAEiB;IACnB,qEAAe;;;IANT,0DACF;IADE,wLACF;IAEqC,0DAAc;IAAd,uFAAc;;;;;IAxB3D,sGACwD;IAAlB,iWAAiB;IACrD,8EAAuB;IACrB,qFAA4C;IAC1C,4EAAW;IACT,uDACF;;IAAA,4DAAY;IACd,4DAAkB;IAClB,qFAAyC;IAAxB,iXAAuB;IACtC,8EAAgF;IAA3B,0UAAqB,IAAI,IAAC;IAC7E,4EAAW;IAAA,uDAA+B;;IAAA,4DAAY;IACtD,2EAA6D;IAC/D,4DAAW;IACX,+EAAkF;IAA5B,6UAAqB,KAAK,IAAC;IAC/E,6EAAW;IAAA,wDAA8B;;IAAA,4DAAY;IACrD,2EAA8D;IAChE,4DAAW;IACb,4DAAkB;IAClB,8JASe;IACjB,4DAAW;IACb,4DAAmC;;;IA7BoB,6FAA6B;IAK5E,0DACF;IADE,4LACF;IAEe,0DAAuB;IAAvB,qFAAuB;IAC5B,0DAA0C;IAA1C,oKAA0C;IACvC,0DAA+B;IAA/B,iJAA+B;IACR,0DAAc;IAAd,uEAAc;IAExC,0DAA2C;IAA3C,qKAA2C;IACxC,0DAA8B;IAA9B,gJAA8B;IACP,0DAAe;IAAf,wEAAe;IAGtC,0DAA8B;IAA9B,wGAA8B;;ADlBnD,MAAM,iBAAiB,GAAG,CAAC,CAAC;AAOrB,MAAM,UAAW,SAAQ,gDAAQ;IAsCtC,YACE,eAAgC,EAChC,cAA8B,EACtB,UAAsB,EACtB,MAAc;QAEtB,KAAK,CAAC,8GAAyB,EAAE,eAAe,EAAE,cAAc,CAAC,CAAC;QAH1D,eAAU,GAAV,UAAU,CAAY;QACtB,WAAM,GAAN,MAAM,CAAQ;IAGxB,CAAC;IAzCD,IAAI,SAAS;QACX,IACE,CAAC,IAAI,CAAC,YAAY;YAClB,CAAC,IAAI,CAAC,YAAY,CAAC,OAAO;YAC1B,CAAC,IAAI,CAAC,YAAY,CAAC,OAAO,CAAC,SAAS;YACpC,IAAI,CAAC,YAAY,CAAC,OAAO,CAAC,SAAS,CAAC,MAAM,KAAK,CAAC,EAChD;YACA,OAAO,IAAI,CAAC,OAAO,CAAC;SACrB;QACD,OAAO,CACL,IAAI,CAAC,YAAY;YACjB,IAAI,CAAC,YAAY,CAAC,OAAO,CAAC,SAAS,CAAC,MAAM,CACxC,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,aAAa,KAAK,iBAAiB,CAC7C,CAAC,MAAM,GAAG,CAAC,CACb,CAAC;IACJ,CAAC;IAED,IAAI,SAAS,CAAC,GAAY;QACxB,IAAI,CAAC,OAAO,GAAG,GAAG,CAAC;QACnB,IAAI,GAAG,KAAK,KAAK,EAAE;YACjB,IAAI,CAAC,YAAY,CAAC,OAAO,CAAC,SAAS,GAAG;gBACpC;oBACE,aAAa,EAAE,iBAAiB;iBACjC;aACF,CAAC;SACH;aAAM;YACL,IAAI,CAAC,YAAY,CAAC,OAAO,CAAC,SAAS,GAAG,IAAI,CAAC,YAAY,CAAC,OAAO,CAAC,SAAS,CAAC,MAAM,CAC9E,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,aAAa,KAAK,iBAAiB,CAC7C,CAAC;SACH;IACH,CAAC;IAaD,MAAM;QACJ,MAAM,aAAa,GAAG,iEAAS,CAAC,IAAI,CAAC,YAAY,CAAC,SAAS,CAAC,CAAC;QAC7D,IAAI,CAAC,eAAe,GAAG,IAAI,CAAC,UAAU;aACnC,+BAA+B,CAAC,GAAG,aAAa,gBAAgB,CAAC;aACjE,IAAI,CAAC,mDAAG,CAAC,CAAC,GAAG,EAAE,EAAE,CAAC,GAAG,CAAC,MAAM,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,EAAE,KAAK,iBAAiB,CAAC,CAAC,CAAC;aACjE,SAAS,CAAC,CAAC,WAAW,EAAE,EAAE;YACzB,IAAI,CAAC,MAAM,CAAC,GAAG,CAAC,GAAG,EAAE;gBACnB,IAAI,CAAC,WAAW,GAAG,WAAW,CAAC;YACjC,CAAC,CAAC,CAAC;QACL,CAAC,CAAC,CAAC;IACP,CAAC;IAED,aAAa;QACX,IAAI,IAAI,CAAC,eAAe,EAAE;YACxB,IAAI,CAAC,eAAe,CAAC,WAAW,EAAE,CAAC;SACpC;IACH,CAAC;;oEA/DU,UAAU;wGAAV,UAAU;QClBvB,6EAAY;QACV,iFAAuC;QACrC,iFAA0B;QACxB,gFAA2D;QAC7D,4DAAc;QACd,4EAAW;QACT,uDACF;;QAAA,4DAAY;QACd,4DAAc;QAChB,4DAAa;QACb,8EAAa;QACX,kKA6BmC;QACrC,4DAAc;;QAnCR,0DACF;QADE,8KACF;QAIiC,0DAAkB;QAAlB,kFAAkB","sources":["./src/app/modules/registration/components/damage-obs/damage-obs.component.ts","./src/app/modules/registration/components/damage-obs/damage-obs.component.html","./src/app/modules/registration/pages/base-page-service.ts","./src/app/modules/registration/pages/base.page.ts","./src/app/modules/registration/pages/set-damage-location/set-damage-location.module.ts","./src/app/modules/registration/pages/set-damage-location/set-damage-location.page.ts","./src/app/modules/registration/pages/set-damage-location/set-damage-location.page.html","./src/app/modules/registration/pages/water/damage/damage.module.ts","./src/app/modules/registration/pages/water/damage/damage.page.ts","./src/app/modules/registration/pages/water/damage/damage.page.html"],"sourcesContent":["import {\r\n  Component,\r\n  OnInit,\r\n  Input,\r\n  NgZone,\r\n} from '@angular/core';\r\nimport { IRegistration, RegistrationTid } from 'src/app/modules/common-registration/registration.models';\r\nimport { ModalController } from '@ionic/angular';\r\nimport * as L from 'leaflet';\r\nimport { SetDamageLocationPage } from '../../pages/set-damage-location/set-damage-location.page';\r\nimport { ObsLocationEditModel } from '@varsom-regobs-common/regobs-api';\r\nimport { RegistrationService } from '../../services/registration.service';\r\n\r\n@Component({\r\n  selector: 'app-damage-obs',\r\n  templateUrl: './damage-obs.component.html',\r\n  styleUrls: ['./damage-obs.component.scss']\r\n})\r\nexport class DamageObsComponent implements OnInit {\r\n  @Input() damageTypeId: number;\r\n  @Input() damageTypeName: string;\r\n  @Input() registration: IRegistration;\r\n  @Input() registrationTid: RegistrationTid;\r\n\r\n  isSelected: boolean;\r\n\r\n  get damageObs() {\r\n    if (\r\n      this.registration &&\r\n      this.registration.request &&\r\n      this.registration.request.DamageObs\r\n    ) {\r\n      return this.registration.request.DamageObs.find(\r\n        (x) => x.DamageTypeTID === this.damageTypeId\r\n      );\r\n    }\r\n    return undefined;\r\n  }\r\n\r\n  constructor(\r\n    private ngZone: NgZone,\r\n    private modalController: ModalController,\r\n    private registrationService: RegistrationService\r\n  ) {}\r\n\r\n  ngOnInit() {\r\n    if (this.damageObs) {\r\n      this.isSelected = true;\r\n    } else {\r\n      this.isSelected = false;\r\n    }\r\n    if (this.damageObs && this.damageObs.Attachments === undefined) {\r\n      this.damageObs.Attachments = [];\r\n    }\r\n  }\r\n\r\n  toggleDamageType() {\r\n    this.isSelected = !this.isSelected;\r\n  }\r\n\r\n  onCheckedChange() {\r\n    if (this.isSelected) {\r\n      if (!this.damageObs) {\r\n        this.registration.request.DamageObs.push({\r\n          DamageTypeTID: this.damageTypeId,\r\n          Attachments: []\r\n        });\r\n      }\r\n    } else {\r\n      this.registration.request.DamageObs = this.registration.request.DamageObs.filter(\r\n        (x) => x.DamageTypeTID !== this.damageTypeId\r\n      );\r\n    }\r\n    this.save();\r\n  }\r\n\r\n  save() {\r\n    return this.registrationService.saveRegistrationAsync(this.registration);\r\n  }\r\n\r\n  getSaveFunc() {\r\n    return () => this.save();\r\n  }\r\n\r\n  async setDamagePosition() {\r\n    const fromLatLng = this.registration.request.ObsLocation\r\n      ? L.latLng(\r\n          this.registration.request.ObsLocation.Latitude,\r\n          this.registration.request.ObsLocation.Longitude\r\n        )\r\n      : null;\r\n    const modal = await this.modalController.create({\r\n      component: SetDamageLocationPage,\r\n      componentProps: {\r\n        fromLatLng,\r\n        damageObs: this.damageObs,\r\n        geoHazard: this.registration.geoHazard\r\n      }\r\n    });\r\n    modal.present();\r\n    const result = await modal.onDidDismiss();\r\n    if (result.data) {\r\n      const obs: ObsLocationEditModel = result.data;\r\n      this.damageObs.DamagePosition = {\r\n        Latitude: obs.Latitude,\r\n        Longitude: obs.Longitude\r\n      };\r\n      await this.save();\r\n    }\r\n  }\r\n}\r\n","<ion-item>\r\n  <ion-checkbox mode=\"md\" slot=\"start\" [(ngModel)]=\"isSelected\" (ionChange)=\"onCheckedChange()\"></ion-checkbox>\r\n  <ion-label>{{ damageTypeName }}</ion-label>\r\n</ion-item>\r\n<ion-list lines=\"none\" class=\"no-border ion-no-margin\" *ngIf=\"isSelected && damageObs\">\r\n  <ion-item detail=\"false\" (click)=\"setDamagePosition()\">\r\n    <ion-label color=\"medium\" position=\"stacked\" class=\"ion-text-uppercase\">{{ 'REGISTRATION.WATER.DAMAGE.WHERE_IS_DAMAGE_LOCATION'\r\n          | translate }}</ion-label>\r\n    <ion-text class=\"ion-align-self-start ion-text-wrap\">\r\n      <ion-icon class=\"add-icon\" color=\"primary\" name=\"location\">\r\n      </ion-icon>\r\n      <ng-container *ngIf=\"damageObs.DamagePosition else noDamagePosition\">\r\n        {{ damageObs.DamagePosition.Latitude | number:'0.3'\r\n        }}&deg;{{'MAP_CENTER_INFO.NORTH_SHORT'|translate}},\r\n        {{ damageObs.DamagePosition.Longitude | number:'0.3'\r\n        }}&deg;{{'MAP_CENTER_INFO.EAST_SHORT'|translate}}\r\n      </ng-container>\r\n    </ion-text>\r\n  </ion-item>\r\n  <ion-item class=\"label-only\">\r\n    <ion-label color=\"medium\" position=\"stacked\" class=\"ion-text-uppercase\">{{'REGISTRATION.WATER.DAMAGE.IMAGE_OF_DAMAGES' |\r\n      translate}}</ion-label>\r\n  </ion-item>\r\n  <app-add-picture-item iconColor=\"primary\" \r\n    [geoHazard]=\"registration.geoHazard\" \r\n    [registrationId]=\"registration.id\" \r\n    [registrationTid]=\"registrationTid\"\r\n    pictureCommentText=\"\" [onBeforeAdd]=\"getSaveFunc()\"\r\n    pictureCommentPlaceholder=\"REGISTRATION.INCIDENT.IMAGE_PLACEHOLDER\">\r\n  </app-add-picture-item>\r\n  <app-text-comment title=\"REGISTRATION.WATER.DAMAGE.COMMENT\" [(value)]=\"damageObs.Comment\"\r\n    placeholder=\"REGISTRATION.WATER.DAMAGE.COMMENT_PLACEHOLDER\"></app-text-comment>\r\n</ion-list>\r\n<ng-template #noDamagePosition>\r\n  {{'REGISTRATION.WATER.DAMAGE.ADD_DAMAGE_LOCATION' | translate }}\r\n</ng-template>","import { Injectable, NgZone } from '@angular/core';\r\nimport { IRegistration, RegistrationTid } from 'src/app/modules/common-registration/registration.models';\r\nimport { getPropertyName, isArrayType } from 'src/app/modules/common-registration/registration.helpers';\r\nimport { NewAttachmentService, RegistrationService as CommonRegistrationService } from 'src/app/modules/common-registration/registration.services';\r\nimport { RegistrationService } from '../services/registration.service';\r\nimport { AlertController } from '@ionic/angular';\r\nimport { TranslateService } from '@ngx-translate/core';\r\nimport { switchMap } from 'rxjs/operators';\r\nimport { forkJoin } from 'rxjs';\r\nimport { LoggingService } from '../../shared/services/logging/logging.service';\r\n\r\nconst DEBUG_TAG = 'BasePageService';\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class BasePageService {\r\n  get Zone() {\r\n    return this.ngZone;\r\n  }\r\n\r\n  get RegistrationService() {\r\n    return this.registrationService;\r\n  }\r\n\r\n  get AlertController() {\r\n    return this.alertController;\r\n  }\r\n\r\n  get TranslateService() {\r\n    return this.translateService;\r\n  }\r\n\r\n  get CommonRegistrationService() {\r\n    return this.commonRegistrationService;\r\n  }\r\n\r\n  constructor(\r\n    private registrationService: RegistrationService,\r\n    private newAttachmentService: NewAttachmentService,\r\n    private commonRegistrationService: CommonRegistrationService,\r\n    private ngZone: NgZone,\r\n    private alertController: AlertController,\r\n    private translateService: TranslateService,\r\n    private loggingService: LoggingService\r\n  ) {}\r\n\r\n  async confirmLeave(registration: IRegistration, registrationTid: RegistrationTid, onReset?: () => void) {\r\n    const leaveText = await this.translateService.get('REGISTRATION.REQUIRED_FIELDS_MISSING').toPromise();\r\n    return this.createResetDialog(leaveText, registration, registrationTid, onReset);\r\n  }\r\n\r\n  async confirmReset(registration: IRegistration, registrationTid: RegistrationTid, onReset?: () => void) {\r\n    const leaveText = await this.translateService.get('REGISTRATION.CONFIRM_RESET').toPromise();\r\n    return this.createResetDialog(leaveText, registration, registrationTid, onReset);\r\n  }\r\n\r\n  private async createResetDialog(message: string, registration: IRegistration, registrationTid: RegistrationTid, onReset?: () => void) {\r\n    const translations = await this.translateService.get(['DIALOGS.CANCEL', 'DIALOGS.YES']).toPromise();\r\n    const alert = await this.alertController.create({\r\n      message,\r\n      buttons: [\r\n        {\r\n          text: translations['DIALOGS.CANCEL'],\r\n          role: 'cancel'\r\n        },\r\n        {\r\n          text: translations['DIALOGS.YES']\r\n        }\r\n      ]\r\n    });\r\n    await alert.present();\r\n    const result = await alert.onDidDismiss();\r\n    const reset: boolean = result.role !== 'cancel';\r\n    if (reset) {\r\n      await this.reset(registration, registrationTid, onReset);\r\n    }\r\n    return reset;\r\n  }\r\n\r\n  async reset(registration: IRegistration, registrationTid: RegistrationTid, onReset?: () => void) {\r\n    this.Zone.run(() => {\r\n      if (registrationTid) {\r\n        registration.request[getPropertyName(registrationTid)] = this.getDefaultValue(registrationTid);\r\n        this.resetImages(registration);\r\n      }\r\n      if (onReset) {\r\n        onReset();\r\n      }\r\n    });\r\n    await this.registrationService.saveRegistrationAsync(registration);\r\n  }\r\n\r\n  createDefaultProps(registration: IRegistration, registrationTid: RegistrationTid) {\r\n    const propName = getPropertyName(registrationTid);\r\n    if (!registration.request[propName]) {\r\n      // Init to new object if null\r\n      registration.request[propName] = this.getDefaultValue(registrationTid);\r\n    }\r\n  }\r\n\r\n  getDefaultValue(registrationTid: RegistrationTid) {\r\n    if (isArrayType(registrationTid)) {\r\n      return [];\r\n    } else {\r\n      return {};\r\n    }\r\n  }\r\n\r\n  resetImages(registration: IRegistration) {\r\n    this.newAttachmentService\r\n      .getAttachments(registration.id)\r\n      .pipe(switchMap((attachments) => forkJoin(attachments.map((a) => this.newAttachmentService.removeAttachment(registration.id, a.id)))))\r\n      .subscribe(\r\n        () => {\r\n          this.loggingService.debug('Reset images complete', DEBUG_TAG);\r\n        },\r\n        (error) => {\r\n          this.loggingService.error(error, DEBUG_TAG, 'Could not reset images');\r\n        }\r\n      );\r\n  }\r\n}\r\n","import { Directive, OnInit } from '@angular/core';\r\nimport { from, of } from 'rxjs';\r\nimport { BasePageService } from './base-page-service';\r\nimport { IRegistration, RegistrationTid, SyncStatus } from 'src/app/modules/common-registration/registration.models';\r\nimport { ActivatedRoute } from '@angular/router';\r\nimport { take, takeUntil, map, switchMap, tap } from 'rxjs/operators';\r\nimport { NgDestoryBase } from '../../../core/helpers/observable-helper';\r\n\r\n@Directive()\r\nexport abstract class BasePage extends NgDestoryBase implements OnInit {\r\n  registration: IRegistration;\r\n  basePageService: BasePageService;\r\n  registrationTid: RegistrationTid;\r\n  activatedRoute: ActivatedRoute;\r\n\r\n  constructor(registrationTid: RegistrationTid, basePageService: BasePageService, activatedRoute: ActivatedRoute) {\r\n    super();\r\n    this.basePageService = basePageService;\r\n    this.activatedRoute = activatedRoute;\r\n    this.registrationTid = registrationTid;\r\n  }\r\n\r\n  ngOnInit() {}\r\n\r\n  ionViewDidEnter() {\r\n    const id = this.activatedRoute.snapshot.params['id'];\r\n    this.basePageService.CommonRegistrationService.getRegistrationByIdShared$(id)\r\n      .pipe(\r\n        take(1),\r\n        map((reg) => {\r\n          this.basePageService.createDefaultProps(reg, this.registrationTid);\r\n          return reg;\r\n        }),\r\n        tap((reg) => {\r\n          this.registration = reg;\r\n        }),\r\n        switchMap(() => this.createInitObservable()),\r\n        takeUntil(this.ngDestroy$)\r\n      )\r\n      .subscribe();\r\n  }\r\n\r\n  onInit?(): void | Promise<any>;\r\n\r\n  onBeforeLeave?(): void | Promise<any>;\r\n\r\n  onReset?(): void;\r\n\r\n  isValid?(): boolean | Promise<boolean>;\r\n\r\n  // NOTE: Remember to add canDeactivate: [CanDeactivateRouteGuard] in page module\r\n  async canLeave() {\r\n    // Check if implementation page has implemented custom isValid logic\r\n    const valid = await Promise.resolve(this.isValid ? this.isValid() : true);\r\n    // Only return alert if page is not empty and invalid\r\n    const isEmpty = await Promise.resolve(this.isEmpty());\r\n    if (!isEmpty && !valid) {\r\n      return this.basePageService.confirmLeave(this.registration, this.registrationTid, () => (this.onReset ? this.onReset() : null));\r\n    }\r\n    return true;\r\n  }\r\n\r\n  private createInitObservable() {\r\n    if (this.onInit) {\r\n      return from(Promise.resolve(this.onInit()));\r\n    }\r\n    return of({});\r\n  }\r\n\r\n  async ionViewWillLeave() {\r\n    if (this.onBeforeLeave) {\r\n      await Promise.resolve(this.onBeforeLeave());\r\n    }\r\n    await this.save(true);\r\n  }\r\n\r\n  save(clean = false) {\r\n    this.registration.syncStatus = SyncStatus.Draft;\r\n    return this.basePageService.RegistrationService.saveRegistrationAsync(this.registration, clean);\r\n  }\r\n\r\n  getSaveFunc() {\r\n    return () => this.save();\r\n  }\r\n\r\n  async isEmpty(): Promise<boolean> {\r\n    return !(await this.basePageService.CommonRegistrationService.hasAnyDataToShowInRegistrationTypes(\r\n      this.registration,\r\n      this.registrationTid\r\n    )\r\n      .pipe(take(1))\r\n      .toPromise());\r\n  }\r\n\r\n  reset() {\r\n    return this.basePageService.confirmReset(this.registration, this.registrationTid, () => (this.onReset ? this.onReset() : null));\r\n  }\r\n\r\n  getResolvedUrl(): string {\r\n    return (\r\n      '/' +\r\n      this.activatedRoute.snapshot.pathFromRoot\r\n        .map((v) => v.url.map((segment) => segment.toString()).join('/'))\r\n        .filter((path) => !!path)\r\n        .join('/')\r\n    );\r\n  }\r\n\r\n  // getConfiguredUrl(): string {\r\n  //     return '/' + this.activatedRoute.snapshot.pathFromRoot\r\n  //         .filter(v => v.routeConfig)\r\n  //         .map(v => v.routeConfig.path)\r\n  //         .join('/');\r\n  // }\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { SetDamageLocationPage } from './set-damage-location.page';\r\nimport { SharedComponentsModule } from '../../shared-components.module';\r\n\r\n@NgModule({\r\n  imports: [SharedComponentsModule],\r\n  declarations: [SetDamageLocationPage],\r\n  entryComponents: [SetDamageLocationPage]\r\n})\r\nexport class SetDamageLocationPageModule {}\r\n","import { Component, OnInit, Input, ViewChild } from '@angular/core';\r\nimport { ModalController } from '@ionic/angular';\r\nimport { DamageObsEditModel, ObsLocationEditModel } from '@varsom-regobs-common/regobs-api';\r\nimport * as L from 'leaflet';\r\nimport { IsEmptyHelper } from '../../../../core/helpers/is-empty.helper';\r\nimport { SetLocationInMapComponent } from '../../components/set-location-in-map/set-location-in-map.component';\r\nimport { GeoHazard } from '@varsom-regobs-common/core';\r\nimport { FullscreenService } from '../../../../core/services/fullscreen/fullscreen.service';\r\nimport { Observable } from 'rxjs';\r\nimport { SwipeBackService } from '../../../../core/services/swipe-back/swipe-back.service';\r\n\r\n@Component({\r\n  selector: 'app-set-damage-location',\r\n  templateUrl: './set-damage-location.page.html',\r\n  styleUrls: ['./set-damage-location.page.scss']\r\n})\r\nexport class SetDamageLocationPage implements OnInit {\r\n  @Input() damageObs: DamageObsEditModel;\r\n  @Input() geoHazard: GeoHazard;\r\n  @Input() fromLatLng: L.LatLng;\r\n  fromMarker: L.Marker;\r\n  locationMarker: L.Marker;\r\n  locationMarkerIconUrl = '/assets/icon/map/damage-location.svg';\r\n  fullscreen$: Observable<boolean>;\r\n\r\n  @ViewChild(SetLocationInMapComponent)\r\n  setLocationInMapComponent: SetLocationInMapComponent;\r\n\r\n  constructor(\r\n    private modalController: ModalController,\r\n    private swipeBackService: SwipeBackService,\r\n    private fullscreenService: FullscreenService\r\n  ) {\r\n    this.fullscreen$ = this.fullscreenService.isFullscreen$;\r\n  }\r\n\r\n  async ngOnInit() {\r\n    if (this.fromLatLng) {\r\n      const obsLocationIcon = L.icon({\r\n        iconUrl: '/assets/icon/map/obs-location.svg',\r\n        iconSize: [25, 41],\r\n        iconAnchor: [12, 41],\r\n        shadowUrl: 'leaflet/marker-shadow.png',\r\n        shadowSize: [41, 41]\r\n      });\r\n      this.fromMarker = L.marker(this.fromLatLng, { icon: obsLocationIcon });\r\n    }\r\n    if (\r\n      this.damageObs &&\r\n      !IsEmptyHelper.isEmpty(this.damageObs.DamagePosition)\r\n    ) {\r\n      const latLng = L.latLng(\r\n        this.damageObs.DamagePosition.Latitude,\r\n        this.damageObs.DamagePosition.Longitude\r\n      );\r\n      const damageLocationIcon = L.icon({\r\n        iconUrl: this.locationMarkerIconUrl,\r\n        iconSize: [25, 41],\r\n        iconAnchor: [12, 41],\r\n        shadowUrl: 'leaflet/marker-shadow.png',\r\n        shadowSize: [41, 41]\r\n      });\r\n      this.locationMarker = L.marker(latLng, { icon: damageLocationIcon });\r\n    }\r\n  }\r\n\r\n  ionViewDidEnter() {\r\n    this.swipeBackService.disableSwipeBack();\r\n  }\r\n\r\n  ionViewWillLeave() {\r\n    this.swipeBackService.enableSwipeBack();\r\n  }\r\n\r\n  async onLocationSet(event: ObsLocationEditModel) {\r\n    this.modalController.dismiss(event);\r\n  }\r\n\r\n  cancel() {\r\n    this.modalController.dismiss();\r\n  }\r\n\r\n  ok() {\r\n    this.setLocationInMapComponent.confirmLocation();\r\n  }\r\n}\r\n","<ion-header *ngIf=\"!(fullscreen$ | async)\">\r\n  <ion-toolbar appHeaderColor mode=\"ios\">\r\n    <ion-buttons slot=\"start\">\r\n      <ion-button (click)=\"cancel()\">{{ 'DIALOGS.CANCEL' | translate }}</ion-button>\r\n    </ion-buttons>\r\n    <ion-title>\r\n      {{'REGISTRATION.SET_DAMAGE_LOCATION.TITLE' | translate}}\r\n    </ion-title>\r\n  </ion-toolbar>\r\n</ion-header>\r\n<ion-content>\r\n  <app-set-location-in-map *ngIf=\"fromMarker\" [geoHazard]=\"geoHazard\" [fromMarker]=\"fromMarker\" [locationMarker]=\"locationMarker\"\r\n    [locationMarkerIconUrl]=\"locationMarkerIconUrl\" (locationSet)=\"onLocationSet($event)\" confirmLocationText=\"REGISTRATION.SET_DAMAGE_LOCATION.CONFIRM_TEXT\"\r\n    fromLocationText=\"REGISTRATION.OBS_LOCATION.TITLE\" [showPreviousUsedLocations]=\"false\" locationTitle=\"REGISTRATION.SET_DAMAGE_LOCATION.TITLE\">\r\n  </app-set-location-in-map>\r\n</ion-content>","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\nimport { DamagePage } from './damage.page';\r\nimport { SharedComponentsModule } from '../../../shared-components.module';\r\nimport { DamageObsComponent } from '../../../components/damage-obs/damage-obs.component';\r\nimport { SetDamageLocationPageModule } from '../../set-damage-location/set-damage-location.module';\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: '',\r\n    component: DamagePage\r\n  }\r\n];\r\n\r\n@NgModule({\r\n  imports: [\r\n    SharedComponentsModule,\r\n    SetDamageLocationPageModule,\r\n    RouterModule.forChild(routes)\r\n  ],\r\n  declarations: [DamagePage, DamageObsComponent]\r\n})\r\nexport class DamagePageModule {}\r\n","import { Component, NgZone } from '@angular/core';\r\nimport { BasePage } from '../../base.page';\r\nimport { RegistrationTid } from 'src/app/modules/common-registration/registration.models';\r\nimport { KdvService } from '../../../../../core/services/kdv/kdv.service';\r\nimport { GeoHazard } from '@varsom-regobs-common/core';\r\nimport { KdvElement } from '@varsom-regobs-common/regobs-api';\r\nimport { BasePageService } from '../../base-page-service';\r\nimport { ActivatedRoute } from '@angular/router';\r\nimport { Subscription } from 'rxjs';\r\nimport { map } from 'rxjs/operators';\r\n\r\nconst NO_DAMAGE_VISIBLE = 7;\r\n\r\n@Component({\r\n  selector: 'app-damage',\r\n  templateUrl: './damage.page.html',\r\n  styleUrls: ['./damage.page.scss']\r\n})\r\nexport class DamagePage extends BasePage {\r\n  damageTypes: KdvElement[];\r\n  checked: boolean;\r\n\r\n  get isChecked() {\r\n    if (\r\n      !this.registration ||\r\n      !this.registration.request ||\r\n      !this.registration.request.DamageObs ||\r\n      this.registration.request.DamageObs.length === 0\r\n    ) {\r\n      return this.checked;\r\n    }\r\n    return (\r\n      this.registration &&\r\n      this.registration.request.DamageObs.filter(\r\n        (x) => x.DamageTypeTID !== NO_DAMAGE_VISIBLE\r\n      ).length > 0\r\n    );\r\n  }\r\n\r\n  set isChecked(val: boolean) {\r\n    this.checked = val;\r\n    if (val === false) {\r\n      this.registration.request.DamageObs = [\r\n        {\r\n          DamageTypeTID: NO_DAMAGE_VISIBLE\r\n        }\r\n      ];\r\n    } else {\r\n      this.registration.request.DamageObs = this.registration.request.DamageObs.filter(\r\n        (x) => x.DamageTypeTID !== NO_DAMAGE_VISIBLE\r\n      );\r\n    }\r\n  }\r\n\r\n  private kdvSubscription: Subscription;\r\n\r\n  constructor(\r\n    basePageService: BasePageService,\r\n    activatedRoute: ActivatedRoute,\r\n    private kdvService: KdvService,\r\n    private ngZone: NgZone\r\n  ) {\r\n    super(RegistrationTid.DamageObs, basePageService, activatedRoute);\r\n  }\r\n\r\n  onInit() {\r\n    const geoHazardName = GeoHazard[this.registration.geoHazard];\r\n    this.kdvSubscription = this.kdvService\r\n      .getKdvRepositoryByKeyObservable(`${geoHazardName}_DamageTypeKDV`)\r\n      .pipe(map((val) => val.filter((x) => x.Id !== NO_DAMAGE_VISIBLE)))\r\n      .subscribe((kdvElements) => {\r\n        this.ngZone.run(() => {\r\n          this.damageTypes = kdvElements;\r\n        });\r\n      });\r\n  }\r\n\r\n  onBeforeLeave() {\r\n    if (this.kdvSubscription) {\r\n      this.kdvSubscription.unsubscribe();\r\n    }\r\n  }\r\n}\r\n","<ion-header>\r\n  <ion-toolbar appHeaderColor mode=\"ios\">\r\n    <ion-buttons slot=\"start\">\r\n      <ion-back-button text=\"\" defaultHref=\"/\"></ion-back-button>\r\n    </ion-buttons>\r\n    <ion-title>\r\n      {{'REGISTRATION.WATER.DAMAGE.TITLE' | translate}}\r\n    </ion-title>\r\n  </ion-toolbar>\r\n</ion-header>\r\n<ion-content>\r\n  <app-registration-content-wrapper *ngIf=\"registration\" [registration]=\"registration\"\r\n    [registrationTid]=\"registrationTid\" (reset)=\"reset()\">\r\n    <ion-list lines=\"full\">\r\n      <ion-list-header class=\"ion-text-uppercase\">\r\n        <ion-label>\r\n          {{ 'REGISTRATION.WATER.DAMAGE.CAN_YOU_SEE_DAMAGE' | translate}}\r\n        </ion-label>\r\n      </ion-list-header>\r\n      <ion-radio-group [(ngModel)]=\"isChecked\">\r\n        <ion-item [ngClass]=\"{'selected': checked === true}\" (click)=\"isChecked = true\">\r\n          <ion-label>{{ 'DIALOGS.YES' | translate }}</ion-label>\r\n          <ion-radio mode=\"md\" slot=\"start\" [value]=\"true\"></ion-radio>\r\n        </ion-item>\r\n        <ion-item [ngClass]=\"{'selected': checked === false}\" (click)=\"isChecked = false\">\r\n          <ion-label>{{ 'DIALOGS.NO' | translate }}</ion-label>\r\n          <ion-radio mode=\"md\" slot=\"start\" [value]=\"false\"></ion-radio>\r\n        </ion-item>\r\n      </ion-radio-group>\r\n      <ng-container *ngIf=\"isChecked && damageTypes\">\r\n        <ion-list-header class=\"ion-text-uppercase\">\r\n          <ion-label>\r\n            {{ 'REGISTRATION.WATER.DAMAGE.WHAT_IS_DAMAGED' | translate }}\r\n          </ion-label>\r\n        </ion-list-header>\r\n        <app-damage-obs *ngFor=\"let damageType of damageTypes\" [(registration)]=\"registration\"\r\n          [damageTypeId]=\"damageType.Id\" [damageTypeName]=\"damageType.Name\" [registrationTid]=\"registrationTid\">\r\n        </app-damage-obs>\r\n      </ng-container>\r\n    </ion-list>\r\n  </app-registration-content-wrapper>\r\n</ion-content>"],"names":[],"sourceRoot":"webpack:///"}