{"version":3,"file":"src_app_modules_registration_pages_water_water-level_water-level_module_ts-es2015.js","mappings":"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","sources":["./src/app/modules/registration/components/water/water-level-measurement/water-level-measurement.component.ts","./src/app/modules/registration/components/water/water-level-measurement/water-level-measurement.component.html","./src/app/modules/registration/pages/base-page-service.ts","./src/app/modules/registration/pages/base.page.ts","./src/app/modules/registration/pages/water/water-level/water-level.module.ts","./src/app/modules/registration/pages/water/water-level/water-level.page.ts","./src/app/modules/registration/pages/water/water-level/water-level.page.html"],"sourcesContent":["import { Component, OnInit, Input, Output, EventEmitter } from '@angular/core';\r\nimport { WaterLevelMeasurementEditModel } from '@varsom-regobs-common/regobs-api';\r\nimport moment from 'moment';\r\nimport { RegistrationTid } from 'src/app/modules/common-registration/registration.models';\r\nimport { GeoHazard, isEmpty } from '@varsom-regobs-common/core';\r\n\r\n@Component({\r\n  selector: 'app-water-level-measurement',\r\n  templateUrl: './water-level-measurement.component.html',\r\n  styleUrls: ['./water-level-measurement.component.scss']\r\n})\r\nexport class WaterLevelMeasurementComponent implements OnInit {\r\n  @Input() measurementNumber: number;\r\n  @Input() waterLevelMethod: number;\r\n  @Input() registrationTid: RegistrationTid;\r\n  @Input() registrationId: string;\r\n  @Input() geoHazard: GeoHazard;\r\n  @Input() dtObsTime: string;\r\n  @Input() waterLevelMeasurement: WaterLevelMeasurementEditModel;\r\n  @Output() waterLevelMeasurementChange = new EventEmitter();\r\n  maxDate: string;\r\n  showDtMeasurementTimeError = false;\r\n\r\n  get dateIsDifferentThanObsTime() {\r\n    return (\r\n      this.waterLevelMeasurement.DtMeasurementTime &&\r\n      !moment(this.waterLevelMeasurement.DtMeasurementTime)\r\n        .startOf('day')\r\n        .isSame(moment(this.dtObsTime).startOf('day'))\r\n    );\r\n  }\r\n\r\n  get isValid() {\r\n    if (isEmpty(this.waterLevelMeasurement)) {\r\n      return true;\r\n    }\r\n    return this.waterLevelMeasurement.DtMeasurementTime;\r\n  }\r\n\r\n  constructor() {}\r\n\r\n  ngOnInit() {\r\n    this.maxDate = this.getMaxDateForNow();\r\n    if (!this.waterLevelMeasurement.Attachments) {\r\n      this.waterLevelMeasurement.Attachments = [];\r\n    }\r\n  }\r\n\r\n  getMaxDateForNow() {\r\n    // There is an issue when setting max date that when changing hour, the minutes is still max minutes.\r\n    // Workaround is to set minutes to 59.\r\n    return moment().minutes(59).toISOString(true);\r\n  }\r\n\r\n  setToNow() {\r\n    const now = moment().toISOString(true);\r\n    this.maxDate = this.getMaxDateForNow();\r\n    this.waterLevelMeasurement.DtMeasurementTime = now;\r\n  }\r\n\r\n  showError() {\r\n    if (\r\n      !isEmpty(this.waterLevelMeasurement) &&\r\n      !this.waterLevelMeasurement.DtMeasurementTime\r\n    ) {\r\n      this.showDtMeasurementTimeError = true;\r\n    } else {\r\n      this.showDtMeasurementTimeError = false;\r\n    }\r\n  }\r\n\r\n  dtChanged() {\r\n    this.showError();\r\n  }\r\n\r\n  // triggerChange() {\r\n  //   this.waterLevelMeasurementChange.emit(this.waterLevelMeasurement);\r\n  // }\r\n}\r\n","<ion-list-header>\r\n  <ion-label>\r\n    {{ (waterLevelMethod === 1 ? 'REGISTRATION.WATER.WATER_LEVEL.MARKING' :\r\n    'REGISTRATION.WATER.WATER_LEVEL.MEASURING') |\r\n    translate }} {{ measurementNumber }}\r\n  </ion-label>\r\n</ion-list-header>\r\n<app-numeric-input *ngIf=\"waterLevelMethod === 2\" [(value)]=\"waterLevelMeasurement.WaterLevelValue\"\r\n  title=\"REGISTRATION.WATER.WATER_LEVEL.WATER_LEVEL_METERS\" [min]=\"0\" [max]=\"8848\" [decimalPlaces]=\"3\" suffix=\"m\">\r\n</app-numeric-input>\r\n<ion-item [ngClass]=\"{'hasWarning': dateIsDifferentThanObsTime}\">\r\n  <ion-label color=\"medium\" position=\"stacked\" class=\"ion-text-uppercase\">\r\n    {{ 'REGISTRATION.SET_TIME.TITLE' | translate }}\r\n  </ion-label>\r\n  <ion-datetime (ionChange)=\"dtChanged()\" color=\"medium\" monthShortNames=\"{{ 'MONTHS.SHORT_LIST' | translate }}\"\r\n    doneText=\"{{'DIALOGS.OK' | translate}}\" cancelText=\"{{'DIALOGS.CANCEL' | translate}}\"\r\n    display-format=\"D. MMM, YYYY HH:mm\" [(ngModel)]=\"waterLevelMeasurement.DtMeasurementTime\" [max]=\"maxDate\">\r\n  </ion-datetime>\r\n  <ion-button class=\"set-to-now-button\" slot=\"end\" fill=\"outline\" color=\"medium\" (click)=\"setToNow()\">\r\n    <ion-icon slot=\"start\" name=\"time\"></ion-icon> {{\"REGISTRATION.SET_TIME.NOW\" | translate}}\r\n  </ion-button>\r\n</ion-item>\r\n<ion-item *ngIf=\"dateIsDifferentThanObsTime\">\r\n  <ion-label color=\"danger\" class=\"ion-text-wrap\">\r\n    {{'ALERT.WARNING' | translate}}! {{'REGISTRATION.SNOW.AVALANCHE_ACTIVITY.DATE_WARNING' | translate}}\r\n  </ion-label>\r\n</ion-item>\r\n<ion-item *ngIf=\"showDtMeasurementTimeError\">\r\n  <ion-label color=\"danger\" class=\"ion-text-wrap\">\r\n    {{'REGISTRATION.WATER.WATER_LEVEL.DT_REQUIRED_TEXT' | translate}}\r\n  </ion-label>\r\n</ion-item>\r\n<app-add-picture-item iconColor=\"primary\" icon=\"add-circle-outline\" title=\"{{ 'REGISTRATION.WATER.WATER_LEVEL.ADD_PICTURE' | translate }} {{ (waterLevelMethod === 1 ? 'REGISTRATION.WATER.WATER_LEVEL.MARKING_PLURAL' :\r\n'REGISTRATION.WATER.WATER_LEVEL.MEASURE_PLURAL') | translate | lowercase }}\"\r\n    [registrationTid]=\"registrationTid\"\r\n    [geoHazard]=\"geoHazard\" [registrationId]=\"registrationId\" \r\n    [ref]=\"waterLevelMeasurement.WaterLevelMeasurementId\"\r\n    [attachmentType]=\"'WaterLevelMeasurementAttachment'\">\r\n</app-add-picture-item>\r\n<app-text-comment [(value)]=\"waterLevelMeasurement.Comment\" placeholder=\"{{'REGISTRATION.WATER.WATER_LEVEL.DESCRIBE' | translate }} {{ (waterLevelMethod === 1 ? 'REGISTRATION.WATER.WATER_LEVEL.MARKING_PLURAL' :\r\n'REGISTRATION.WATER.WATER_LEVEL.MEASURE_PLURAL') | translate | lowercase }}\"></app-text-comment>","import { Injectable, NgZone } from '@angular/core';\r\nimport { IRegistration, RegistrationTid } from 'src/app/modules/common-registration/registration.models';\r\nimport { getPropertyName, isArrayType } from 'src/app/modules/common-registration/registration.helpers';\r\nimport { NewAttachmentService, RegistrationService as CommonRegistrationService } from 'src/app/modules/common-registration/registration.services';\r\nimport { RegistrationService } from '../services/registration.service';\r\nimport { AlertController } from '@ionic/angular';\r\nimport { TranslateService } from '@ngx-translate/core';\r\nimport { switchMap } from 'rxjs/operators';\r\nimport { forkJoin } from 'rxjs';\r\nimport { LoggingService } from '../../shared/services/logging/logging.service';\r\n\r\nconst DEBUG_TAG = 'BasePageService';\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class BasePageService {\r\n  get Zone() {\r\n    return this.ngZone;\r\n  }\r\n\r\n  get RegistrationService() {\r\n    return this.registrationService;\r\n  }\r\n\r\n  get AlertController() {\r\n    return this.alertController;\r\n  }\r\n\r\n  get TranslateService() {\r\n    return this.translateService;\r\n  }\r\n\r\n  get CommonRegistrationService() {\r\n    return this.commonRegistrationService;\r\n  }\r\n\r\n  constructor(\r\n    private registrationService: RegistrationService,\r\n    private newAttachmentService: NewAttachmentService,\r\n    private commonRegistrationService: CommonRegistrationService,\r\n    private ngZone: NgZone,\r\n    private alertController: AlertController,\r\n    private translateService: TranslateService,\r\n    private loggingService: LoggingService\r\n  ) {}\r\n\r\n  async confirmLeave(registration: IRegistration, registrationTid: RegistrationTid, onReset?: () => void) {\r\n    const leaveText = await this.translateService.get('REGISTRATION.REQUIRED_FIELDS_MISSING').toPromise();\r\n    return this.createResetDialog(leaveText, registration, registrationTid, onReset);\r\n  }\r\n\r\n  async confirmReset(registration: IRegistration, registrationTid: RegistrationTid, onReset?: () => void) {\r\n    const leaveText = await this.translateService.get('REGISTRATION.CONFIRM_RESET').toPromise();\r\n    return this.createResetDialog(leaveText, registration, registrationTid, onReset);\r\n  }\r\n\r\n  private async createResetDialog(message: string, registration: IRegistration, registrationTid: RegistrationTid, onReset?: () => void) {\r\n    const translations = await this.translateService.get(['DIALOGS.CANCEL', 'DIALOGS.YES']).toPromise();\r\n    const alert = await this.alertController.create({\r\n      message,\r\n      buttons: [\r\n        {\r\n          text: translations['DIALOGS.CANCEL'],\r\n          role: 'cancel'\r\n        },\r\n        {\r\n          text: translations['DIALOGS.YES']\r\n        }\r\n      ]\r\n    });\r\n    await alert.present();\r\n    const result = await alert.onDidDismiss();\r\n    const reset: boolean = result.role !== 'cancel';\r\n    if (reset) {\r\n      await this.reset(registration, registrationTid, onReset);\r\n    }\r\n    return reset;\r\n  }\r\n\r\n  async reset(registration: IRegistration, registrationTid: RegistrationTid, onReset?: () => void) {\r\n    this.Zone.run(() => {\r\n      if (registrationTid) {\r\n        registration.request[getPropertyName(registrationTid)] = this.getDefaultValue(registrationTid);\r\n        this.resetImages(registration);\r\n      }\r\n      if (onReset) {\r\n        onReset();\r\n      }\r\n    });\r\n    await this.registrationService.saveRegistrationAsync(registration);\r\n  }\r\n\r\n  createDefaultProps(registration: IRegistration, registrationTid: RegistrationTid) {\r\n    const propName = getPropertyName(registrationTid);\r\n    if (!registration.request[propName]) {\r\n      // Init to new object if null\r\n      registration.request[propName] = this.getDefaultValue(registrationTid);\r\n    }\r\n  }\r\n\r\n  getDefaultValue(registrationTid: RegistrationTid) {\r\n    if (isArrayType(registrationTid)) {\r\n      return [];\r\n    } else {\r\n      return {};\r\n    }\r\n  }\r\n\r\n  resetImages(registration: IRegistration) {\r\n    this.newAttachmentService\r\n      .getAttachments(registration.id)\r\n      .pipe(switchMap((attachments) => forkJoin(attachments.map((a) => this.newAttachmentService.removeAttachment(registration.id, a.id)))))\r\n      .subscribe(\r\n        () => {\r\n          this.loggingService.debug('Reset images complete', DEBUG_TAG);\r\n        },\r\n        (error) => {\r\n          this.loggingService.error(error, DEBUG_TAG, 'Could not reset images');\r\n        }\r\n      );\r\n  }\r\n}\r\n","import { Directive, OnInit } from '@angular/core';\r\nimport { from, of } from 'rxjs';\r\nimport { BasePageService } from './base-page-service';\r\nimport { IRegistration, RegistrationTid, SyncStatus } from 'src/app/modules/common-registration/registration.models';\r\nimport { ActivatedRoute } from '@angular/router';\r\nimport { take, takeUntil, map, switchMap, tap } from 'rxjs/operators';\r\nimport { NgDestoryBase } from '../../../core/helpers/observable-helper';\r\n\r\n@Directive()\r\nexport abstract class BasePage extends NgDestoryBase implements OnInit {\r\n  registration: IRegistration;\r\n  basePageService: BasePageService;\r\n  registrationTid: RegistrationTid;\r\n  activatedRoute: ActivatedRoute;\r\n\r\n  constructor(registrationTid: RegistrationTid, basePageService: BasePageService, activatedRoute: ActivatedRoute) {\r\n    super();\r\n    this.basePageService = basePageService;\r\n    this.activatedRoute = activatedRoute;\r\n    this.registrationTid = registrationTid;\r\n  }\r\n\r\n  ngOnInit() {}\r\n\r\n  ionViewDidEnter() {\r\n    const id = this.activatedRoute.snapshot.params['id'];\r\n    this.basePageService.CommonRegistrationService.getRegistrationByIdShared$(id)\r\n      .pipe(\r\n        take(1),\r\n        map((reg) => {\r\n          this.basePageService.createDefaultProps(reg, this.registrationTid);\r\n          return reg;\r\n        }),\r\n        tap((reg) => {\r\n          this.registration = reg;\r\n        }),\r\n        switchMap(() => this.createInitObservable()),\r\n        takeUntil(this.ngDestroy$)\r\n      )\r\n      .subscribe();\r\n  }\r\n\r\n  onInit?(): void | Promise<any>;\r\n\r\n  onBeforeLeave?(): void | Promise<any>;\r\n\r\n  onReset?(): void;\r\n\r\n  isValid?(): boolean | Promise<boolean>;\r\n\r\n  // NOTE: Remember to add canDeactivate: [CanDeactivateRouteGuard] in page module\r\n  async canLeave() {\r\n    // Check if implementation page has implemented custom isValid logic\r\n    const valid = await Promise.resolve(this.isValid ? this.isValid() : true);\r\n    // Only return alert if page is not empty and invalid\r\n    const isEmpty = await Promise.resolve(this.isEmpty());\r\n    if (!isEmpty && !valid) {\r\n      return this.basePageService.confirmLeave(this.registration, this.registrationTid, () => (this.onReset ? this.onReset() : null));\r\n    }\r\n    return true;\r\n  }\r\n\r\n  private createInitObservable() {\r\n    if (this.onInit) {\r\n      return from(Promise.resolve(this.onInit()));\r\n    }\r\n    return of({});\r\n  }\r\n\r\n  async ionViewWillLeave() {\r\n    if (this.onBeforeLeave) {\r\n      await Promise.resolve(this.onBeforeLeave());\r\n    }\r\n    await this.save(true);\r\n  }\r\n\r\n  save(clean = false) {\r\n    this.registration.syncStatus = SyncStatus.Draft;\r\n    return this.basePageService.RegistrationService.saveRegistrationAsync(this.registration, clean);\r\n  }\r\n\r\n  getSaveFunc() {\r\n    return () => this.save();\r\n  }\r\n\r\n  async isEmpty(): Promise<boolean> {\r\n    return !(await this.basePageService.CommonRegistrationService.hasAnyDataToShowInRegistrationTypes(\r\n      this.registration,\r\n      this.registrationTid\r\n    )\r\n      .pipe(take(1))\r\n      .toPromise());\r\n  }\r\n\r\n  reset() {\r\n    return this.basePageService.confirmReset(this.registration, this.registrationTid, () => (this.onReset ? this.onReset() : null));\r\n  }\r\n\r\n  getResolvedUrl(): string {\r\n    return (\r\n      '/' +\r\n      this.activatedRoute.snapshot.pathFromRoot\r\n        .map((v) => v.url.map((segment) => segment.toString()).join('/'))\r\n        .filter((path) => !!path)\r\n        .join('/')\r\n    );\r\n  }\r\n\r\n  // getConfiguredUrl(): string {\r\n  //     return '/' + this.activatedRoute.snapshot.pathFromRoot\r\n  //         .filter(v => v.routeConfig)\r\n  //         .map(v => v.routeConfig.path)\r\n  //         .join('/');\r\n  // }\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\nimport { WaterLevelPage } from './water-level.page';\r\nimport { SharedComponentsModule } from '../../../shared-components.module';\r\nimport { WaterLevelMeasurementComponent } from '../../../components/water/water-level-measurement/water-level-measurement.component';\r\nimport { CanDeactivateRouteGuard } from '../../can-deactivate-route.guard';\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: '',\r\n    component: WaterLevelPage,\r\n    canDeactivate: [CanDeactivateRouteGuard]\r\n  }\r\n];\r\n\r\n@NgModule({\r\n  imports: [SharedComponentsModule, RouterModule.forChild(routes)],\r\n  declarations: [WaterLevelPage, WaterLevelMeasurementComponent]\r\n})\r\nexport class WaterLevelPageModule {}\r\n","import { Component, QueryList, ViewChildren } from '@angular/core';\r\nimport { BasePage } from '../../base.page';\r\nimport { RegistrationTid } from 'src/app/modules/common-registration/registration.models';\r\nimport { IsEmptyHelper } from '../../../../../core/helpers/is-empty.helper';\r\nimport { BasePageService } from '../../base-page-service';\r\nimport { ActivatedRoute } from '@angular/router';\r\nimport { WaterLevelMeasurementComponent } from '../../../components/water/water-level-measurement/water-level-measurement.component';\r\n\r\n@Component({\r\n  selector: 'app-water-level',\r\n  templateUrl: './water-level.page.html',\r\n  styleUrls: ['./water-level.page.scss']\r\n})\r\nexport class WaterLevelPage extends BasePage {\r\n  @ViewChildren(WaterLevelMeasurementComponent)\r\n  private waterLevelMeasurements: QueryList<WaterLevelMeasurementComponent>;\r\n\r\n  constructor(\r\n    basePageService: BasePageService,\r\n    activatedRoute: ActivatedRoute\r\n  ) {\r\n    super(RegistrationTid.WaterLevel2, basePageService, activatedRoute);\r\n  }\r\n\r\n  onInit() {\r\n    if (\r\n      !this.registration.request.WaterLevel2.WaterLevelMeasurement ||\r\n      this.registration.request.WaterLevel2.WaterLevelMeasurement.length === 0\r\n    ) {\r\n      this.registration.request.WaterLevel2.WaterLevelMeasurement = [\r\n        { DtMeasurementTime: undefined }\r\n      ];\r\n    }\r\n  }\r\n\r\n  onReset() {\r\n    this.registration.request.WaterLevel2.WaterLevelMeasurement = [\r\n      { DtMeasurementTime: undefined }\r\n    ];\r\n  }\r\n\r\n  addWaterLevelMeasurement() {\r\n    this.registration.request.WaterLevel2.WaterLevelMeasurement.push({\r\n      DtMeasurementTime: undefined\r\n    });\r\n    this.save();\r\n  }\r\n\r\n  onBeforeLeave() {\r\n    // Cleanup\r\n    if (this.registration.request.WaterLevel2.WaterLevelMethodTID === 2) {\r\n      this.registration.request.WaterLevel2.MarkingReferenceTID = null;\r\n    }\r\n    if (this.registration.request.WaterLevel2.MeasurementTypeTID !== 3) {\r\n      this.registration.request.WaterLevel2.MeasuringToolDescription = undefined;\r\n    }\r\n    if (\r\n      !(\r\n        this.registration.request.WaterLevel2.WaterLevelMethodTID === 1 ||\r\n        this.registration.request.WaterLevel2.MeasurementTypeTID === 1\r\n      )\r\n    ) {\r\n      this.registration.request.WaterLevel2.Comment = undefined;\r\n    }\r\n    this.registration.request.WaterLevel2.WaterLevelMeasurement = (\r\n      this.registration.request.WaterLevel2.WaterLevelMeasurement || []\r\n    ).filter((item) => !IsEmptyHelper.isEmpty(item));\r\n  }\r\n\r\n  isValid() {\r\n    for (const wl of this.waterLevelMeasurements.toArray()) {\r\n      wl.showError();\r\n    }\r\n    return (\r\n      this.waterLevelMeasurements &&\r\n      !this.waterLevelMeasurements.some((x) => !x.isValid)\r\n    );\r\n  }\r\n}\r\n","<ion-header>\r\n  <ion-toolbar appHeaderColor mode=\"ios\">\r\n    <ion-buttons slot=\"start\">\r\n      <ion-back-button text=\"\" defaultHref=\"/\"></ion-back-button>\r\n    </ion-buttons>\r\n    <ion-title>\r\n      {{'REGISTRATION.WATER.WATER_LEVEL.TITLE' | translate}}\r\n    </ion-title>\r\n  </ion-toolbar>\r\n</ion-header>\r\n<ion-content>\r\n  <app-registration-content-wrapper *ngIf=\"registration && registration.request.WaterLevel2\"\r\n    [registration]=\"registration\" [registrationTid]=\"registrationTid\" (reset)=\"reset()\">\r\n    <ion-list lines=\"full\">\r\n      <app-kdv-radiobutton-list title=\"REGISTRATION.WATER.WATER_LEVEL.DESCRIBE_SITUATION\"\r\n        kdvKey=\"Water_WaterLevelStateKDV\" [(value)]=\"registration.request.WaterLevel2.WaterLevelStateTID\">\r\n      </app-kdv-radiobutton-list>\r\n      <app-kdv-radiobutton-list title=\"REGISTRATION.WATER.WATER_LEVEL.CAN_YOU_SEE_WATER\" kdvKey=\"Water_WaterAstrayKDV\"\r\n        [(value)]=\"registration.request.WaterLevel2.WaterAstrayTID\"></app-kdv-radiobutton-list>\r\n      <app-kdv-radiobutton-list title=\"REGISTRATION.WATER.WATER_LEVEL.OBSERVATION_TIMING\"\r\n        kdvKey=\"Water_ObservationTimingKDV\" [(value)]=\"registration.request.WaterLevel2.ObservationTimingTID\">\r\n      </app-kdv-radiobutton-list>\r\n      <app-kdv-radiobutton-list title=\"REGISTRATION.WATER.WATER_LEVEL.REGISTRATION_METHOD\"\r\n        kdvKey=\"Water_WaterLevelMethodKDV\" [(value)]=\"registration.request.WaterLevel2.WaterLevelMethodTID\">\r\n      </app-kdv-radiobutton-list>\r\n      <app-kdv-radiobutton-list *ngIf=\"registration.request.WaterLevel2.WaterLevelMethodTID === 1\"\r\n        title=\"REGISTRATION.WATER.WATER_LEVEL.MARKING_REFERENCE\" kdvKey=\"Water_MarkingReferenceKDV\"\r\n        [(value)]=\"registration.request.WaterLevel2.MarkingReferenceTID\">\r\n        <app-text-comment [(value)]=\"registration.request.WaterLevel2.Comment\"\r\n          title=\"{{ 'REGISTRATION.WATER.WATER_LEVEL.DESCRIBE' | translate | uppercase  }} {{ 'REGISTRATION.WATER.WATER_LEVEL.MARKING_PLURAL' | translate | uppercase  }}\">\r\n        </app-text-comment>\r\n      </app-kdv-radiobutton-list>\r\n      <app-kdv-radiobutton-list *ngIf=\"registration.request.WaterLevel2.WaterLevelMethodTID === 1\"\r\n        title=\"REGISTRATION.WATER.WATER_LEVEL.MARKED_WITH\" kdvKey=\"Water_MarkingTypeKDV\"\r\n        [(value)]=\"registration.request.WaterLevel2.MarkingTypeTID\"></app-kdv-radiobutton-list>\r\n      <app-kdv-radiobutton-list *ngIf=\"registration.request.WaterLevel2.WaterLevelMethodTID === 2\"\r\n        title=\"REGISTRATION.WATER.WATER_LEVEL.HOW_DO_YOU_READ\" kdvKey=\"Water_MeasurementTypeKDV\"\r\n        [(value)]=\"registration.request.WaterLevel2.MeasurementTypeTID\">\r\n        <app-text-comment *ngIf=\"registration.request.WaterLevel2.MeasurementTypeTID === 3\"\r\n          [(value)]=\"registration.request.WaterLevel2.MeasuringToolDescription\"\r\n          title=\"REGISTRATION.WATER.WATER_LEVEL.MEASURING_TOOL\"></app-text-comment>\r\n      </app-kdv-radiobutton-list>\r\n      <app-kdv-radiobutton-list *ngIf=\"registration.request.WaterLevel2.MeasurementTypeTID === 1\"\r\n        title=\"REGISTRATION.WATER.WATER_LEVEL.RELATIVE\" kdvKey=\"Water_MeasurementReferenceKDV\"\r\n        [(value)]=\"registration.request.WaterLevel2.MeasurementReferenceTID\">\r\n        <app-text-comment [(value)]=\"registration.request.WaterLevel2.Comment\"\r\n          title=\"REGISTRATION.WATER.WATER_LEVEL.DESCRIBE_HEIGHT\"></app-text-comment>\r\n      </app-kdv-radiobutton-list>\r\n    </ion-list>\r\n    <ng-container *ngIf=\"registration.request.WaterLevel2.WaterLevelMethodTID\">\r\n      <ion-list lines=\"full\">\r\n        <app-water-level-measurement [measurementNumber]=\"i+1\"\r\n          [waterLevelMethod]=\"registration.request.WaterLevel2.WaterLevelMethodTID\"\r\n          [(waterLevelMeasurement)]=\"registration.request.WaterLevel2.WaterLevelMeasurement[i]\"\r\n          [registrationTid]=\"registrationTid\" [dtObsTime]=\"registration.request.DtObsTime\"\r\n          [registrationId]=\"registration.id\" [geoHazard]=\"registration.geoHazard\"\r\n          (waterLevelMeasurementChange)=\"save()\"\r\n          *ngFor=\"let measurement of registration.request.WaterLevel2.WaterLevelMeasurement; let i = index\">\r\n        </app-water-level-measurement>\r\n      </ion-list>\r\n      <ion-list class=\"ion-margin-top\" lines=\"full\">\r\n        <ion-item (click)=\"addWaterLevelMeasurement()\">\r\n          <ion-icon slot=\"start\" color=\"primary\" name=\"add-circle\"></ion-icon>\r\n          <ion-label>{{'REGISTRATION.WATER.WATER_LEVEL.ADD_NEW' | translate}}\r\n            {{(registration.request.WaterLevel2.WaterLevelMethodTID === 1 ?\r\n            'REGISTRATION.WATER.WATER_LEVEL.WATER_MARKING':\r\n            'REGISTRATION.WATER.WATER_LEVEL.WATER_MEASUREMENT') | translate | lowercase }}</ion-label>\r\n        </ion-item>\r\n      </ion-list>\r\n    </ng-container>\r\n  </app-registration-content-wrapper>\r\n</ion-content>"],"names":[],"sourceRoot":"webpack:///"}