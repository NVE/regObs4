{"version":3,"mappings":"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","names":["routes","path","component","_landslide_obs_page__WEBPACK_IMPORTED_MODULE_1__","canDeactivate","_can_deactivate_route_guard__WEBPACK_IMPORTED_MODULE_2__","LandslideObsPageModule","_shared_components_module__WEBPACK_IMPORTED_MODULE_0__","_add_web_url_modal_add_web_url_modal_module__WEBPACK_IMPORTED_MODULE_3__","_set_avalanche_position_set_avalanche_position_module__WEBPACK_IMPORTED_MODULE_4__","_angular_router__WEBPACK_IMPORTED_MODULE_6__","declarations","imports","_angular_core__WEBPACK_IMPORTED_MODULE_12__","ctx_r0","_r1","LandslideObsPage","basePageService","activatedRoute","modalController","src_app_modules_common_registration_registration_models__WEBPACK_IMPORTED_MODULE_1__","registration","request","LandSlideObs","DtLandSlideTime","moment__WEBPACK_IMPORTED_MODULE_5___default","startOf","isSame","DtObsTime","DtLandSlideTimeEnd","Urls","maxDateStart","toISOString","getMaxDateForNow","minDateEnd","maxDateEnd","isBefore","isAfter","relativeToLatLng","ObsLocation","leaflet__WEBPACK_IMPORTED_MODULE_3__","Latitude","Longitude","startLatLng","StartLat","StartLong","endLatLng","StopLat","StopLong","create","_set_avalanche_position_set_avalanche_position_page__WEBPACK_IMPORTED_MODULE_2__","componentProps","geoHazard","modal","present","onDidDismiss","result","data","start","end","lat","lng","_base_page__WEBPACK_IMPORTED_MODULE_0__","selectors","features","decls","vars","consts","template"],"sources":["webpack:///src/app/modules/registration/pages/dirt/landslide-obs/landslide-obs.module.ts","webpack:///src/app/modules/registration/pages/dirt/landslide-obs/landslide-obs.page.html","webpack:///src/app/modules/registration/pages/dirt/landslide-obs/landslide-obs.page.ts"],"sourcesContent":["import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\nimport { SharedComponentsModule } from '../../../shared-components.module';\r\nimport { LandslideObsPage } from './landslide-obs.page';\r\nimport { CanDeactivateRouteGuard } from '../../can-deactivate-route.guard';\r\nimport { AddWebUrlModalPageModule } from '../../add-web-url-modal/add-web-url-modal.module';\r\nimport { SetAvalanchePositionPageModule } from '../../set-avalanche-position/set-avalanche-position.module';\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: '',\r\n    component: LandslideObsPage,\r\n    canDeactivate: [CanDeactivateRouteGuard]\r\n  }\r\n];\r\n\r\n@NgModule({\r\n  imports: [\r\n    SharedComponentsModule,\r\n    AddWebUrlModalPageModule,\r\n    SetAvalanchePositionPageModule,\r\n    RouterModule.forChild(routes)\r\n  ],\r\n  declarations: [LandslideObsPage]\r\n})\r\nexport class LandslideObsPageModule {}\r\n","<ion-header>\r\n  <ion-toolbar appHeaderColor mode=\"ios\">\r\n    <ion-buttons slot=\"start\">\r\n      <ion-back-button text=\"\" defaultHref=\"/\"></ion-back-button>\r\n    </ion-buttons>\r\n    <ion-title>\r\n      {{'REGISTRATION.DIRT.LAND_SLIDE_OBS.TITLE' | translate}}\r\n    </ion-title>\r\n  </ion-toolbar>\r\n</ion-header>\r\n\r\n<ion-content>\r\n  <app-registration-content-wrapper *ngIf=\"registration && registration.request.LandSlideObs\"\r\n    [registration]=\"registration\" [registrationTid]=\"registrationTid\" (reset)=\"reset()\">\r\n    <ion-list lines=\"full\">\r\n      <ion-list-header class=\"ion-text-uppercase\">\r\n        <ion-label>\r\n          {{ 'REGISTRATION.DIRT.LAND_SLIDE_OBS.TITLE' | translate}}\r\n        </ion-label>\r\n      </ion-list-header>\r\n      <ion-item (click)=\"setLandslidePosition()\">\r\n        <ion-label color=\"medium\" position=\"stacked\" class=\"ion-text-uppercase\">{{'REGISTRATION.DIRT.LAND_SLIDE_OBS.POSITION' |\r\n              translate}}</ion-label>\r\n        <ion-text class=\"ion-align-self-start ion-text-wrap\">\r\n          <ion-icon class=\"position-pin\" color=\"medium\" name=\"location\"></ion-icon>\r\n          <ng-container *ngIf=\"registration.request.LandSlideObs.StartLat else noPosition\">\r\n            {{ registration.request.LandSlideObs.StartLat |\r\n                          number:'0.3'\r\n                          }}&deg;{{'MAP_CENTER_INFO.NORTH_SHORT'|translate}},\r\n            {{ registration.request.LandSlideObs.StartLong | number:'0.3'\r\n                          }}&deg;{{'MAP_CENTER_INFO.EAST_SHORT'|translate}} - {{ registration.request.LandSlideObs.StopLat |\r\n                          number:'0.3'\r\n                          }}&deg;{{'MAP_CENTER_INFO.NORTH_SHORT'|translate}},\r\n            {{ registration.request.LandSlideObs.StopLong | number:'0.3'\r\n                          }}&deg;{{'MAP_CENTER_INFO.EAST_SHORT'|translate}}\r\n          </ng-container>\r\n        </ion-text>\r\n        <ion-icon slot=\"end\" class=\"item-detail-icon\" name=\"chevron-forward\">\r\n        </ion-icon>\r\n      </ion-item>\r\n      <ion-item [ngClass]=\"{'hasWarning': dateIsDifferentThanObsTime}\">\r\n        <ion-label [color]=\"!registration.request.LandSlideObs.DtLandSlideTime ? 'danger' : 'medium'\" position=\"stacked\"\r\n          class=\"ion-text-uppercase\">{{\r\n          'REGISTRATION.DIRT.LAND_SLIDE_OBS.DT_LAND_SLIDE_TIME' | translate }}</ion-label>\r\n        <ion-datetime color=\"medium\" [max]=\"maxDateStart\" monthShortNames=\"{{ 'MONTHS.SHORT_LIST' | translate }}\"\r\n          doneText=\"{{'DIALOGS.OK' | translate}}\" cancelText=\"{{'DIALOGS.CANCEL' | translate}}\"\r\n          display-format=\"D. MMM, YYYY HH:mm\" [(ngModel)]=\"registration.request.LandSlideObs.DtLandSlideTime\"\r\n          (ionChange)=\"dtTimeChanged()\">\r\n        </ion-datetime>\r\n        <ion-button class=\"set-to-now-button\" slot=\"end\" fill=\"outline\" color=\"medium\"\r\n          (click)=\"setDtLandSlideTimeToNow()\">\r\n          <ion-icon slot=\"start\" name=\"time\"></ion-icon> {{\"REGISTRATION.SET_TIME.NOW\" | translate}}\r\n        </ion-button>\r\n      </ion-item>\r\n      <ion-item *ngIf=\"dateIsDifferentThanObsTime\">\r\n        <ion-label color=\"danger\" class=\"ion-text-wrap\">\r\n          {{'ALERT.WARNING' | translate}}! {{'REGISTRATION.SNOW.AVALANCHE_ACTIVITY.DATE_WARNING' | translate}}\r\n        </ion-label>\r\n      </ion-item>\r\n      <ion-item [ngClass]=\"{'hasWarning': dateEndIsDifferentThanObsTime}\">\r\n        <ion-label [color]=\"!registration.request.LandSlideObs.DtLandSlideTimeEnd ? 'danger' : 'medium'\"\r\n          position=\"stacked\" class=\"ion-text-uppercase\">{{\r\n          'REGISTRATION.DIRT.LAND_SLIDE_OBS.DT_LAND_SLIDE_TIME_END' | translate }}</ion-label>\r\n        <ion-datetime [min]=\"minDateEnd\" [max]=\"maxDateEnd\" color=\"medium\"\r\n          monthShortNames=\"{{ 'MONTHS.SHORT_LIST' | translate }}\" doneText=\"{{'DIALOGS.OK' | translate}}\"\r\n          cancelText=\"{{'DIALOGS.CANCEL' | translate}}\" (ionChange)=\"dtEndTimeChanged()\"\r\n          display-format=\"D. MMM, YYYY HH:mm\" [(ngModel)]=\"registration.request.LandSlideObs.DtLandSlideTimeEnd\">\r\n        </ion-datetime>\r\n        <ion-button class=\"set-to-now-button\" slot=\"end\" fill=\"outline\" color=\"medium\"\r\n          (click)=\"setDtLandSlideTimeEndToNow()\">\r\n          <ion-icon slot=\"start\" name=\"time\"></ion-icon> {{\"REGISTRATION.SET_TIME.NOW\" | translate}}\r\n        </ion-button>\r\n      </ion-item>\r\n      <ion-item *ngIf=\"dateEndIsDifferentThanObsTime\">\r\n        <ion-label color=\"danger\" class=\"ion-text-wrap\">\r\n          {{'ALERT.WARNING' | translate}}! {{'REGISTRATION.SNOW.AVALANCHE_ACTIVITY.DATE_WARNING' | translate}}\r\n        </ion-label>\r\n      </ion-item>\r\n      <app-kdv-select title=\"REGISTRATION.DIRT.LAND_SLIDE_OBS.LANDSLIDE_TYPE\" kdvKey=\"Dirt_LandSlideKDV\"\r\n        [(value)]=\"registration.request.LandSlideObs.LandSlideTID\"></app-kdv-select>\r\n      <app-kdv-select title=\"REGISTRATION.DIRT.LAND_SLIDE_OBS.DESTRUCTIVE_SIZE\" kdvKey=\"Dirt_LandSlideSizeKDV\"\r\n        [(value)]=\"registration.request.LandSlideObs.LandSlideSizeTID\"></app-kdv-select>\r\n      <app-kdv-select title=\"REGISTRATION.DIRT.LAND_SLIDE_OBS.AVAL_TRIGGER\" kdvKey=\"Dirt_LandSlideTriggerKDV\"\r\n        [(value)]=\"registration.request.LandSlideObs.LandSlideTriggerTID\"></app-kdv-select>\r\n      <app-kdv-select title=\"REGISTRATION.DIRT.LAND_SLIDE_OBS.DIRT_ACTIVITY_INFLUENCED\"\r\n        kdvKey=\"Dirt_ActivityInfluencedKDV\" [(value)]=\"registration.request.LandSlideObs.ActivityInfluencedTID\">\r\n      </app-kdv-select>\r\n      <app-kdv-select title=\"REGISTRATION.DIRT.LAND_SLIDE_OBS.DAMAGE_EXTENT\" kdvKey=\"DamageExtentKDV\"\r\n        [(value)]=\"registration.request.LandSlideObs.DamageExtentTID\"></app-kdv-select>\r\n      <app-kdv-select title=\"REGISTRATION.DIRT.LAND_SLIDE_OBS.DIRT_FORECAST_ACCURATE\" kdvKey=\"ForecastAccurateKDV\"\r\n        [(value)]=\"registration.request.LandSlideObs.ForecastAccurateTID\"></app-kdv-select>\r\n      <ion-list-header class=\"ion-text-uppercase\">\r\n        <ion-label>\r\n          {{ 'REGISTRATION.GENERAL_COMMENT.COMMENT_TITLE' | translate}}\r\n        </ion-label>\r\n      </ion-list-header>\r\n      <app-text-comment [(value)]=\"registration.request.LandSlideObs.Comment\"\r\n        placeholder=\"{{'REGISTRATION.GENERAL_COMMENT.COMMENT_PLACEHOLDER' | translate }}\"></app-text-comment>\r\n      <ion-list-header class=\"ion-text-uppercase\">\r\n        <ion-label>\r\n          {{ 'REGISTRATION.ADD_IMAGES' | translate}}\r\n        </ion-label>\r\n      </ion-list-header>\r\n      <app-add-picture-item [geoHazard]=\"registration.geoHazard\" [registrationId]=\"registration.id\" [registrationTid]=\"registrationTid\"\r\n        [onBeforeAdd]=\"getSaveFunc()\">\r\n      </app-add-picture-item>\r\n      <ion-list-header class=\"ion-text-uppercase\">\r\n        <ion-label>\r\n          {{ 'REGISTRATION.ADD_WEB_URL.TITLE' | translate}}\r\n        </ion-label>\r\n      </ion-list-header>\r\n      <app-add-web-url-item [(weburls)]=\"registration.request.LandSlideObs.Urls\"></app-add-web-url-item>\r\n    </ion-list>\r\n  </app-registration-content-wrapper>\r\n</ion-content>\r\n<ng-template #noPosition>\r\n  {{ 'REGISTRATION.DIRT.LAND_SLIDE_OBS.SET_LANDSLIDE_POSITION' | translate }} {{\r\n      'REGISTRATION.DIRT.LAND_SLIDE_OBS.IN_MAP' | translate }}\r\n</ng-template>","import { Component, NgZone } from '@angular/core';\r\nimport { BasePage } from '../../base.page';\r\nimport { RegistrationTid } from 'src/app/modules/common-registration/registration.models';\r\nimport { ModalController } from '@ionic/angular';\r\nimport { SetAvalanchePositionPage } from '../../set-avalanche-position/set-avalanche-position.page';\r\nimport * as L from 'leaflet';\r\nimport { BasePageService } from '../../base-page-service';\r\nimport { ActivatedRoute } from '@angular/router';\r\nimport moment from 'moment';\r\n\r\n@Component({\r\n  selector: 'app-landslide-obs',\r\n  templateUrl: './landslide-obs.page.html',\r\n  styleUrls: ['./landslide-obs.page.scss']\r\n})\r\nexport class LandslideObsPage extends BasePage {\r\n  maxDateStart: string;\r\n  maxDateEnd: string;\r\n  minDateEnd: string;\r\n\r\n  constructor(\r\n    basePageService: BasePageService,\r\n    activatedRoute: ActivatedRoute,\r\n    private modalController: ModalController\r\n  ) {\r\n    super(RegistrationTid.LandSlideObs, basePageService, activatedRoute);\r\n  }\r\n\r\n  get dateIsDifferentThanObsTime() {\r\n    return (\r\n      this.registration.request.LandSlideObs.DtLandSlideTime &&\r\n      !moment(this.registration.request.LandSlideObs.DtLandSlideTime)\r\n        .startOf('day')\r\n        .isSame(moment(this.registration.request.DtObsTime).startOf('day'))\r\n    );\r\n  }\r\n\r\n  get dateEndIsDifferentThanObsTime() {\r\n    return (\r\n      this.registration.request.LandSlideObs.DtLandSlideTimeEnd &&\r\n      !moment(this.registration.request.LandSlideObs.DtLandSlideTimeEnd)\r\n        .startOf('day')\r\n        .isSame(moment(this.registration.request.DtObsTime).startOf('day'))\r\n    );\r\n  }\r\n\r\n  onInit() {\r\n    if (!this.registration.request.LandSlideObs.Urls) {\r\n      this.registration.request.LandSlideObs.Urls = [];\r\n    }\r\n    if (this.registration.request.LandSlideObs.DtLandSlideTimeEnd) {\r\n      this.maxDateStart = moment(\r\n        this.registration.request.LandSlideObs.DtLandSlideTimeEnd\r\n      ).toISOString(true);\r\n    } else {\r\n      this.maxDateStart = this.getMaxDateForNow();\r\n    }\r\n    if (this.registration.request.LandSlideObs.DtLandSlideTime) {\r\n      this.minDateEnd = moment(\r\n        this.registration.request.LandSlideObs.DtLandSlideTime\r\n      ).toISOString(true);\r\n    }\r\n    this.maxDateEnd = this.getMaxDateForNow();\r\n  }\r\n\r\n  getMaxDateForNow() {\r\n    // There is an issue when setting max date that when changing hour, the minutes is still max minutes.\r\n    // Workaround is to set minutes to 59.\r\n    return moment().toISOString(true);\r\n  }\r\n\r\n  dtTimeChanged() {\r\n    this.minDateEnd = moment(\r\n      this.registration.request.LandSlideObs.DtLandSlideTime\r\n    ).toISOString(true);\r\n    if (\r\n      this.registration.request.LandSlideObs.DtLandSlideTimeEnd &&\r\n      moment(\r\n        this.registration.request.LandSlideObs.DtLandSlideTimeEnd\r\n      ).isBefore(moment(this.registration.request.LandSlideObs.DtLandSlideTime))\r\n    ) {\r\n      this.registration.request.LandSlideObs.DtLandSlideTimeEnd = this.registration.request.LandSlideObs.DtLandSlideTime;\r\n    }\r\n  }\r\n\r\n  dtEndTimeChanged() {\r\n    this.maxDateStart = moment(\r\n      this.registration.request.LandSlideObs.DtLandSlideTimeEnd\r\n    ).toISOString(true);\r\n    if (\r\n      this.registration.request.LandSlideObs.DtLandSlideTime &&\r\n      moment(this.registration.request.LandSlideObs.DtLandSlideTime).isAfter(\r\n        moment(this.registration.request.LandSlideObs.DtLandSlideTimeEnd)\r\n      )\r\n    ) {\r\n      this.registration.request.LandSlideObs.DtLandSlideTime = this.registration.request.LandSlideObs.DtLandSlideTimeEnd;\r\n    }\r\n  }\r\n\r\n  isValid() {\r\n    return (\r\n      this.registration &&\r\n      this.registration.request.LandSlideObs &&\r\n      !!this.registration.request.LandSlideObs.DtLandSlideTime &&\r\n      !!this.registration.request.LandSlideObs.DtLandSlideTimeEnd\r\n    );\r\n  }\r\n\r\n  setDtLandSlideTimeToNow() {\r\n    this.registration.request.LandSlideObs.DtLandSlideTime = moment().toISOString(\r\n      true\r\n    );\r\n  }\r\n\r\n  setDtLandSlideTimeEndToNow() {\r\n    this.registration.request.LandSlideObs.DtLandSlideTimeEnd = moment().toISOString(\r\n      true\r\n    );\r\n  }\r\n\r\n  async setLandslidePosition() {\r\n    const relativeToLatLng = this.registration.request.ObsLocation\r\n      ? L.latLng(\r\n          this.registration.request.ObsLocation.Latitude,\r\n          this.registration.request.ObsLocation.Longitude\r\n        )\r\n      : null;\r\n    const startLatLng =\r\n      this.registration.request.LandSlideObs.StartLat &&\r\n      this.registration.request.LandSlideObs.StartLong\r\n        ? L.latLng(\r\n            this.registration.request.LandSlideObs.StartLat,\r\n            this.registration.request.LandSlideObs.StartLong\r\n          )\r\n        : null;\r\n    const endLatLng =\r\n      this.registration.request.LandSlideObs.StopLat &&\r\n      this.registration.request.LandSlideObs.StopLong\r\n        ? L.latLng(\r\n            this.registration.request.LandSlideObs.StopLat,\r\n            this.registration.request.LandSlideObs.StopLong\r\n          )\r\n        : null;\r\n    const modal = await this.modalController.create({\r\n      component: SetAvalanchePositionPage,\r\n      componentProps: {\r\n        relativeToLatLng,\r\n        startLatLng,\r\n        endLatLng,\r\n        geoHazard: this.registration.geoHazard\r\n      }\r\n    });\r\n    modal.present();\r\n    const result = await modal.onDidDismiss();\r\n    if (result.data) {\r\n      const start: L.LatLng = result.data.start;\r\n      const end: L.LatLng = result.data.end;\r\n      this.registration.request.LandSlideObs.StartLat = start.lat;\r\n      this.registration.request.LandSlideObs.StartLong = start.lng;\r\n      this.registration.request.LandSlideObs.StopLat = end.lat;\r\n      this.registration.request.LandSlideObs.StopLong = end.lng;\r\n    }\r\n  }\r\n}\r\n"]}