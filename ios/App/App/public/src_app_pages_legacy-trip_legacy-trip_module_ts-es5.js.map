{"version":3,"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAOA,UAAMA,MAAM,GAAW,CACrB;AACEC,YAAI,EAAE,EADR;AAEEC,iBAAS,EAAEC,6DAFb;AAGEC,mBAAW,EAAE,CAACC,8DAAD;AAHf,OADqB,CAAvB;;UAgBaC;;;;;yBAAAA;AAAoB;;;cAApBA;;;kBAPF,CACPC,uEADO,EAEPC,kGAFO,EAGPC,mEAAsBT,MAAtB,CAHO;;;;4HAOEM,uBAAoB;AAAAI,yBAFhBP,6DAEgB;AAFFQ,oBAJ3BJ,uEAI2B,EAH3BC,kGAG2B,EAHLC,yDAGK;AAEE;AALP;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACRtBG;;AACEA;;AACEA;;AACEA;;AAEEA;AAAAA;;AAAA;;AAAA;AAAA;;AAA+BA;;AACjCA;;AACEA;;AAC+DA;;;;AAChDA;;AACfA;;AAAgDA;AAAAA;;AAAA;;AAAA;AAAA;;AACQA;;AAC1DA;;AACAA;;AAA8EA;AAAAA;;AAAA;;AAAA;AAAA;;AAC9EA;;AACAA;;AACEA;;AACEA;;;;AACFA;;AACFA;;AACFA;;AACFA;;AACFA;;;;;;AAnBsBA;;AAAAA,sKAAqF,UAArF,EAAqFC,oCAArF,EAAqF,OAArF,EAAqFA,yBAArF;;AAIHD;;AAAAA;;AACoDA;;AAAAA;;AAEnDA;;AAAAA,sHAAmC,eAAnC,EAAmCC,yCAAnC,EAAmC,SAAnC,EAAmCA,cAAnC;;AAG4BD;;AAAAA,sHAAmC,OAAnC,EAAmCC,sBAAnC;;AAItCD;;AAAAA;;;;;;AAMVA;;AACEA;;AACEA;;AACFA;;AACFA;;;;;;;;AACAA;;AACEA;;AACEA;;AACEA;;AACEA;;AACFA;;AACAA;;AACEA;;AAAuCA;AAAAA;;AAAA;;AAAA;AAAA;;AAAmBA;;;;AAA8BA;;AAC1FA;;AACFA;;AACFA;;AACFA;;;;AAJkEA;;AAAAA;;;;;;;;AAexDA;;AAAYA;AAAAA;;AAAA;;AAAA;AAAA;;AAEVA;;;;AACFA;;;;;;AAHkCA;;AAEhCA;;AAAAA;;;;;;;;AAEFA;;AAA8BA;AAAAA;;AAAA;;AAAA;AAAA;;AAE5BA;;;;AACFA;;;;;;AAHmDA;;AAEjDA;;AAAAA;;;;;;;;AAINA;;AACEA;;AACEA;;AAAYA;AAAAA;;AAAA;;AAAA;AAAA;;AAEVA;;AACAA;;;;AACFA;;AACFA;;AACFA;;;;;;AANsCA;;AAAAA;;AAGhCA;;AAAAA;;;;ACzDhB,UAAME,SAAS,GAAG,gBAAlB;;UAOaC;AAyBX,iCACUC,iBADV,EAEUC,MAFV,EAGUC,iBAHV,EAIUC,gBAJV,EAKUC,kBALV,EAMUC,aANV,EAOUC,eAPV,EAQUC,cARV,EAQwC;AAAA;;AAP9B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AA9BV,2BAAY,KAAZ;AAGA,2BAAY,KAAZ;AACA,4BAAa,KAAb;AACA,0CAA2B,KAA3B;AA2BE,eAAKC,OAAL,GAAe,EAAf;AACD;;;;eAvBD,eAAW;AACT,mBACE,KAAKA,OAAL,CAAaC,0BAAb,KAA4CC,SAA5C,IACA,KAAKF,OAAL,CAAaG,UAAb,KAA4BD,SAD5B,IAEA,KAAKE,eAAL,IAAwB,IAH1B;AAKD;;;eAED,eAAW;AACT,mBAAOC,iFAAsB,KAAKL,OAA3B,CAAP;AACD;;;iBAeD,oBAAQ;AAAA;;AACN,iBAAKM,SAAL,GAAiB,KAAjB;AACA,iBAAKC,kBAAL;AACA,iBAAKC,sBAAL,GAA8B,KAAKhB,iBAAL,CAC3BiB,yBAD2B,GAE3BC,SAF2B,CAEjB,UAACC,GAAD,EAAQ;AACjB,mBAAI,CAAClB,MAAL,CAAYmB,GAAZ,CAAgB,YAAK;AACnB,oBAAID,GAAJ,EAAS;AACP,uBAAI,CAACX,OAAL,GAAeW,GAAG,CAACE,OAAnB;AACA,uBAAI,CAACC,SAAL,GAAiB,IAAjB;AACD,iBAHD,MAGO;AACL,uBAAI,CAACA,SAAL,GAAiB,KAAjB;AACD;AACF,eAPD;AAQD,aAX2B,CAA9B;AAYA,iBAAKC,mBAAL;AACD;;;iBAEa,+BAAmB;;;;;;;;AAC/B,2BAAKC,wBAAL,GAAgC,IAAhC;;;AAEyB,6BAAM,KAAKpB,kBAAL,CAAwBqB,wBAAxB,EAAN;;;AAAvB,2BAAKb;;AACL,0BAAI,KAAKA,eAAL,IAAwB,IAA5B,EAAkC;AAChC,6BAAKZ,iBAAL,CAAuB0B,8BAAvB;AACD;;;;;;;;AAED,2BAAKnB,cAAL,CAAoBoB,GAApB,CACE,2BADF,eAGEC,8FAHF,EAIE9B,SAJF;AAMA,2BAAKE,iBAAL,CAAuB0B,8BAAvB;;;;AAEA,2BAAKzB,MAAL,CAAYmB,GAAZ,CAAgB,YAAK;AACnB,8BAAI,CAACI,wBAAL,GAAgC,KAAhC;AACD,uBAFD;;;;;;;;;;AAIH;;;iBAEO,8BAAkB;AACxB,iBAAKK,OAAL,GAAe,EAAf;;AACA,iBAAK,IAAIC,CAAC,GAAGC,gDAASC,GAAT,CAAa,OAAb,CAAb,EAAoCF,CAAC,IAAI,EAAzC,EAA6CA,CAAC,EAA9C,EAAkD;AAChD,mBAAKD,OAAL,CAAaI,IAAb,CAAkB;AAAEC,oBAAI,YAAKJ,CAAL,QAAN;AAAmBK,kBAAE,EAAEL,CAAC,GAAG;AAA3B,eAAlB;AACD;AACF;;;iBAED,uBAAW;AACT,gBAAI,KAAKd,sBAAT,EAAiC;AAC/B,mBAAKA,sBAAL,CAA4BoB,WAA5B;AACD;AACF;;;iBAEK,qBAAS;;;;;;;;;AACb,2BAAKC,MAAL;;0BACK,KAAKC;;;;;AACR,2BAAKC,UAAL,GAAkB,IAAlB;;;;;AAGqB,6BAAM,KAAKrC,iBAAL,CAAuBsC,wBAAvB,EAAN;;;AAAfC;;AACN,0BAAIA,YAAY,IAAIA,YAAY,CAACC,UAAjC,EAA6C;AAC3C,6BAAK5B,SAAL,GAAiB,IAAjB,CAD2C,CAE3C;;AACA,6BAAKN,OAAL,CAAamC,WAAb,GAA2BC,uEAA3B;AACA,6BAAKpC,OAAL,CAAaqC,UAAb,GAA0BC,gEAA1B;;AACA,4BAAI;AACF,8BAAI,KAAKlC,eAAL,IAAwB,KAAKA,eAAL,CAAqBmC,MAAjD,EAAyD;AACvD,iCAAKvC,OAAL,CAAawC,GAAb,GAAmB,KAAKpC,eAAL,CAAqBmC,MAArB,CAA4BE,QAA5B,CAAqCC,QAArC,EAAnB;AACA,iCAAK1C,OAAL,CAAa2C,GAAb,GAAmB,KAAKvC,eAAL,CAAqBmC,MAArB,CAA4BK,SAA5B,CAAsCF,QAAtC,EAAnB;AACA,iCAAKG,qBAAL,GAA6B,KAAKrD,iBAAL,CAC1BsD,eAD0B,CACV,KAAK9C,OADK,EAE1BU,SAF0B,CAGzB;AAAA,qCAAM,MAAI,CAACb,aAAL,CAAmBkD,YAAnB,CAAgC,GAAhC,CAAN;AAAA,6BAHyB,EAIzB,UAACC,KAAD,EAAU;AACR,oCAAI,CAACjD,cAAL,CAAoBiD,KAApB,CACEA,KADF,EAEE,0BAFF,EAGE1D,SAHF;;AAKA,oCAAI,CAACE,iBAAL,CAAuByD,oBAAvB,CAA4C,IAA5C;AACD,6BAXwB,EAYzB,YAAK;AACH,oCAAI,CAACxD,MAAL,CAAYmB,GAAZ,CAAgB,YAAK;AACnB,sCAAI,CAACN,SAAL,GAAiB,KAAjB;AACD,+BAFD;AAGD,6BAhBwB,CAA7B;AAkBD,2BArBD,MAqBO;AACL,iCAAKA,SAAL,GAAiB,KAAjB;AACA,iCAAKd,iBAAL,CAAuB0B,8BAAvB;AACD;AACF,yBA1BD,CA0BE,OAAO8B,KAAP,EAAc;AACd,+BAAK1C,SAAL,GAAiB,KAAjB;AACA,+BAAKP,cAAL,CAAoBoB,GAApB,CACE,2BADF,EAEE6B,KAFF,EAGE5B,8FAHF,EAIE9B,SAJF;AAMA,+BAAKE,iBAAL,CAAuB0B,8BAAvB;AACD;AACF;;;;;;;;;AAEJ;;;iBAED,kBAAM;AACJ,gBAAI,KAAK2B,qBAAL,IAA8B,CAAC,KAAKA,qBAAL,CAA2BK,MAA9D,EAAsE;AACpE,mBAAKL,qBAAL,CAA2BjB,WAA3B;AACA,mBAAKiB,qBAAL,GAA6B3C,SAA7B;AACD;;AACD,iBAAKI,SAAL,GAAiB,KAAjB;AACD;;;iBAED,oBAAQ;AACN,iBAAKuB,MAAL;AACA,iBAAKrC,iBAAL,CAAuB2D,cAAvB;AACD;;;iBAEK,oBAAQ;;;;;;;;AACQ,6BAAM,KAAKxD,gBAAL,CACvB6B,GADuB,CACnB,uBADmB,EAEvB4B,SAFuB,EAAN;;;AAAdC;;AAGQ,6BAAM,KAAKvD,eAAL,CAAqBwD,MAArB,CAA4B;AAC9C5E,iCAAS,EAAE6E,6GADmC;AAE9CC,sCAAc,EAAE;AACdC,kCAAQ,EAAEJ;AADI;AAF8B,uBAA5B,CAAN;;;AAARK;AAMNA,2BAAK,CAACC,OAAN;;;;;;;;;AACD;;;iBAED,qBAAS;AACP,iBAAK3D,OAAL,GAAe,EAAf;AACA,iBAAKe,mBAAL;AACD;;;;;;;yBA5KUxB,iBAAcH;AAAA;;;cAAdG;AAAcqE;AAAAC;AAAAC;AAAAC;AAAAC;AAAA;ADzB3B5E;;AACEA;;AACEA;;AACEA;;AACFA;;AACAA;;AAAWA;;;;AAA2BA;;AACxCA;;AACFA;;AACAA;;AACEA;;AACEA;;AAuBAA;;AAKAA;;AAYAA;;AACEA;;AACEA;;AACEA;;AACEA;;AACEA;;AAAYA;AAAA,qBAAS6E,cAAT;AAAmB,aAAnB;;AAAkC7E;;;;AAA4BA;;AAC5EA;;AACFA;;AACAA;;AACEA;;AACEA;;AAIAA;;AAIFA;;AACFA;;AACAA;;AASFA;;AACFA;;AACFA;;AACFA;;AACFA;;;;AA9EeA;;AAAAA;;AAKDA;;AAAAA;;AAuBAA;;AAAAA;;AAKKA;;AAAAA;;AAiByCA;;AAAAA;;AAKwBA;;AAAAA;;AAIzDA;;AAAAA;;AAMkBA;;AAAAA;;;;;;;;;","names":["routes","path","component","_legacy_trip_page__WEBPACK_IMPORTED_MODULE_2__","canActivate","_core_guards_auth_guard__WEBPACK_IMPORTED_MODULE_3__","LegacyTripPageModule","_modules_shared_shared_module__WEBPACK_IMPORTED_MODULE_0__","_modules_registration_shared_components_module__WEBPACK_IMPORTED_MODULE_1__","_angular_router__WEBPACK_IMPORTED_MODULE_5__","declarations","imports","_angular_core__WEBPACK_IMPORTED_MODULE_13__","ctx_r0","DEBUG_TAG","LegacyTripPage","tripLoggerService","ngZone","regobsAuthService","translateService","geoPositionService","navController","modalController","loggingService","tripDto","ObservationExpectedMinutes","undefined","TripTypeID","currentPosition","_core_helpers_is_empty_helper__WEBPACK_IMPORTED_MODULE_6__","isLoading","setHoursToMidnight","tripLoggerSubscription","getLegacyTripAsObservable","subscribe","val","run","request","isRunning","initCurrentPosition","isLoadingCurrentPosition","getSingleCurrentPosition","showTripNoPositionErrorMessage","log","_modules_shared_services_logging_log_level_model__WEBPACK_IMPORTED_MODULE_4__","minutes","i","moment__WEBPACK_IMPORTED_MODULE_1___default","get","push","text","id","unsubscribe","cancel","isValid","hasClicked","getLoggedInUserAsPromise","loggedInUser","isLoggedIn","GeoHazardID","_varsom_regobs_common_core__WEBPACK_IMPORTED_MODULE_15__","DeviceGuid","_nano_sql_core_lib_utilities__WEBPACK_IMPORTED_MODULE_5__","coords","Lat","latitude","toString","Lng","longitude","startTripSubscription","startLegacyTrip","navigateRoot","error","showTripErrorMessage","closed","stopLegacyTrip","toPromise","translation","create","_modules_registration_pages_modal_pages_help_modal_help_modal_page__WEBPACK_IMPORTED_MODULE_2__","componentProps","helpText","modal","present","selectors","decls","vars","consts","template","ctx"],"sources":["webpack:///src/app/pages/legacy-trip/legacy-trip.module.ts","webpack:///src/app/pages/legacy-trip/legacy-trip.page.html","webpack:///src/app/pages/legacy-trip/legacy-trip.page.ts"],"sourcesContent":["import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\nimport { SharedModule } from '../../modules/shared/shared.module';\r\nimport { SharedComponentsModule } from '../../modules/registration/shared-components.module';\r\nimport { LegacyTripPage } from './legacy-trip.page';\r\nimport { AuthGuard } from '../../core/guards/auth.guard';\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: '',\r\n    component: LegacyTripPage,\r\n    canActivate: [AuthGuard]\r\n  }\r\n];\r\n\r\n@NgModule({\r\n  imports: [\r\n    SharedModule,\r\n    SharedComponentsModule,\r\n    RouterModule.forChild(routes)\r\n  ],\r\n  declarations: [LegacyTripPage]\r\n})\r\nexport class LegacyTripPageModule {}\r\n","<ion-header>\r\n  <ion-toolbar appHeaderColor mode=\"ios\">\r\n    <ion-buttons slot=\"start\">\r\n      <ion-back-button text=\"\" defaultHref=\"/\"></ion-back-button>\r\n    </ion-buttons>\r\n    <ion-title>{{\"TRIP.TRIP\" | translate}}</ion-title>\r\n  </ion-toolbar>\r\n</ion-header>\r\n<ion-content>\r\n  <ion-grid class=\"pull-last-bottom ion-no-paddig ion-no-margin\">\r\n    <ion-row *ngIf=\"!isLoading\">\r\n      <ion-col class=\"ion-no-padding\">\r\n        <ion-list lines=\"full\">\r\n          <app-kdv-select [labelColor]=\"(hasClicked && tripDto.TripTypeID === undefined) ? 'danger' : 'medium'\"\r\n            [disabled]=\"isRunning || isLoading\" title=\"TRIP.TRIP_TYPE\" kdvKey=\"TripTypeKDV\"\r\n            [(value)]=\"tripDto.TripTypeID\"></app-kdv-select>\r\n          <ion-item>\r\n            <ion-label [color]=\"(hasClicked && tripDto.ObservationExpectedMinutes === undefined) ? 'danger' : 'medium'\"\r\n              color=\"medium\" position=\"stacked\" class=\"ion-text-uppercase\">{{'TRIP.TRIP_END_DESCRIPTION'\r\n              | translate}}</ion-label>\r\n            <app-select [disabled]=\"isRunning || isLoading\" [(selectedValue)]=\"tripDto.ObservationExpectedMinutes\"\r\n              [options]=\"minutes\" title=\"TRIP.TRIP_END_DESCRIPTION\"></app-select>\r\n          </ion-item>\r\n          <app-text-comment title=\"DIALOGS.COMMENT\" [disabled]=\"isRunning || isLoading\" [(value)]=\"tripDto.Comment\">\r\n          </app-text-comment>\r\n          <ion-item-divider>\r\n            <ion-label class=\"ion-text-wrap\">\r\n              {{'TRIP.COMMENT_DESCRIPTION' | translate}}\r\n            </ion-label>\r\n          </ion-item-divider>\r\n        </ion-list>\r\n      </ion-col>\r\n    </ion-row>\r\n    <ion-row *ngIf=\"isLoadingCurrentPosition\">\r\n      <ion-col class=\"ion-text-center\">\r\n        <ion-spinner name=\"dots\"></ion-spinner>\r\n      </ion-col>\r\n    </ion-row>\r\n    <ng-container *ngIf=\"isLoading\">\r\n      <ion-row>\r\n        <ion-col class=\"ion-no-padding ion-text-center\">\r\n          <div>\r\n            <ion-spinner name=\"dots\"></ion-spinner>\r\n          </div>\r\n          <div>\r\n            <ion-button fill=\"clear\" type=\"button\" (click)=\"cancel()\">{{'ALERT.CANCEL' | translate}}</ion-button>\r\n          </div>\r\n        </ion-col>\r\n      </ion-row>\r\n    </ng-container>\r\n    <ion-row>\r\n      <ion-col class=\"ion-no-padding\">\r\n        <ion-grid class=\"ion-no-padding\">\r\n          <ion-row>\r\n            <ion-col class=\"ion-text-center\">\r\n              <ion-button (click)=\"showHelp()\" fill=\"clear\">{{'HELP.TITLE' | translate}}</ion-button>\r\n            </ion-col>\r\n          </ion-row>\r\n          <ion-row class=\"white-background\">\r\n            <ion-col size=\"12\" class=\"start-buttons\">\r\n              <ion-button (click)=\"startTrip()\" [disabled]=\"isLoading || !isValid\" *ngIf=\"!isRunning\"\r\n                class=\"back-button\" expand=\"block\" color=\"varsom-orange\">\r\n                {{ 'TRIP.START_TRIP' | translate }}\r\n              </ion-button>\r\n              <ion-button *ngIf=\"isRunning\" (click)=\"stopTrip()\" [disabled]=\"isLoading\" class=\"back-button\"\r\n                expand=\"block\" color=\"varsom-orange\">\r\n                {{ 'TRIP.STOP_TRIP' | translate }}\r\n              </ion-button>\r\n            </ion-col>\r\n          </ion-row>\r\n          <ion-row class=\"white-background\" *ngIf=\"!isEmpty\">\r\n            <ion-col class=\"ion-text-center\">\r\n              <ion-button (click)=\"clearPage()\" [disabled]=\"isRunning || isLoading\" class=\"reset-button\" color=\"dark\"\r\n                size=\"small\" fill=\"clear\">\r\n                <svg-icon src=\"/assets/icon/reset.svg\"></svg-icon>\r\n                {{\"REGISTRATION.RESET\" | translate}}\r\n              </ion-button>\r\n            </ion-col>\r\n          </ion-row>\r\n        </ion-grid>\r\n      </ion-col>\r\n    </ion-row>\r\n  </ion-grid>\r\n</ion-content>","import { Component, OnInit, NgZone, OnDestroy } from '@angular/core';\r\nimport { TripLoggerService } from '../../core/services/trip-logger/trip-logger.service';\r\nimport { Subscription } from 'rxjs';\r\nimport { CreateTripDto } from '@varsom-regobs-common/regobs-api';\r\nimport moment from 'moment';\r\nimport { NavController, ModalController } from '@ionic/angular';\r\nimport { TranslateService } from '@ngx-translate/core';\r\nimport { GeoHazard } from '@varsom-regobs-common/core';\r\nimport { HelpModalPage } from '../../modules/registration/pages/modal-pages/help-modal/help-modal.page';\r\nimport { LoggingService } from '../../modules/shared/services/logging/logging.service';\r\nimport { LogLevel } from '../../modules/shared/services/logging/log-level.model';\r\nimport * as utils from '@nano-sql/core/lib/utilities';\r\nimport { IsEmptyHelper } from '../../core/helpers/is-empty.helper';\r\nimport { SelectOption } from '../../modules/shared/components/input/select/select-option.model';\r\nimport { GeoPositionService } from '../../core/services/geo-position/geo-position.service';\r\nimport { RegobsAuthService } from '../../modules/auth/services/regobs-auth.service';\r\nimport { Geoposition } from '@ionic-native/geolocation/ngx';\r\n\r\nconst DEBUG_TAG = 'LegacyTripPage';\r\n\r\n@Component({\r\n  selector: 'app-legacy-trip',\r\n  templateUrl: './legacy-trip.page.html',\r\n  styleUrls: ['./legacy-trip.page.scss']\r\n})\r\nexport class LegacyTripPage implements OnInit, OnDestroy {\r\n  private tripLoggerSubscription: Subscription;\r\n\r\n  isRunning = false;\r\n  tripDto: CreateTripDto;\r\n  minutes: SelectOption[];\r\n  isLoading = false;\r\n  hasClicked = false;\r\n  isLoadingCurrentPosition = false;\r\n  currentPosition: Geoposition;\r\n\r\n  private startTripSubscription: Subscription;\r\n\r\n  get isValid(): boolean {\r\n    return (\r\n      this.tripDto.ObservationExpectedMinutes !== undefined &&\r\n      this.tripDto.TripTypeID !== undefined &&\r\n      this.currentPosition != null\r\n    );\r\n  }\r\n\r\n  get isEmpty(): boolean {\r\n    return IsEmptyHelper.isEmpty(this.tripDto);\r\n  }\r\n\r\n  constructor(\r\n    private tripLoggerService: TripLoggerService,\r\n    private ngZone: NgZone,\r\n    private regobsAuthService: RegobsAuthService,\r\n    private translateService: TranslateService,\r\n    private geoPositionService: GeoPositionService,\r\n    private navController: NavController,\r\n    private modalController: ModalController,\r\n    private loggingService: LoggingService\r\n  ) {\r\n    this.tripDto = {};\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.isLoading = false;\r\n    this.setHoursToMidnight();\r\n    this.tripLoggerSubscription = this.tripLoggerService\r\n      .getLegacyTripAsObservable()\r\n      .subscribe((val) => {\r\n        this.ngZone.run(() => {\r\n          if (val) {\r\n            this.tripDto = val.request;\r\n            this.isRunning = true;\r\n          } else {\r\n            this.isRunning = false;\r\n          }\r\n        });\r\n      });\r\n    this.initCurrentPosition();\r\n  }\r\n\r\n  private async initCurrentPosition(): Promise<void> {\r\n    this.isLoadingCurrentPosition = true;\r\n    try {\r\n      this.currentPosition = await this.geoPositionService.getSingleCurrentPosition();\r\n      if (this.currentPosition == null) {\r\n        this.tripLoggerService.showTripNoPositionErrorMessage();\r\n      }\r\n    } catch (error) {\r\n      this.loggingService.log(\r\n        'Could not get geolocation',\r\n        error,\r\n        LogLevel.Warning,\r\n        DEBUG_TAG\r\n      );\r\n      this.tripLoggerService.showTripNoPositionErrorMessage();\r\n    } finally {\r\n      this.ngZone.run(() => {\r\n        this.isLoadingCurrentPosition = false;\r\n      });\r\n    }\r\n  }\r\n\r\n  private setHoursToMidnight() {\r\n    this.minutes = [];\r\n    for (let i = moment().get('hours'); i <= 24; i++) {\r\n      this.minutes.push({ text: `${i}:00`, id: i * 60 });\r\n    }\r\n  }\r\n\r\n  ngOnDestroy(): void {\r\n    if (this.tripLoggerSubscription) {\r\n      this.tripLoggerSubscription.unsubscribe();\r\n    }\r\n  }\r\n\r\n  async startTrip(): Promise<void> {\r\n    this.cancel();\r\n    if (!this.isValid) {\r\n      this.hasClicked = true;\r\n      return;\r\n    } else {\r\n      const loggedInUser = await this.regobsAuthService.getLoggedInUserAsPromise();\r\n      if (loggedInUser && loggedInUser.isLoggedIn) {\r\n        this.isLoading = true;\r\n        // this.tripDto.ObserverGuid = loggedInUser.user.Guid; // TODO: Fix api to use access token for this call\r\n        this.tripDto.GeoHazardID = GeoHazard.Snow;\r\n        this.tripDto.DeviceGuid = utils.uuid();\r\n        try {\r\n          if (this.currentPosition && this.currentPosition.coords) {\r\n            this.tripDto.Lat = this.currentPosition.coords.latitude.toString();\r\n            this.tripDto.Lng = this.currentPosition.coords.longitude.toString();\r\n            this.startTripSubscription = this.tripLoggerService\r\n              .startLegacyTrip(this.tripDto)\r\n              .subscribe(\r\n                () => this.navController.navigateRoot('/'),\r\n                (error) => {\r\n                  this.loggingService.error(\r\n                    error,\r\n                    'Error when starting trip',\r\n                    DEBUG_TAG\r\n                  );\r\n                  this.tripLoggerService.showTripErrorMessage(true);\r\n                },\r\n                () => {\r\n                  this.ngZone.run(() => {\r\n                    this.isLoading = false;\r\n                  });\r\n                }\r\n              );\r\n          } else {\r\n            this.isLoading = false;\r\n            this.tripLoggerService.showTripNoPositionErrorMessage();\r\n          }\r\n        } catch (error) {\r\n          this.isLoading = false;\r\n          this.loggingService.log(\r\n            'Could not get geolocation',\r\n            error,\r\n            LogLevel.Warning,\r\n            DEBUG_TAG\r\n          );\r\n          this.tripLoggerService.showTripNoPositionErrorMessage();\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  cancel(): void {\r\n    if (this.startTripSubscription && !this.startTripSubscription.closed) {\r\n      this.startTripSubscription.unsubscribe();\r\n      this.startTripSubscription = undefined;\r\n    }\r\n    this.isLoading = false;\r\n  }\r\n\r\n  stopTrip(): void {\r\n    this.cancel();\r\n    this.tripLoggerService.stopLegacyTrip();\r\n  }\r\n\r\n  async showHelp(): Promise<void> {\r\n    const translation = await this.translateService\r\n      .get('TRIP.LEGACY_HELP_TEXT')\r\n      .toPromise();\r\n    const modal = await this.modalController.create({\r\n      component: HelpModalPage,\r\n      componentProps: {\r\n        helpText: translation\r\n      }\r\n    });\r\n    modal.present();\r\n  }\r\n\r\n  clearPage(): void {\r\n    this.tripDto = {};\r\n    this.initCurrentPosition();\r\n  }\r\n}\r\n"]}