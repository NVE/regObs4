{"version":3,"file":"src_app_modules_registration_pages_snow_snow-profile_snow-profile_module_ts-es2015.js","mappings":"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","sources":["./src/app/core/helpers/hydrology-helper.ts","./src/app/modules/registration/components/snow/snow-profile/compression-test/compression-test-list-modal/compression-test-list-modal.module.ts","./src/app/modules/registration/components/snow/snow-profile/compression-test/compression-test-list-modal/compression-test-list-modal.page.ts","./src/app/modules/registration/components/snow/snow-profile/compression-test/compression-test-list-modal/compression-test-list-modal.page.html","./src/app/modules/registration/components/snow/snow-profile/compression-test/compression-test.component.ts","./src/app/modules/registration/components/snow/snow-profile/compression-test/compression-test.component.html","./src/app/modules/registration/components/snow/snow-profile/snow-density/snow-density-layer-modal/snow-density-layer-modal.module.ts","./src/app/modules/registration/components/snow/snow-profile/snow-density/snow-density-layer-modal/snow-density-layer-modal.page.ts","./src/app/modules/registration/components/snow/snow-profile/snow-density/snow-density-layer-modal/snow-density-layer-modal.page.html","./src/app/modules/registration/components/snow/snow-profile/snow-density/snow-density-modal/snow-density-modal.module.ts","./src/app/modules/registration/components/snow/snow-profile/snow-density/snow-density-modal/snow-density-modal.page.ts","./src/app/modules/registration/components/snow/snow-profile/snow-density/snow-density-modal/snow-density-modal.page.html","./src/app/modules/registration/components/snow/snow-profile/snow-density/snow-density.component.ts","./src/app/modules/registration/components/snow/snow-profile/snow-density/snow-density.component.html","./src/app/modules/registration/components/snow/snow-profile/snow-temp/snow-temp-layer-modal/snow-temp-layer-modal.module.ts","./src/app/modules/registration/components/snow/snow-profile/snow-temp/snow-temp-layer-modal/snow-temp-layer-modal.page.ts","./src/app/modules/registration/components/snow/snow-profile/snow-temp/snow-temp-layer-modal/snow-temp-layer-modal.page.html","./src/app/modules/registration/components/snow/snow-profile/snow-temp/snow-temp-modal/snow-temp-modal.module.ts","./src/app/modules/registration/components/snow/snow-profile/snow-temp/snow-temp-modal/snow-temp-modal.page.ts","./src/app/modules/registration/components/snow/snow-profile/snow-temp/snow-temp-modal/snow-temp-modal.page.html","./src/app/modules/registration/components/snow/snow-profile/snow-temp/snow-temp.component.ts","./src/app/modules/registration/components/snow/snow-profile/snow-temp/snow-temp.component.html","./src/app/modules/registration/components/snow/snow-profile/strat-profile/strat-profile-layer-history-modal/strat-profile-layer-history-modal.module.ts","./src/app/modules/registration/components/snow/snow-profile/strat-profile/strat-profile-layer-history-modal/strat-profile-layer-history-modal.page.ts","./src/app/modules/registration/components/snow/snow-profile/strat-profile/strat-profile-layer-history-modal/strat-profile-layer-history-modal.page.html","./src/app/modules/registration/components/snow/snow-profile/strat-profile/strat-profile-layer-modal/strat-profile-layer-modal.module.ts","./src/app/modules/registration/components/snow/snow-profile/strat-profile/strat-profile-layer-modal/strat-profile-layer-modal.page.ts","./src/app/modules/registration/components/snow/snow-profile/strat-profile/strat-profile-layer-modal/strat-profile-layer-modal.page.html","./src/app/modules/registration/components/snow/snow-profile/strat-profile/strat-profile-modal/strat-profile-modal.module.ts","./src/app/modules/registration/components/snow/snow-profile/strat-profile/strat-profile-modal/strat-profile-modal.page.ts","./src/app/modules/registration/components/snow/snow-profile/strat-profile/strat-profile-modal/strat-profile-modal.page.html","./src/app/modules/registration/components/snow/snow-profile/strat-profile/strat-profile.component.ts","./src/app/modules/registration/components/snow/snow-profile/strat-profile/strat-profile.component.html","./src/app/modules/registration/pages/snow/snow-profile/snow-profile.module.ts","./src/app/modules/registration/pages/snow/snow-profile/snow-profile.page.ts","./src/app/modules/registration/pages/snow/snow-profile/snow-profile.page.html","./src/app/pages/modal-pages/fullscreen-image-modal/fullscreen-image-modal.module.ts"],"sourcesContent":["import { NumberHelper } from './number-helper';\r\n\r\nexport class HydrologyHelper {\r\n  static isEmpty(obj: Object | Array<Object | Array<Object>>) {}\r\n\r\n  static calculateDensity(\r\n    weightInKg: number,\r\n    heightInM: number,\r\n    tareWeightInKg: number,\r\n    cylinderDiameterInM: number\r\n  ) {\r\n    if (\r\n      !NumberHelper.isNumeric(cylinderDiameterInM) ||\r\n      cylinderDiameterInM <= 0\r\n    ) {\r\n      return 0;\r\n    }\r\n    const r = cylinderDiameterInM / 2.0;\r\n    const totalWeight = (weightInKg || 0) - (tareWeightInKg || 0);\r\n    if (totalWeight <= 0) {\r\n      return 0;\r\n    }\r\n    const heightInMeter = heightInM || 0;\r\n    if (heightInMeter <= 0) {\r\n      return 0;\r\n    }\r\n    const volume = Math.PI * r * r * heightInMeter;\r\n    return totalWeight / volume;\r\n  }\r\n\r\n  static calculateWaterEquivalent(density: number, heightInMeter: number) {\r\n    if (\r\n      NumberHelper.isNumeric(density) &&\r\n      NumberHelper.isNumeric(heightInMeter) &&\r\n      density > 0 &&\r\n      heightInMeter > 0\r\n    ) {\r\n      return (density / 1000) * (heightInMeter * 1000);\r\n    }\r\n    return 0;\r\n  }\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { CompressionTestListModalPage } from './compression-test-list-modal.page';\r\nimport { SharedComponentsModule } from '../../../../../shared-components.module';\r\nimport { CompressionTestModalPageModule } from '../../../compression-test-list/compression-test-modal/compression-test-modal.module';\r\n\r\n@NgModule({\r\n  imports: [SharedComponentsModule, CompressionTestModalPageModule],\r\n  declarations: [CompressionTestListModalPage],\r\n  entryComponents: [CompressionTestListModalPage]\r\n})\r\nexport class CompressionTestListModalPageModule {}\r\n","import { Component, OnInit, Input, NgZone, OnDestroy } from '@angular/core';\r\nimport { CompressionTestEditModel } from '@varsom-regobs-common/regobs-api';\r\nimport { ModalController } from '@ionic/angular';\r\nimport { RegistrationService } from '../../../../../services/registration.service';\r\nimport { Subject } from 'rxjs';\r\nimport { takeUntil } from 'rxjs/operators';\r\nimport cloneDeep from 'clone-deep';\r\nimport { IRegistration } from 'src/app/modules/common-registration/registration.models';\r\nimport { RegistrationService as CommonRegistrationService } from 'src/app/modules/common-registration/registration.services';\r\n\r\n@Component({\r\n  selector: 'app-compression-test-list-modal',\r\n  templateUrl: './compression-test-list-modal.page.html',\r\n  styleUrls: ['./compression-test-list-modal.page.scss']\r\n})\r\nexport class CompressionTestListModalPage implements OnInit, OnDestroy {\r\n  @Input() regId: string;\r\n\r\n  private ngDestroy$ = new Subject<void>();\r\n  private initialRegistrationClone: IRegistration;\r\n  reg: IRegistration;\r\n\r\n  set tests(val: CompressionTestEditModel[]) {\r\n    this.reg.request.CompressionTest = val;\r\n  }\r\n\r\n  constructor(\r\n    private modalController: ModalController,\r\n    private registrationService: RegistrationService,\r\n    private commonRegistrationService: CommonRegistrationService,\r\n    private ngZone: NgZone\r\n  ) {}\r\n\r\n  ngOnInit() {\r\n    this.commonRegistrationService\r\n      .getRegistrationByIdShared$(this.regId)\r\n      .pipe(takeUntil(this.ngDestroy$))\r\n      .subscribe((reg) => {\r\n        this.ngZone.run(async () => {\r\n          if (!this.initialRegistrationClone) {\r\n            this.initialRegistrationClone = cloneDeep(reg);\r\n          }\r\n          this.reg = reg;\r\n          if (!this.reg.request.CompressionTest) {\r\n            this.reg.request.CompressionTest = [];\r\n          }\r\n        });\r\n      });\r\n  }\r\n\r\n  ngOnDestroy(): void {\r\n    this.ngDestroy$.next();\r\n    this.ngDestroy$.complete();\r\n  }\r\n\r\n  async save() {\r\n    await this.registrationService.saveRegistrationAsync(this.reg);\r\n  }\r\n\r\n  ok() {\r\n    this.modalController.dismiss();\r\n  }\r\n\r\n  async cancel() {\r\n    await this.registrationService.saveRegistrationAsync(\r\n      this.initialRegistrationClone\r\n    );\r\n    this.modalController.dismiss();\r\n  }\r\n}\r\n","<ion-header>\r\n  <ion-toolbar appHeaderColor mode=\"ios\">\r\n    <ion-buttons slot=\"start\">\r\n      <ion-button (click)=\"cancel()\">{{ 'DIALOGS.CANCEL' | translate }}</ion-button>\r\n    </ion-buttons>\r\n    <ion-title>\r\n      {{ 'REGISTRATION.SNOW.SNOW_PROFILE.COMPRESSION_TEST.TITLE' | translate }}\r\n    </ion-title>\r\n  </ion-toolbar>\r\n</ion-header>\r\n<ion-content>\r\n  <form (ngSubmit)=\"ok()\">\r\n    <ng-container *ngIf=\"reg && reg.request && reg.request.CompressionTest\">\r\n      <app-compression-test-list [(tests)]=\"reg.request.CompressionTest\" (testsChange)=\"save()\"\r\n        [includeInSnowProfileAsDefault]=\"true\">\r\n      </app-compression-test-list>\r\n    </ng-container>\r\n    <ion-grid class=\"ion-no-padding\">\r\n      <ion-row>\r\n        <ion-col size=\"6\" offset=\"3\">\r\n          <ion-button type=\"submit\" expand=\"block\" fill=\"solid\" color=\"primary\">\r\n            {{'DIALOGS.OK' | translate}}\r\n          </ion-button>\r\n        </ion-col>\r\n      </ion-row>\r\n    </ion-grid>\r\n  </form>\r\n</ion-content>","import { Component, Input } from '@angular/core';\r\nimport { CompressionTestListModalPage } from './compression-test-list-modal/compression-test-list-modal.page';\r\nimport { ModalController } from '@ionic/angular';\r\nimport { IRegistration } from 'src/app/modules/common-registration/registration.models';\r\nimport { RegistrationService } from '../../../../services/registration.service';\r\nimport { CompressionTestEditModel } from '@varsom-regobs-common/regobs-api';\r\n\r\n@Component({\r\n  selector: 'app-compression-test',\r\n  templateUrl: './compression-test.component.html',\r\n  styleUrls: ['./compression-test.component.scss']\r\n})\r\nexport class CompressionTestComponent {\r\n  @Input() reg: IRegistration;\r\n  private compressionTestListModal: HTMLIonModalElement;\r\n\r\n  get connectedTests(): CompressionTestEditModel[] {\r\n    return this.tests.filter((t) => t.IncludeInSnowProfile === true);\r\n  }\r\n\r\n  get tests(): CompressionTestEditModel[] {\r\n    return this.reg.request.CompressionTest || [];\r\n  }\r\n\r\n  get isEmpty(): boolean {\r\n    return this.connectedTests.length === 0;\r\n  }\r\n\r\n  constructor(\r\n    private modalContoller: ModalController,\r\n    private registrationService: RegistrationService\r\n  ) {}\r\n\r\n  async openModal(): Promise<void> {\r\n    if (!this.compressionTestListModal) {\r\n      await this.registrationService.saveRegistrationAsync(this.reg); // Save registration before open modal page\r\n      this.compressionTestListModal = await this.modalContoller.create({\r\n        component: CompressionTestListModalPage,\r\n        componentProps: {\r\n          regId: this.reg.id\r\n        }\r\n      });\r\n      this.compressionTestListModal.present();\r\n      await this.compressionTestListModal.onDidDismiss();\r\n      this.compressionTestListModal = null;\r\n    }\r\n  }\r\n}\r\n","<ion-item tabindex=\"0\" class=\"summary-item\" (click)=\"openModal()\" (keyup.enter)=\"openModal()\">\r\n  <ion-label class=\"ion-padding-vertical ion-padding-end\">\r\n    <h2>{{ 'REGISTRATION.SNOW.SNOW_PROFILE.COMPRESSION_TEST.TITLE' | translate}}</h2>\r\n    <p>\r\n      <ion-text>\r\n        <ng-container *ngIf=\"(tests && tests.length > 0) else empty\">\r\n          {{ connectedTests.length  }} / {{ tests.length  }}\r\n        </ng-container>\r\n        {{'REGISTRATION.SNOW.SNOW_PROFILE.COMPRESSION_TEST.MULTIPLE_TESTS' | translate}}\r\n        {{'REGISTRATION.SNOW.SNOW_PROFILE.COMPRESSION_TEST.ATTACHED' | translate}}\r\n      </ion-text>\r\n    </p>\r\n  </ion-label>\r\n  <ion-icon *ngIf=\"!isEmpty\" slot=\"end\" color=\"success\" name=\"checkmark-circle\"></ion-icon>\r\n</ion-item>\r\n<ng-template #empty>\r\n  {{'REGISTRATION.SNOW.SNOW_PROFILE.COMPRESSION_TEST.EMPTY' | translate}}\r\n</ng-template>","import { NgModule } from '@angular/core';\r\nimport { SnowDensityLayerModalPage } from './snow-density-layer-modal.page';\r\nimport { SharedComponentsModule } from '../../../../../shared-components.module';\r\n\r\n@NgModule({\r\n  imports: [SharedComponentsModule],\r\n  declarations: [SnowDensityLayerModalPage],\r\n  entryComponents: [SnowDensityLayerModalPage]\r\n})\r\nexport class SnowDensityLayerModalPageModule {}\r\n","import { Component, OnInit, Input } from '@angular/core';\r\nimport { ModalController } from '@ionic/angular';\r\nimport { SnowDensityLayerModel } from '@varsom-regobs-common/regobs-api';\r\nimport { HydrologyHelper } from '../../../../../../../core/helpers/hydrology-helper';\r\nimport { IRegistration } from 'src/app/modules/common-registration/registration.models';\r\nimport cloneDeep from 'clone-deep';\r\nimport { RegistrationService } from '../../../../../services/registration.service';\r\n\r\n@Component({\r\n  selector: 'app-snow-density-layer-modal',\r\n  templateUrl: './snow-density-layer-modal.page.html',\r\n  styleUrls: ['./snow-density-layer-modal.page.scss']\r\n})\r\nexport class SnowDensityLayerModalPage implements OnInit {\r\n  @Input() reg: IRegistration;\r\n  @Input() layer: SnowDensityLayerModel;\r\n  @Input() useCylinder = true;\r\n  @Input() cylinderDiameterInM: number;\r\n  @Input() tareWeight: number;\r\n  @Input() index: number;\r\n  addNew: boolean;\r\n  private initialRegistrationState: IRegistration;\r\n\r\n  constructor(\r\n    private modalController: ModalController,\r\n    private registrationService: RegistrationService\r\n  ) {}\r\n\r\n  ngOnInit() {\r\n    this.initialRegistrationState = cloneDeep(this.reg);\r\n    this.initLayer();\r\n  }\r\n\r\n  private initLayer() {\r\n    this.addNew = this.layer === undefined;\r\n    if (this.addNew) {\r\n      this.layer = {};\r\n    }\r\n    this.calculate();\r\n  }\r\n\r\n  get hasLayers() {\r\n    return (\r\n      this.reg &&\r\n      this.reg.request &&\r\n      this.reg.request.SnowProfile2 &&\r\n      this.reg.request.SnowProfile2.SnowDensity &&\r\n      this.reg.request.SnowProfile2.SnowDensity[0] &&\r\n      this.reg.request.SnowProfile2.SnowDensity[0].Layers &&\r\n      this.reg.request.SnowProfile2.SnowDensity[0].Layers.length > 0\r\n    );\r\n  }\r\n\r\n  get layerLenght() {\r\n    return this.hasLayers\r\n      ? this.reg.request.SnowProfile2.SnowDensity[0].Layers.length\r\n      : 0;\r\n  }\r\n\r\n  get canGoNext() {\r\n    return (\r\n      (this.hasLayers && this.index < this.layerLenght) ||\r\n      (this.index === this.layerLenght &&\r\n        this.addNew &&\r\n        !this.isEmpty(this.layer))\r\n    );\r\n  }\r\n\r\n  private isEmpty(snowDensityLayer: SnowDensityLayerModel) {\r\n    return this.useCylinder\r\n      ? snowDensityLayer.Thickness === undefined &&\r\n          snowDensityLayer.Weight === undefined\r\n      : snowDensityLayer.Density === undefined;\r\n  }\r\n\r\n  async ok(gotoIndex?: number) {\r\n    if (!this.reg.request.SnowProfile2) {\r\n      this.reg.request.SnowProfile2 = {};\r\n    }\r\n    if (!this.reg.request.SnowProfile2.SnowDensity) {\r\n      this.reg.request.SnowProfile2.SnowDensity = [];\r\n    }\r\n    if (!this.reg.request.SnowProfile2.SnowDensity[0].Layers) {\r\n      this.reg.request.SnowProfile2.SnowDensity[0].Layers = [];\r\n    }\r\n    if (this.addNew && !this.isEmpty(this.layer)) {\r\n      this.reg.request.SnowProfile2.SnowDensity[0].Layers.splice(\r\n        this.index,\r\n        0,\r\n        this.layer\r\n      );\r\n    }\r\n    await this.registrationService.saveRegistrationAsync(this.reg);\r\n\r\n    if (gotoIndex !== undefined) {\r\n      this.index = this.index + gotoIndex;\r\n      this.layer = this.reg.request.SnowProfile2.SnowDensity[0].Layers[\r\n        this.index\r\n      ];\r\n      this.initLayer();\r\n    } else {\r\n      this.modalController.dismiss();\r\n    }\r\n  }\r\n\r\n  async cancel() {\r\n    await this.registrationService.saveRegistrationAsync(\r\n      this.initialRegistrationState\r\n    );\r\n    this.modalController.dismiss();\r\n  }\r\n\r\n  async delete() {\r\n    if (\r\n      this.reg &&\r\n      this.reg.request &&\r\n      this.reg.request.SnowProfile2 &&\r\n      this.reg.request.SnowProfile2.SnowDensity &&\r\n      this.reg.request.SnowProfile2.SnowDensity.length > 0 &&\r\n      this.reg.request.SnowProfile2.SnowDensity[0].Layers &&\r\n      this.reg.request.SnowProfile2.SnowDensity[0].Layers.length > 0\r\n    ) {\r\n      this.reg.request.SnowProfile2.SnowDensity[0].Layers = this.reg.request.SnowProfile2.SnowDensity[0].Layers.filter(\r\n        (l) => l !== this.layer\r\n      );\r\n      await this.registrationService.saveRegistrationAsync(this.reg);\r\n    }\r\n    this.modalController.dismiss();\r\n  }\r\n\r\n  calculate() {\r\n    if (this.useCylinder) {\r\n      this.layer.Density = HydrologyHelper.calculateDensity(\r\n        this.layer.Weight,\r\n        this.layer.Thickness,\r\n        this.tareWeight,\r\n        this.cylinderDiameterInM\r\n      );\r\n    }\r\n  }\r\n\r\n  getWaterEquivalent(density: number, depth: number) {\r\n    return HydrologyHelper.calculateWaterEquivalent(density, depth);\r\n  }\r\n}\r\n","<ion-header>\r\n  <ion-toolbar appHeaderColor mode=\"ios\">\r\n    <ion-buttons slot=\"start\">\r\n      <ion-button (click)=\"cancel()\">{{ 'DIALOGS.CANCEL' | translate }}</ion-button>\r\n    </ion-buttons>\r\n    <ion-title>\r\n      {{ 'REGISTRATION.SNOW.SNOW_PROFILE.SNOW_DENSITY.TITLE' | translate }}\r\n    </ion-title>\r\n  </ion-toolbar>\r\n</ion-header>\r\n<ion-content>\r\n  <form (ngSubmit)=\"ok()\">\r\n    <ion-list lines=\"full\">\r\n      <ion-list-header class=\"ion-text-uppercase\">\r\n        <ion-label>\r\n          {{ 'REGISTRATION.SNOW.SNOW_PROFILE.SNOW_DENSITY.TITLE' | translate}}\r\n        </ion-label>\r\n      </ion-list-header>\r\n      <ng-container *ngIf=\"useCylinder else noCylinder\">\r\n        <app-numeric-input [(value)]=\"layer.Thickness\" title=\"REGISTRATION.SNOW.SNOW_PROFILE.SNOW_DENSITY.HEIGHT\"\r\n          [max]=\"999\" [min]=\"0\" suffix=\"cm\" [decimalPlaces]=\"2\" (valueChange)=\"calculate()\" [convertRatio]=\"100\">\r\n        </app-numeric-input>\r\n        <app-numeric-input [(value)]=\"layer.Weight\" title=\"REGISTRATION.SNOW.SNOW_PROFILE.SNOW_DENSITY.WEIGHT\"\r\n          [max]=\"9999\" [min]=\"0\" [convertRatio]=\"1000\" suffix=\"g\" [decimalPlaces]=\"2\" (valueChange)=\"calculate()\">\r\n        </app-numeric-input>\r\n        <ion-item>\r\n          <ion-label position=\"stacked\" color=\"medium\" class=\"ion-text-uppercase\">\r\n            {{ 'REGISTRATION.SNOW.SNOW_PROFILE.SNOW_DENSITY.TITLE' | translate}}\r\n          </ion-label>\r\n          <ion-text class=\"ion-align-self-start\">\r\n            <ng-container *ngIf=\"layer.Density\">{{ layer.Density | number:'1.0-2' }} kg/m³</ng-container>\r\n          </ion-text>\r\n        </ion-item>\r\n        <ion-item>\r\n          <ion-label position=\"stacked\" color=\"medium\" class=\"ion-text-uppercase\">\r\n            {{'REGISTRATION.SNOW.SNOW_PROFILE.SNOW_DENSITY.WATER_EQUIVALENT' | translate}}\r\n          </ion-label>\r\n          <ion-text class=\"ion-align-self-start\">\r\n            <ng-container *ngIf=\"layer.Density && layer.Thickness\">\r\n              {{ getWaterEquivalent(layer.Density, layer.Thickness) | number:'1.0-2' }} mm</ng-container>\r\n          </ion-text>\r\n        </ion-item>\r\n      </ng-container>\r\n    </ion-list>\r\n    <ion-grid class=\"ion-no-padding\">\r\n      <ion-row>\r\n        <ion-col size=\"6\">\r\n          <ion-button [disabled]=\"index === 0\" expand=\"block\" fill=\"outline\" color=\"primary\" (click)=\"ok(-1)\">\r\n            <ion-icon slot=\"start\" name=\"arrow-back\"></ion-icon>\r\n            <ion-text>{{ 'DIALOGS.PREVIOUS' | translate }}</ion-text>\r\n          </ion-button>\r\n        </ion-col>\r\n        <ion-col size=\"6\">\r\n          <ion-button [disabled]=\"!canGoNext\" expand=\"block\" fill=\"outline\" color=\"primary\" (click)=\"ok(1)\">\r\n            <ion-icon slot=\"end\" name=\"arrow-forward\"></ion-icon>\r\n            <ion-text>{{ 'DIALOGS.NEXT' | translate }}</ion-text>\r\n          </ion-button>\r\n        </ion-col>\r\n      </ion-row>\r\n      <ion-row>\r\n        <ion-col size=\"12\">\r\n          <ion-button type=\"submit\" expand=\"block\" fill=\"solid\" color=\"primary\">\r\n            {{ 'DIALOGS.OK_BACK' | translate }}\r\n          </ion-button>\r\n        </ion-col>\r\n      </ion-row>\r\n      <ion-row *ngIf=\"!addNew\">\r\n        <ion-col size=\"6\" offset=\"3\">\r\n          <ion-button (click)=\"delete()\" size=\"small\" fill=\"clear\" expand=\"block\">\r\n            <ion-icon slot=\"start\" name=\"trash\"></ion-icon>\r\n            {{ 'DIALOGS.DELETE' | translate }}\r\n          </ion-button>\r\n        </ion-col>\r\n      </ion-row>\r\n    </ion-grid>\r\n  </form>\r\n</ion-content>\r\n<ng-template #noCylinder>\r\n  <app-numeric-input [(value)]=\"layer.Thickness\" title=\"REGISTRATION.SNOW.SNOW_PROFILE.SNOW_DENSITY.HEIGHT\" [max]=\"999\"\r\n    [min]=\"0\" suffix=\"cm\" [decimalPlaces]=\"2\" (valueChange)=\"calculate()\" [convertRatio]=\"100\">\r\n  </app-numeric-input>\r\n  <app-numeric-input [(value)]=\"layer.Density\" title=\"REGISTRATION.SNOW.SNOW_PROFILE.SNOW_DENSITY.DENSITY\" [max]=\"9999\"\r\n    [min]=\"0\" suffix=\"kg/m³\" [decimalPlaces]=\"3\"></app-numeric-input>\r\n</ng-template>","import { NgModule } from '@angular/core';\r\nimport { SnowDensityModalPage } from './snow-density-modal.page';\r\nimport { SharedComponentsModule } from '../../../../../shared-components.module';\r\nimport { SnowDensityLayerModalPageModule } from '../snow-density-layer-modal/snow-density-layer-modal.module';\r\n\r\n@NgModule({\r\n  imports: [SharedComponentsModule, SnowDensityLayerModalPageModule],\r\n  declarations: [SnowDensityModalPage],\r\n  entryComponents: [SnowDensityModalPage]\r\n})\r\nexport class SnowDensityModalPageModule {}\r\n","import { Component, OnInit, Input, NgZone, OnDestroy } from '@angular/core';\r\nimport { ModalController } from '@ionic/angular';\r\nimport { SnowDensityLayerModel } from '@varsom-regobs-common/regobs-api';\r\nimport { SnowDensityLayerModalPage } from '../snow-density-layer-modal/snow-density-layer-modal.page';\r\nimport { ItemReorderEventDetail } from '@ionic/core';\r\nimport { ArrayHelper } from '../../../../../../../core/helpers/array-helper';\r\nimport { HydrologyHelper } from '../../../../../../../core/helpers/hydrology-helper';\r\nimport { RegistrationService } from '../../../../../services/registration.service';\r\nimport { takeUntil } from 'rxjs/operators';\r\nimport { Subject } from 'rxjs';\r\nimport { IRegistration } from 'src/app/modules/common-registration/registration.models';\r\nimport cloneDeep from 'clone-deep';\r\nimport { RegistrationService as CommonRegistrationService } from 'src/app/modules/common-registration/registration.services';\r\n\r\n@Component({\r\n  selector: 'app-snow-density-modal',\r\n  templateUrl: './snow-density-modal.page.html',\r\n  styleUrls: ['./snow-density-modal.page.scss']\r\n})\r\nexport class SnowDensityModalPage implements OnInit, OnDestroy {\r\n  @Input() regId: string;\r\n  useCylinder: boolean;\r\n  private layerModal: HTMLIonModalElement;\r\n  private ngDestroy$ = new Subject<void>();\r\n  private reg: IRegistration;\r\n  private initialRegistrationClone: IRegistration;\r\n\r\n  get profile() {\r\n    if (\r\n      this.reg &&\r\n      this.reg.request &&\r\n      this.reg.request.SnowProfile2 &&\r\n      this.reg.request.SnowProfile2.SnowDensity &&\r\n      this.reg.request.SnowProfile2.SnowDensity.length > 0\r\n    ) {\r\n      return this.reg.request.SnowProfile2.SnowDensity[0];\r\n    }\r\n    return {};\r\n  }\r\n\r\n  get hasLayers() {\r\n    return (\r\n      this.profile && this.profile.Layers && this.profile.Layers.length > 0\r\n    );\r\n  }\r\n\r\n  constructor(\r\n    private modalController: ModalController,\r\n    private registrationService: RegistrationService,\r\n    private commonRegistrationService: CommonRegistrationService,\r\n    private ngZone: NgZone\r\n  ) {}\r\n\r\n  async ngOnInit() {\r\n    this.commonRegistrationService\r\n      .getRegistrationByIdShared$(this.regId)\r\n      .pipe(takeUntil(this.ngDestroy$))\r\n      .subscribe((reg) => {\r\n        this.ngZone.run(async () => {\r\n          if (!this.initialRegistrationClone) {\r\n            this.initialRegistrationClone = cloneDeep(reg);\r\n          }\r\n          this.reg = reg;\r\n          if (!this.reg.request.SnowProfile2) {\r\n            this.reg.request.SnowProfile2 = {};\r\n          }\r\n          if (!this.reg.request.SnowProfile2.SnowDensity) {\r\n            this.reg.request.SnowProfile2.SnowDensity = [];\r\n          }\r\n          if (!this.reg.request.SnowProfile2.SnowDensity[0]) {\r\n            this.reg.request.SnowProfile2.SnowDensity[0] = {};\r\n          }\r\n          if (!this.reg.request.SnowProfile2.SnowDensity[0].Layers) {\r\n            this.reg.request.SnowProfile2.SnowDensity[0].Layers = [];\r\n          }\r\n          if (this.useCylinder === undefined) {\r\n            this.useCylinder =\r\n              !!this.reg.request.SnowProfile2.SnowDensity[0].CylinderDiameter ||\r\n              !!this.reg.request.SnowProfile2.SnowDensity[0].TareWeight ||\r\n              this.reg.request.SnowProfile2.SnowDensity[0].Layers.length ===\r\n                0 ||\r\n              this.reg.request.SnowProfile2.SnowDensity[0].Layers.some(\r\n                (l) => !!l.Weight\r\n              );\r\n          }\r\n          this.recalculateLayers();\r\n        });\r\n      });\r\n  }\r\n\r\n  ngOnDestroy(): void {\r\n    this.ngDestroy$.next();\r\n    this.ngDestroy$.complete();\r\n  }\r\n\r\n  ok() {\r\n    this.modalController.dismiss(this.profile);\r\n  }\r\n\r\n  async cancel() {\r\n    await this.registrationService.saveRegistrationAsync(\r\n      this.initialRegistrationClone\r\n    );\r\n    this.modalController.dismiss();\r\n  }\r\n\r\n  addLayerTop() {\r\n    this.addOrEditLayer(0, undefined);\r\n  }\r\n\r\n  addLayerBottom() {\r\n    this.addOrEditLayer(\r\n      this.hasLayers ? this.profile.Layers.length : 0,\r\n      undefined\r\n    );\r\n  }\r\n\r\n  async addOrEditLayer(index: number, layer: SnowDensityLayerModel) {\r\n    if (!this.layerModal) {\r\n      this.layerModal = await this.modalController.create({\r\n        component: SnowDensityLayerModalPage,\r\n        componentProps: {\r\n          reg: this.reg,\r\n          layer: layer,\r\n          useCylinder: this.useCylinder,\r\n          cylinderDiameterInM: this.profile.CylinderDiameter,\r\n          tareWeight: this.profile.TareWeight,\r\n          index\r\n        }\r\n      });\r\n      this.layerModal.present();\r\n      await this.layerModal.onDidDismiss();\r\n      this.layerModal = null;\r\n      this.recalculateLayers();\r\n    }\r\n  }\r\n\r\n  onLayerReorder(event: CustomEvent<ItemReorderEventDetail>) {\r\n    this.profile.Layers = ArrayHelper.reorderList(\r\n      this.profile.Layers,\r\n      event.detail.from,\r\n      event.detail.to\r\n    );\r\n    event.detail.complete();\r\n  }\r\n\r\n  recalculateLayers() {\r\n    if (this.useCylinder && this.hasLayers) {\r\n      this.profile.Layers.forEach((layer: SnowDensityLayerModel) => {\r\n        layer.Density = HydrologyHelper.calculateDensity(\r\n          layer.Weight,\r\n          layer.Thickness,\r\n          this.profile.TareWeight,\r\n          this.profile.CylinderDiameter\r\n        );\r\n      });\r\n    }\r\n  }\r\n\r\n  async recalculateLayersAndSave() {\r\n    this.recalculateLayers();\r\n    await this.registrationService.saveRegistrationAsync(this.reg);\r\n  }\r\n\r\n  getWaterEquivalent(density: number, depth: number) {\r\n    return HydrologyHelper.calculateWaterEquivalent(density, depth);\r\n  }\r\n}\r\n","<ion-header>\r\n  <ion-toolbar appHeaderColor mode=\"ios\">\r\n    <ion-buttons slot=\"start\">\r\n      <ion-button (click)=\"cancel()\">{{ 'DIALOGS.CANCEL' | translate }}</ion-button>\r\n    </ion-buttons>\r\n    <ion-title>\r\n      {{ 'REGISTRATION.SNOW.SNOW_PROFILE.SNOW_DENSITY.TITLE' | translate }}\r\n    </ion-title>\r\n  </ion-toolbar>\r\n</ion-header>\r\n<ion-content>\r\n  <form (ngSubmit)=\"ok()\">\r\n    <ion-list lines=\"full\">\r\n      <ion-list-header class=\"ion-text-uppercase\">\r\n        <ion-label>\r\n          {{ 'REGISTRATION.SNOW.SNOW_PROFILE.SNOW_DENSITY.METHOD' | translate}}\r\n        </ion-label>\r\n      </ion-list-header>\r\n      <ion-item>\r\n        <ion-label>\r\n          {{'REGISTRATION.SNOW.SNOW_PROFILE.SNOW_DENSITY.CYLINDER_METHOD' | translate}}\r\n        </ion-label>\r\n        <ion-toggle slot=\"end\" [(ngModel)]=\"useCylinder\" name=\"useCylinder\"></ion-toggle>\r\n      </ion-item>\r\n      <ng-container *ngIf=\"useCylinder\">\r\n        <ion-list-header class=\"ion-text-uppercase\">\r\n          <ion-label>\r\n            {{ 'REGISTRATION.SNOW.SNOW_PROFILE.SNOW_DENSITY.CYLINDER' | translate }}\r\n          </ion-label>\r\n        </ion-list-header>\r\n        <app-numeric-input [(value)]=\"profile.CylinderDiameter\"\r\n          title=\"REGISTRATION.SNOW.SNOW_PROFILE.SNOW_DENSITY.CYLINDER_DIAMETER\" [max]=\"999\" [min]=\"0\" suffix=\"cm\"\r\n          [decimalPlaces]=\"2\" (valueChange)=\"recalculateLayersAndSave()\" [convertRatio]=\"100\"></app-numeric-input>\r\n        <app-numeric-input [(value)]=\"profile.TareWeight\" (valueChange)=\"recalculateLayersAndSave()\"\r\n          title=\"REGISTRATION.SNOW.SNOW_PROFILE.SNOW_DENSITY.TARE_WEIGHT\" [max]=\"999\" [min]=\"0\" suffix=\"g\"\r\n          [decimalPlaces]=\"2\" [convertRatio]=\"1000\"></app-numeric-input>\r\n      </ng-container>\r\n      <ion-list-header class=\"ion-text-uppercase\">\r\n        <ion-label>\r\n          {{ 'REGISTRATION.SNOW.SNOW_PROFILE.SNOW_DENSITY.LAYER' | translate }}\r\n        </ion-label>\r\n      </ion-list-header>\r\n      <ng-container *ngIf=\"hasLayers else noLayers\">\r\n        <ion-item tabindex=\"0\" (click)=\"addLayerTop()\" (keyup.enter)=\"addLayerTop()\">\r\n          <ion-icon color=\"primary\" name=\"add-circle-outline\" slot=\"start\"></ion-icon>\r\n          <ion-label>{{'REGISTRATION.SNOW.SNOW_PROFILE.STRAT_PROFILE.ADD_LAYER_TOP' | translate}}</ion-label>\r\n        </ion-item>\r\n        <ion-reorder-group disabled=\"false\" (ionItemReorder)=\"onLayerReorder($event)\">\r\n          <ion-item tabindex=\"0\" (click)=\"addOrEditLayer(i, layer)\" (keyup.enter)=\"addOrEditLayer(i, layer)\"\r\n            *ngFor=\"let layer of profile.Layers; let i = index\">\r\n            <ion-label>\r\n              <ion-text *ngIf=\"layer.Thickness !== undefined\">\r\n                {{layer.Thickness | metersToCm }}cm\r\n              </ion-text>\r\n              <ion-text *ngIf=\"layer.Weight !== undefined\">\r\n                {{layer.Weight * 1000 }}g\r\n              </ion-text>\r\n              <ion-text *ngIf=\"layer.Density !== undefined\">\r\n                {{ layer.Density | number:'1.0-2' }}kg/m³\r\n              </ion-text>\r\n              <ion-text *ngIf=\"useCylinder && layer.Density !== undefined && layer.Thickness !== undefined\">\r\n                ({{ getWaterEquivalent(layer.Density, layer.Thickness) | number:'1.0-2' }}mm)\r\n              </ion-text>\r\n            </ion-label>\r\n            <ion-reorder slot=\"end\"></ion-reorder>\r\n          </ion-item>\r\n        </ion-reorder-group>\r\n        <ion-item tabindex=\"0\" (click)=\"addLayerBottom()\" (keyup.enter)=\"addLayerBottom()\">\r\n          <ion-icon color=\"primary\" name=\"add-circle-outline\" slot=\"start\"></ion-icon>\r\n          <ion-label>{{'REGISTRATION.SNOW.SNOW_PROFILE.STRAT_PROFILE.ADD_LAYER_BOTTOM' | translate}}</ion-label>\r\n        </ion-item>\r\n      </ng-container>\r\n    </ion-list>\r\n    <ion-grid class=\"ion-no-padding\">\r\n      <ion-row>\r\n        <ion-col size=\"6\" offset=\"3\">\r\n          <ion-button type=\"submit\" expand=\"block\" fill=\"solid\" color=\"primary\">\r\n            {{'DIALOGS.OK' | translate}}\r\n          </ion-button>\r\n        </ion-col>\r\n      </ion-row>\r\n    </ion-grid>\r\n  </form>\r\n</ion-content>\r\n<ng-template #noLayers>\r\n  <ion-item tabindex=\"0\" (click)=\"addLayerBottom()\" (keyup.enter)=\"addLayerBottom()\">\r\n    <ion-icon color=\"primary\" name=\"add-circle-outline\" slot=\"start\"></ion-icon>\r\n    <ion-label>{{'REGISTRATION.SNOW.SNOW_PROFILE.STRAT_PROFILE.ADD_LAYER' | translate}}</ion-label>\r\n  </ion-item>\r\n</ng-template>","import { Component, Input } from '@angular/core';\r\nimport { SnowDensityModel } from '@varsom-regobs-common/regobs-api';\r\nimport { ModalController } from '@ionic/angular';\r\nimport { SnowDensityModalPage } from './snow-density-modal/snow-density-modal.page';\r\nimport { IRegistration } from 'src/app/modules/common-registration/registration.models';\r\nimport { RegistrationService } from '../../../../services/registration.service';\r\nimport { isEmpty } from '@varsom-regobs-common/core';\r\n\r\n@Component({\r\n  selector: 'app-snow-density',\r\n  templateUrl: './snow-density.component.html',\r\n  styleUrls: ['./snow-density.component.scss']\r\n})\r\nexport class SnowDensityComponent {\r\n  @Input() reg: IRegistration;\r\n  private densityModal: HTMLIonModalElement;\r\n\r\n  get profiles(): SnowDensityModel[] {\r\n    if (\r\n      this.reg &&\r\n      this.reg.request &&\r\n      this.reg.request.SnowProfile2 &&\r\n      this.reg.request.SnowProfile2.SnowDensity &&\r\n      this.reg.request.SnowProfile2.SnowDensity.length > 0\r\n    ) {\r\n      return this.reg.request.SnowProfile2.SnowDensity;\r\n    }\r\n    return [];\r\n  }\r\n\r\n  get isEmpty(): boolean {\r\n    return isEmpty(this.profiles);\r\n  }\r\n\r\n  constructor(\r\n    private modalContoller: ModalController,\r\n    private registrationService: RegistrationService\r\n  ) {}\r\n\r\n  async openModal(): Promise<void> {\r\n    if (!this.densityModal) {\r\n      await this.registrationService.saveRegistrationAsync(this.reg); // Save registration before open modal page\r\n      this.densityModal = await this.modalContoller.create({\r\n        component: SnowDensityModalPage,\r\n        componentProps: {\r\n          regId: this.reg.id\r\n        }\r\n      });\r\n      this.densityModal.present();\r\n      await this.densityModal.onDidDismiss();\r\n      this.densityModal = null;\r\n    }\r\n  }\r\n}\r\n","<ion-item tabindex=\"0\" class=\"summary-item\" (click)=\"openModal()\" (keyup.enter)=\"openModal()\">\r\n  <ion-label class=\"ion-padding-vertical ion-padding-end\">\r\n    <h2>{{ 'REGISTRATION.SNOW.SNOW_PROFILE.SNOW_DENSITY.TITLE' | translate}}</h2>\r\n    <p>\r\n      <ion-text *ngIf=\"!isEmpty else empty\">{{profiles[0].Layers ? profiles[0].Layers.length : 0 }}\r\n        <ng-container *ngIf=\"profiles[0].Layers.length === 1 else multiple\">\r\n          {{'REGISTRATION.SNOW.SNOW_PROFILE.SNOW_DENSITY.ONE_LAYER' | translate}}\r\n        </ng-container>\r\n      </ion-text>\r\n    </p>\r\n  </ion-label>\r\n  <ion-icon *ngIf=\"!isEmpty\" slot=\"end\" color=\"success\" name=\"checkmark-circle\"></ion-icon>\r\n</ion-item>\r\n<ng-template #empty>\r\n  {{'REGISTRATION.SNOW.SNOW_PROFILE.SNOW_DENSITY.EMPTY' | translate}}\r\n</ng-template>\r\n<ng-template #multiple>\r\n  {{'REGISTRATION.SNOW.SNOW_PROFILE.SNOW_DENSITY.MULTIPLE_LAYERS' | translate}}\r\n</ng-template>","import { NgModule } from '@angular/core';\r\nimport { SnowTempLayerModalPage } from './snow-temp-layer-modal.page';\r\nimport { SharedComponentsModule } from '../../../../../shared-components.module';\r\n\r\n@NgModule({\r\n  imports: [SharedComponentsModule],\r\n  declarations: [SnowTempLayerModalPage],\r\n  entryComponents: [SnowTempLayerModalPage]\r\n})\r\nexport class SnowTempLayerModalPageModule {}\r\n","import { Component, OnInit, Input } from '@angular/core';\r\nimport { SnowTempObsModel } from '@varsom-regobs-common/regobs-api';\r\nimport { ModalController } from '@ionic/angular';\r\nimport { IRegistration } from 'src/app/modules/common-registration/registration.models';\r\nimport { IsEmptyHelper } from '../../../../../../../core/helpers/is-empty.helper';\r\nimport { RegistrationService } from '../../../../../services/registration.service';\r\nimport cloneDeep from 'clone-deep';\r\n\r\n@Component({\r\n  selector: 'app-snow-temp-layer-modal',\r\n  templateUrl: './snow-temp-layer-modal.page.html',\r\n  styleUrls: ['./snow-temp-layer-modal.page.scss']\r\n})\r\nexport class SnowTempLayerModalPage implements OnInit {\r\n  @Input() layer: SnowTempObsModel;\r\n  @Input() index: number;\r\n  @Input() reg: IRegistration;\r\n  addNew: boolean;\r\n\r\n  private initialRegistrationState: IRegistration;\r\n\r\n  constructor(\r\n    private modalController: ModalController,\r\n    private registrationService: RegistrationService\r\n  ) {}\r\n\r\n  ngOnInit() {\r\n    this.initialRegistrationState = cloneDeep(this.reg);\r\n    this.initLayer();\r\n  }\r\n\r\n  private initLayer() {\r\n    this.addNew = this.layer === undefined;\r\n    if (this.addNew) {\r\n      this.layer = {};\r\n    }\r\n  }\r\n\r\n  get hasLayers() {\r\n    return (\r\n      this.reg &&\r\n      this.reg.request &&\r\n      this.reg.request.SnowProfile2 &&\r\n      this.reg.request.SnowProfile2.SnowTemp &&\r\n      this.reg.request.SnowProfile2.SnowTemp.Layers &&\r\n      this.reg.request.SnowProfile2.SnowTemp.Layers.length > 0\r\n    );\r\n  }\r\n\r\n  get layerLenght() {\r\n    return this.hasLayers\r\n      ? this.reg.request.SnowProfile2.SnowTemp.Layers.length\r\n      : 0;\r\n  }\r\n\r\n  get canGoNext() {\r\n    return (\r\n      (this.hasLayers && this.index < this.layerLenght) ||\r\n      (this.index === this.layerLenght &&\r\n        this.addNew &&\r\n        !IsEmptyHelper.isEmpty(this.layer))\r\n    );\r\n  }\r\n\r\n  async ok(gotoIndex?: number) {\r\n    if (!this.reg.request.SnowProfile2) {\r\n      this.reg.request.SnowProfile2 = {};\r\n    }\r\n    if (!this.reg.request.SnowProfile2.SnowTemp) {\r\n      this.reg.request.SnowProfile2.SnowTemp = {};\r\n    }\r\n    if (!this.reg.request.SnowProfile2.SnowTemp.Layers) {\r\n      this.reg.request.SnowProfile2.SnowTemp.Layers = [];\r\n    }\r\n    if (this.addNew && !IsEmptyHelper.isEmpty(this.layer)) {\r\n      this.reg.request.SnowProfile2.SnowTemp.Layers.splice(\r\n        this.index,\r\n        0,\r\n        this.layer\r\n      );\r\n    }\r\n    await this.registrationService.saveRegistrationAsync(this.reg);\r\n\r\n    if (gotoIndex !== undefined) {\r\n      this.index = this.index + gotoIndex;\r\n      this.layer = this.reg.request.SnowProfile2.SnowTemp.Layers[this.index];\r\n      this.initLayer();\r\n    } else {\r\n      this.modalController.dismiss();\r\n    }\r\n  }\r\n\r\n  async cancel() {\r\n    await this.registrationService.saveRegistrationAsync(\r\n      this.initialRegistrationState\r\n    );\r\n    this.modalController.dismiss();\r\n  }\r\n\r\n  async delete() {\r\n    if (\r\n      this.reg &&\r\n      this.reg.request &&\r\n      this.reg.request.SnowProfile2 &&\r\n      this.reg.request.SnowProfile2.SnowTemp &&\r\n      this.reg.request.SnowProfile2.SnowTemp.Layers &&\r\n      this.reg.request.SnowProfile2.SnowTemp.Layers.length > 0\r\n    ) {\r\n      this.reg.request.SnowProfile2.SnowTemp.Layers = this.reg.request.SnowProfile2.SnowTemp.Layers.filter(\r\n        (l) => l !== this.layer\r\n      );\r\n      await this.registrationService.saveRegistrationAsync(this.reg);\r\n    }\r\n    this.modalController.dismiss({ delete: true });\r\n  }\r\n}\r\n","<ion-header>\r\n  <ion-toolbar appHeaderColor mode=\"ios\">\r\n    <ion-buttons slot=\"start\">\r\n      <ion-button (click)=\"cancel()\">{{ 'DIALOGS.CANCEL' | translate }}</ion-button>\r\n    </ion-buttons>\r\n    <ion-title>\r\n      {{ 'REGISTRATION.SNOW.SNOW_PROFILE.SNOW_TEMP.POINT' | translate }}\r\n    </ion-title>\r\n  </ion-toolbar>\r\n</ion-header>\r\n<ion-content>\r\n  <form (ngSubmit)=\"ok()\">\r\n    <ion-list lines=\"full\">\r\n      <ion-list-header class=\"ion-text-uppercase\">\r\n        <ion-label>\r\n          {{ 'REGISTRATION.SNOW.SNOW_PROFILE.SNOW_TEMP.POINT' | translate}}\r\n        </ion-label>\r\n      </ion-list-header>\r\n      <app-numeric-input [(value)]=\"layer.Depth\" title=\"REGISTRATION.SNOW.SNOW_PROFILE.SNOW_TEMP.DEPTH\" [max]=\"999\"\r\n        [min]=\"0\" suffix=\"cm\" [decimalPlaces]=\"2\" [convertRatio]=\"100\"></app-numeric-input>\r\n      <app-numeric-input [(value)]=\"layer.SnowTemp\" title=\"REGISTRATION.SNOW.SNOW_PROFILE.SNOW_TEMP.TEMPERATURE\"\r\n        [max]=\"0\" [min]=\"-70\" suffix=\"°C\" [decimalPlaces]=\"2\"></app-numeric-input>\r\n    </ion-list>\r\n    <ion-grid class=\"ion-no-padding\">\r\n      <ion-row>\r\n        <ion-col size=\"6\">\r\n          <ion-button [disabled]=\"index === 0\" expand=\"block\" fill=\"outline\" color=\"primary\" (click)=\"ok(-1)\">\r\n            <ion-icon slot=\"start\" name=\"arrow-back\"></ion-icon>\r\n            <ion-text>{{ 'DIALOGS.PREVIOUS' | translate }}</ion-text>\r\n          </ion-button>\r\n        </ion-col>\r\n        <ion-col size=\"6\">\r\n          <ion-button [disabled]=\"!canGoNext\" expand=\"block\" fill=\"outline\" color=\"primary\" (click)=\"ok(1)\">\r\n            <ion-icon slot=\"end\" name=\"arrow-forward\"></ion-icon>\r\n            <ion-text>{{ 'DIALOGS.NEXT' | translate }}</ion-text>\r\n          </ion-button>\r\n        </ion-col>\r\n      </ion-row>\r\n      <ion-row>\r\n        <ion-col size=\"12\">\r\n          <ion-button type=\"submit\" expand=\"block\" fill=\"solid\" color=\"primary\">\r\n            {{ 'DIALOGS.OK_BACK' | translate }}\r\n          </ion-button>\r\n        </ion-col>\r\n      </ion-row>\r\n      <ion-row *ngIf=\"!addNew\">\r\n        <ion-col size=\"6\" offset=\"3\">\r\n          <ion-button (click)=\"delete()\" size=\"small\" fill=\"clear\" expand=\"block\">\r\n            <ion-icon slot=\"start\" name=\"trash\"></ion-icon>\r\n            {{ 'DIALOGS.DELETE' | translate }}\r\n          </ion-button>\r\n        </ion-col>\r\n      </ion-row>\r\n    </ion-grid>\r\n  </form>\r\n</ion-content>","import { NgModule } from '@angular/core';\r\nimport { SnowTempModalPage } from './snow-temp-modal.page';\r\nimport { SharedComponentsModule } from '../../../../../shared-components.module';\r\nimport { SnowTempLayerModalPageModule } from '../snow-temp-layer-modal/snow-temp-layer-modal.module';\r\n\r\n@NgModule({\r\n  imports: [SharedComponentsModule, SnowTempLayerModalPageModule],\r\n  declarations: [SnowTempModalPage],\r\n  entryComponents: [SnowTempModalPage]\r\n})\r\nexport class SnowTempModalPageModule {}\r\n","import { Component, OnInit, Input, OnDestroy, NgZone } from '@angular/core';\r\nimport {\r\n  SnowTempObsModel,\r\n} from '@varsom-regobs-common/regobs-api';\r\nimport { ModalController } from '@ionic/angular';\r\nimport { SnowTempLayerModalPage } from '../snow-temp-layer-modal/snow-temp-layer-modal.page';\r\nimport { IRegistration } from 'src/app/modules/common-registration/registration.models';\r\nimport { RegistrationService } from '../../../../../services/registration.service';\r\nimport { RegistrationService as CommonRegistrationService } from 'src/app/modules/common-registration/registration.services';\r\nimport cloneDeep from 'clone-deep';\r\nimport { Subject } from 'rxjs';\r\nimport { takeUntil } from 'rxjs/operators';\r\n\r\n@Component({\r\n  selector: 'app-snow-temp-modal',\r\n  templateUrl: './snow-temp-modal.page.html',\r\n  styleUrls: ['./snow-temp-modal.page.scss']\r\n})\r\nexport class SnowTempModalPage implements OnInit, OnDestroy {\r\n  @Input() regId: string;\r\n  private layerModal: HTMLIonModalElement;\r\n  private initialRegistrationClone: IRegistration;\r\n  private reg: IRegistration;\r\n\r\n  private ngDestroy$ = new Subject<void>();\r\n\r\n  get tempProfile() {\r\n    if (\r\n      this.reg &&\r\n      this.reg.request &&\r\n      this.reg.request.SnowProfile2 &&\r\n      this.reg.request.SnowProfile2.SnowTemp\r\n    ) {\r\n      return this.reg.request.SnowProfile2.SnowTemp;\r\n    }\r\n\r\n    return {};\r\n  }\r\n\r\n  get hasLayers() {\r\n    return (\r\n      this.tempProfile &&\r\n      this.tempProfile.Layers &&\r\n      this.tempProfile.Layers.length > 0\r\n    );\r\n  }\r\n\r\n  constructor(\r\n    private modalController: ModalController,\r\n    private registrationService: RegistrationService,\r\n    private commonRegistrationService: CommonRegistrationService,\r\n    private ngZone: NgZone\r\n  ) {}\r\n\r\n  ngOnInit() {\r\n    this.commonRegistrationService\r\n      .getRegistrationByIdShared$(this.regId)\r\n      .pipe(takeUntil(this.ngDestroy$))\r\n      .subscribe((reg) => {\r\n        this.ngZone.run(() => {\r\n          if (!this.initialRegistrationClone) {\r\n            this.initialRegistrationClone = cloneDeep(reg);\r\n          }\r\n          this.reg = reg;\r\n          if (!this.reg.request.SnowProfile2) {\r\n            this.reg.request.SnowProfile2 = {};\r\n          }\r\n          if (!this.reg.request.SnowProfile2.SnowTemp) {\r\n            this.reg.request.SnowProfile2.SnowTemp = {};\r\n          }\r\n          if (!this.reg.request.SnowProfile2.SnowTemp.Layers) {\r\n            this.reg.request.SnowProfile2.SnowTemp.Layers = [];\r\n          }\r\n          this.sortLayers();\r\n        });\r\n      });\r\n    this.initialRegistrationClone = cloneDeep(this.reg);\r\n  }\r\n\r\n  ngOnDestroy(): void {\r\n    this.ngDestroy$.next();\r\n    this.ngDestroy$.complete();\r\n  }\r\n\r\n  ok() {\r\n    this.modalController.dismiss(this.tempProfile);\r\n  }\r\n\r\n  async cancel() {\r\n    await this.registrationService.saveRegistrationAsync(\r\n      this.initialRegistrationClone\r\n    );\r\n    this.modalController.dismiss();\r\n  }\r\n\r\n  addLayerBottom() {\r\n    this.addOrEditLayer(\r\n      this.hasLayers ? this.tempProfile.Layers.length : 0,\r\n      undefined\r\n    );\r\n  }\r\n\r\n  async addOrEditLayer(index: number, layer: SnowTempObsModel) {\r\n    if (!this.layerModal) {\r\n      this.layerModal = await this.modalController.create({\r\n        component: SnowTempLayerModalPage,\r\n        componentProps: {\r\n          reg: this.reg,\r\n          layer,\r\n          index\r\n        }\r\n      });\r\n      this.layerModal.present();\r\n      await this.layerModal.onDidDismiss();\r\n      this.layerModal = null;\r\n      this.sortLayers();\r\n    }\r\n  }\r\n\r\n  private sortLayers() {\r\n    if (this.tempProfile && this.tempProfile.Layers) {\r\n      this.tempProfile.Layers = this.tempProfile.Layers.sort(\r\n        (a, b) => a.Depth - b.Depth\r\n      );\r\n    }\r\n  }\r\n}\r\n","<ion-header>\r\n  <ion-toolbar appHeaderColor mode=\"ios\">\r\n    <ion-buttons slot=\"start\">\r\n      <ion-button (click)=\"cancel()\">{{ 'DIALOGS.CANCEL' | translate }}</ion-button>\r\n    </ion-buttons>\r\n    <ion-title>\r\n      {{ 'REGISTRATION.SNOW.SNOW_PROFILE.SNOW_TEMP.TITLE' | translate }}\r\n    </ion-title>\r\n  </ion-toolbar>\r\n</ion-header>\r\n<ion-content>\r\n  <form (ngSubmit)=\"ok()\">\r\n    <ion-list lines=\"full\">\r\n      <ion-list-header class=\"ion-text-uppercase\">\r\n        <ion-label>\r\n          {{ 'REGISTRATION.SNOW.SNOW_PROFILE.SNOW_TEMP.TITLE' | translate}}\r\n        </ion-label>\r\n      </ion-list-header>\r\n      <ion-item tabindex=\"0\" (click)=\"addOrEditLayer(i, layer)\" (keyup.enter)=\"addOrEditLayer(i, layer)\"\r\n        *ngFor=\"let layer of tempProfile.Layers; let i = index\">\r\n        <ion-label>\r\n          <ng-container *ngIf=\"layer.Depth !== undefined\">\r\n            {{layer.Depth | metersToCm }}cm\r\n          </ng-container>\r\n          <ng-container *ngIf=\"layer.SnowTemp !== undefined\">\r\n            {{layer.SnowTemp}}°C\r\n          </ng-container>\r\n        </ion-label>\r\n      </ion-item>\r\n      <ion-item tabindex=\"0\" (click)=\"addLayerBottom()\" (keyup.enter)=\"addLayerBottom()\">\r\n        <ion-icon color=\"primary\" name=\"add-circle-outline\" slot=\"start\"></ion-icon>\r\n        <ion-label>{{'REGISTRATION.SNOW.SNOW_PROFILE.SNOW_TEMP.ADD_LAYER_BOTTOM' | translate}}</ion-label>\r\n      </ion-item>\r\n    </ion-list>\r\n    <ion-grid class=\"ion-no-padding\">\r\n      <ion-row>\r\n        <ion-col size=\"6\" offset=\"3\">\r\n          <ion-button expand=\"block\" fill=\"solid\" color=\"primary\" type=\"submit\">\r\n            {{'DIALOGS.OK' | translate}}\r\n          </ion-button>\r\n        </ion-col>\r\n      </ion-row>\r\n    </ion-grid>\r\n  </form>\r\n</ion-content>","import { Component, OnInit, Input } from '@angular/core';\r\nimport { IsEmptyHelper } from '../../../../../../core/helpers/is-empty.helper';\r\nimport { ModalController } from '@ionic/angular';\r\nimport { SnowTempModalPage } from './snow-temp-modal/snow-temp-modal.page';\r\nimport { IRegistration } from 'src/app/modules/common-registration/registration.models';\r\nimport { RegistrationService } from '../../../../services/registration.service';\r\nimport { isEmpty } from '@varsom-regobs-common/core';\r\n\r\n@Component({\r\n  selector: 'app-snow-temp',\r\n  templateUrl: './snow-temp.component.html',\r\n  styleUrls: ['./snow-temp.component.scss']\r\n})\r\nexport class SnowTempComponent implements OnInit {\r\n  @Input() reg: IRegistration;\r\n  private snowTempModal: HTMLIonModalElement;\r\n\r\n  get tempProfile() {\r\n    if (\r\n      this.reg &&\r\n      this.reg.request &&\r\n      this.reg.request.SnowProfile2 &&\r\n      this.reg.request.SnowProfile2.SnowTemp\r\n    ) {\r\n      return this.reg.request.SnowProfile2.SnowTemp;\r\n    }\r\n    return {};\r\n  }\r\n\r\n  get isEmpty() {\r\n    return isEmpty(this.tempProfile);\r\n  }\r\n\r\n  constructor(\r\n    private modalContoller: ModalController,\r\n    private registrationService: RegistrationService\r\n  ) {}\r\n\r\n  ngOnInit() {}\r\n\r\n  async openModal() {\r\n    if (!this.snowTempModal) {\r\n      await this.registrationService.saveRegistrationAsync(this.reg); // Save registration before open modal page\r\n      this.snowTempModal = await this.modalContoller.create({\r\n        component: SnowTempModalPage,\r\n        componentProps: {\r\n          regId: this.reg.id\r\n        }\r\n      });\r\n      this.snowTempModal.present();\r\n      await this.snowTempModal.onDidDismiss();\r\n      this.snowTempModal = null;\r\n    }\r\n  }\r\n}\r\n","<ion-item tabindex=\"0\" class=\"summary-item\" (click)=\"openModal()\" (keyup.enter)=\"openModal()\">\r\n  <ion-label class=\"ion-padding-vertical ion-padding-end\">\r\n    <h2>{{ 'REGISTRATION.SNOW.SNOW_PROFILE.SNOW_TEMP.TITLE' | translate}}</h2>\r\n    <p>\r\n      <ion-text *ngIf=\"!isEmpty else empty\">\r\n        {{tempProfile.Layers ? tempProfile.Layers.length : 0 }}\r\n        <ng-container *ngIf=\"tempProfile.Layers.length === 1 else multiple\">\r\n          {{'REGISTRATION.SNOW.SNOW_PROFILE.SNOW_TEMP.ONE_LAYER' | translate}}\r\n        </ng-container>\r\n      </ion-text>\r\n    </p>\r\n  </ion-label>\r\n  <ion-icon *ngIf=\"!isEmpty\" slot=\"end\" color=\"success\" name=\"checkmark-circle\"></ion-icon>\r\n</ion-item>\r\n<ng-template #empty>\r\n  {{'REGISTRATION.SNOW.SNOW_PROFILE.SNOW_TEMP.EMPTY' | translate}}\r\n</ng-template>\r\n<ng-template #multiple>\r\n  {{'REGISTRATION.SNOW.SNOW_PROFILE.SNOW_TEMP.MULTIPLE_LAYERS' | translate}}\r\n</ng-template>","import { NgModule } from '@angular/core';\r\nimport { StratProfileLayerHistoryModalPage } from './strat-profile-layer-history-modal.page';\r\nimport { SharedComponentsModule } from '../../../../../shared-components.module';\r\n\r\n@NgModule({\r\n  imports: [SharedComponentsModule],\r\n  declarations: [StratProfileLayerHistoryModalPage],\r\n  entryComponents: [StratProfileLayerHistoryModalPage]\r\n})\r\nexport class StratProfileLayerHistoryModalPageModule {}\r\n","import { Component, OnInit, Input } from '@angular/core';\r\nimport { ModalController } from '@ionic/angular';\r\nimport { map, tap } from 'rxjs/operators';\r\nimport {\r\n  RegistrationViewModel,\r\n  StratProfileLayerViewModel,\r\n  SearchService\r\n} from '@varsom-regobs-common/regobs-api';\r\nimport { Observable, pipe } from 'rxjs';\r\nimport moment from 'moment';\r\nimport { GeoHazard } from '@varsom-regobs-common/core';\r\nimport { RegistrationTid, IRegistration } from 'src/app/modules/common-registration/registration.models';\r\nimport { RegistrationService } from '../../../../../services/registration.service';\r\n\r\n@Component({\r\n  selector: 'app-strat-profile-layer-history-modal',\r\n  templateUrl: './strat-profile-layer-history-modal.page.html',\r\n  styleUrls: ['./strat-profile-layer-history-modal.page.scss']\r\n})\r\nexport class StratProfileLayerHistoryModalPage implements OnInit {\r\n  @Input() reg: IRegistration;\r\n\r\n  isLoading = true;\r\n\r\n  $previousUsedLayers: Observable<\r\n    { id: number; date: string; layers: StratProfileLayerViewModel[] }[]\r\n  >;\r\n\r\n  constructor(\r\n    private modalController: ModalController,\r\n    private registrationService: RegistrationService,\r\n    private searchService: SearchService\r\n  ) {}\r\n\r\n  ngOnInit() {\r\n    if (this.reg && this.reg.request && this.reg.request.ObsLocation) {\r\n      this.$previousUsedLayers = this.searchService\r\n        .SearchSearch({\r\n          // ObserverGuid: this.observerGuid, TODO: Call \"my obervations\" in api instead\r\n          FromDtObsTime: moment().subtract(14, 'days').startOf('day').toISOString(),\r\n          Radius: {\r\n            Position: {\r\n              Latitude: this.reg.request.ObsLocation.Latitude,\r\n              Longitude: this.reg.request.ObsLocation.Longitude\r\n            },\r\n            Radius: 100000\r\n          },\r\n          SelectedGeoHazards: [GeoHazard.Snow],\r\n          SelectedRegistrationTypes: [\r\n            {\r\n              Id: RegistrationTid.SnowProfile2\r\n            }\r\n          ]\r\n        })\r\n        .pipe(\r\n          map((result) => this.getLayersFromSearchResult(result)),\r\n          tap(() => {\r\n            this.isLoading = false;\r\n          })\r\n        );\r\n    }\r\n  }\r\n\r\n  cancel() {\r\n    this.modalController.dismiss();\r\n  }\r\n\r\n  async selectLayer(item: {\r\n    id: number;\r\n    date: string;\r\n    layers: StratProfileLayerViewModel[];\r\n  }) {\r\n    if (!this.reg.request.SnowProfile2) {\r\n      this.reg.request.SnowProfile2 = {};\r\n    }\r\n\r\n    if (!this.reg.request.SnowProfile2.StratProfile) {\r\n      this.reg.request.SnowProfile2.StratProfile = {};\r\n    }\r\n    this.reg.request.SnowProfile2.StratProfile.Layers = item.layers;\r\n    await this.registrationService.saveRegistrationAsync(this.reg);\r\n    this.modalController.dismiss();\r\n  }\r\n\r\n  private getLayersFromSearchResult(\r\n    result: RegistrationViewModel[]\r\n  ): { id: number; date: string; layers: StratProfileLayerViewModel[] }[] {\r\n    return result\r\n      .map((reg) => {\r\n        if (\r\n          reg.SnowProfile2 !== undefined &&\r\n          reg.SnowProfile2.StratProfile !== undefined &&\r\n          reg.SnowProfile2.StratProfile !== null &&\r\n          reg.SnowProfile2.StratProfile.Layers !== undefined &&\r\n          reg.SnowProfile2.StratProfile.Layers !== null &&\r\n          reg.SnowProfile2.StratProfile.Layers.length > 0\r\n        ) {\r\n          return {\r\n            id: reg.RegId,\r\n            date: reg.DtObsTime,\r\n            layers: reg.SnowProfile2.StratProfile.Layers\r\n          };\r\n        }\r\n        return null;\r\n      })\r\n      .filter((x) => x !== null);\r\n  }\r\n}\r\n","<ion-header>\r\n  <ion-toolbar appHeaderColor mode=\"ios\">\r\n    <ion-buttons slot=\"start\">\r\n      <ion-button (click)=\"cancel()\">{{ 'DIALOGS.CANCEL' | translate }}</ion-button>\r\n    </ion-buttons>\r\n    <ion-title>\r\n      {{ 'REGISTRATION.SNOW.SNOW_PROFILE.STRAT_PROFILE.FROM_OTHER_PROFILE' | translate }}\r\n    </ion-title>\r\n  </ion-toolbar>\r\n</ion-header>\r\n<ion-content>\r\n  <ion-list lines=\"full\" class=\"ion-no-margin\">\r\n    <ng-container *ngIf=\"($previousUsedLayers | async) as previousUsedLayers else loading\">\r\n      <ng-container *ngIf=\"previousUsedLayers.length > 0 else empty\">\r\n        <ion-item [detail]=\"true\" *ngFor=\"let item of previousUsedLayers\" tabindex=\"0\" (click)=\"selectLayer(item)\"\r\n          (keyup.enter)=\"selectLayer(item)\">\r\n          <ion-label>\r\n            {{ item.date | formatDate | async }} - ({{ item.layers.length }}\r\n            {{'REGISTRATION.SNOW.SNOW_PROFILE.STRAT_PROFILE.LAYER' | translate}})\r\n          </ion-label>\r\n        </ion-item>\r\n      </ng-container>\r\n    </ng-container>\r\n  </ion-list>\r\n</ion-content>\r\n<ng-template #loading>\r\n  <ion-item [detail]=\"true\">\r\n    <ion-label>\r\n      <ion-skeleton-text animated style=\"width: 40%\"></ion-skeleton-text> - <ion-skeleton-text animated\r\n        style=\"width: 20%\"></ion-skeleton-text>\r\n    </ion-label>\r\n  </ion-item>\r\n  <ion-item [detail]=\"true\">\r\n    <ion-label>\r\n      <ion-skeleton-text animated style=\"width: 30%\"></ion-skeleton-text> - <ion-skeleton-text animated\r\n        style=\"width: 20%\"></ion-skeleton-text>\r\n    </ion-label>\r\n  </ion-item>\r\n  <ion-item [detail]=\"true\">\r\n    <ion-label>\r\n      <ion-skeleton-text animated style=\"width: 60%\"></ion-skeleton-text> - <ion-skeleton-text animated\r\n        style=\"width: 20%\"></ion-skeleton-text>\r\n    </ion-label>\r\n  </ion-item>\r\n</ng-template>\r\n<ng-template #empty>\r\n  <ion-list-header class=\"ion-text-uppercase\">\r\n    <ion-label>\r\n      {{ 'REGISTRATION.SNOW.SNOW_PROFILE.STRAT_PROFILE.NO_PROFILES_FOUND' | translate }}\r\n    </ion-label>\r\n  </ion-list-header>\r\n</ng-template>","import { NgModule } from '@angular/core';\r\nimport { StratProfileLayerModalPage } from './strat-profile-layer-modal.page';\r\nimport { SharedComponentsModule } from '../../../../../shared-components.module';\r\n\r\n@NgModule({\r\n  imports: [SharedComponentsModule],\r\n  declarations: [StratProfileLayerModalPage],\r\n  entryComponents: [StratProfileLayerModalPage]\r\n})\r\nexport class StratProfileLayerModalPageModule {}\r\n","import { Component, OnInit, Input } from '@angular/core';\r\nimport { ModalController } from '@ionic/angular';\r\nimport {\r\n  StratProfileLayerEditModel,\r\n  KdvElement\r\n} from '@varsom-regobs-common/regobs-api';\r\nimport { TranslateService } from '@ngx-translate/core';\r\nimport { SelectOption } from '../../../../../../shared/components/input/select/select-option.model';\r\nimport { IRegistration } from 'src/app/modules/common-registration/registration.models';\r\nimport { RegistrationService } from '../../../../../services/registration.service';\r\nimport { IsEmptyHelper } from '../../../../../../../core/helpers/is-empty.helper';\r\nimport cloneDeep from 'clone-deep';\r\n\r\nconst basicHardnessValues = [2, 6, 10, 14, 18, 21];\r\nconst basicGrainFormValues = [1, 14, 17, 22, 26, 32, 36, 40, 41];\r\nconst basicWetnessValues = [1, 3, 5, 7, 9];\r\n\r\n@Component({\r\n  selector: 'app-strat-profile-layer-modal',\r\n  templateUrl: './strat-profile-layer-modal.page.html',\r\n  styleUrls: ['./strat-profile-layer-modal.page.scss']\r\n})\r\nexport class StratProfileLayerModalPage implements OnInit {\r\n  @Input() layer: StratProfileLayerEditModel;\r\n  @Input() reg: IRegistration;\r\n  @Input() index: number;\r\n\r\n  addNew: boolean;\r\n  private initialRegistationState: IRegistration;\r\n\r\n  grainSizeInterfaceOptions: any;\r\n  showMore = false;\r\n  hardnessFilter: (id: number) => boolean;\r\n  grainFormFilter: (id: number) => boolean;\r\n  wetnessFilter: (id: number) => boolean;\r\n\r\n  get hasLayers() {\r\n    return (\r\n      this.reg &&\r\n      this.reg.request &&\r\n      this.reg.request.SnowProfile2 &&\r\n      this.reg.request.SnowProfile2.StratProfile &&\r\n      this.reg.request.SnowProfile2.StratProfile.Layers &&\r\n      this.reg.request.SnowProfile2.StratProfile.Layers.length > 0\r\n    );\r\n  }\r\n\r\n  get layerLenght() {\r\n    return this.hasLayers\r\n      ? this.reg.request.SnowProfile2.StratProfile.Layers.length\r\n      : 0;\r\n  }\r\n\r\n  get canGoNext() {\r\n    return (\r\n      (this.hasLayers && this.index < this.layerLenght) ||\r\n      (this.index === this.layerLenght &&\r\n        this.addNew &&\r\n        !IsEmptyHelper.isEmpty(this.layer))\r\n    );\r\n  }\r\n\r\n  grainSizeOptions: SelectOption[] = [\r\n    { id: 0.001, text: '.1' },\r\n    { id: 0.003, text: '.3' },\r\n    { id: 0.005, text: '.5' },\r\n    { id: 0.007, text: '.7' },\r\n    { id: 0.01, text: '1' },\r\n    { id: 0.015, text: '1.5' },\r\n    { id: 0.02, text: '2' },\r\n    { id: 0.025, text: '2.5' },\r\n    { id: 0.03, text: '3' },\r\n    { id: 0.035, text: '3.5' },\r\n    { id: 0.04, text: '4' },\r\n    { id: 0.045, text: '4.5' },\r\n    { id: 0.05, text: '5' },\r\n    { id: 0.055, text: '5.5' },\r\n    { id: 0.06, text: '6' },\r\n    { id: 0.08, text: '8' },\r\n    { id: 0.1, text: '10' }\r\n  ];\r\n\r\n  getIconFunc = (kdvElement: KdvElement) =>\r\n    `md-grainform-${((kdvElement || {}).Name || '').toLowerCase()}`;\r\n\r\n  constructor(\r\n    private modalController: ModalController,\r\n    private translateService: TranslateService,\r\n    private registrationService: RegistrationService\r\n  ) {}\r\n\r\n  ngOnInit() {\r\n    this.initialRegistationState = cloneDeep(this.reg);\r\n    this.initLayer();\r\n    this.translateService\r\n      .get('REGISTRATION.SNOW.SNOW_PROFILE.STRAT_PROFILE.SIZE')\r\n      .subscribe((val) => {\r\n        this.grainSizeInterfaceOptions = {\r\n          header: val\r\n        };\r\n      });\r\n  }\r\n\r\n  private initLayer() {\r\n    this.addNew = this.layer === undefined;\r\n    if (this.addNew) {\r\n      this.layer = {};\r\n    }\r\n    this.showMore = this.hasAnyAdvancedOptions();\r\n    this.updateFilters();\r\n  }\r\n\r\n  private hasAnyAdvancedOptions() {\r\n    return (\r\n      this.layer.HardnessBottomTID > 0 ||\r\n      this.layer.GrainSizeAvgMax > 0 ||\r\n      this.layer.GrainFormSecondaryTID > 0 ||\r\n      this.layer.CriticalLayerTID > 0 ||\r\n      !!this.layer.Comment\r\n    );\r\n  }\r\n\r\n  async save() {\r\n    await this.registrationService.saveRegistrationAsync(this.reg);\r\n  }\r\n\r\n  async ok(gotoIndex?: number) {\r\n    if (!this.reg.request.SnowProfile2) {\r\n      this.reg.request.SnowProfile2 = {};\r\n    }\r\n    if (!this.reg.request.SnowProfile2.StratProfile) {\r\n      this.reg.request.SnowProfile2.StratProfile = {};\r\n    }\r\n    if (!this.reg.request.SnowProfile2.StratProfile.Layers) {\r\n      this.reg.request.SnowProfile2.StratProfile.Layers = [];\r\n    }\r\n    if (this.addNew && !IsEmptyHelper.isEmpty(this.layer)) {\r\n      this.reg.request.SnowProfile2.StratProfile.Layers.splice(\r\n        this.index,\r\n        0,\r\n        this.layer\r\n      );\r\n    }\r\n    await this.save();\r\n\r\n    if (gotoIndex !== undefined) {\r\n      this.index = this.index + gotoIndex;\r\n      this.layer = this.reg.request.SnowProfile2.StratProfile.Layers[\r\n        this.index\r\n      ];\r\n      this.initLayer();\r\n    } else {\r\n      this.modalController.dismiss();\r\n    }\r\n  }\r\n\r\n  async cancel() {\r\n    await this.registrationService.saveRegistrationAsync(\r\n      this.initialRegistationState\r\n    );\r\n    this.modalController.dismiss();\r\n  }\r\n\r\n  async delete() {\r\n    if (\r\n      this.reg &&\r\n      this.reg.request &&\r\n      this.reg.request.SnowProfile2 &&\r\n      this.reg.request.SnowProfile2.StratProfile &&\r\n      this.reg.request.SnowProfile2.StratProfile.Layers &&\r\n      this.reg.request.SnowProfile2.StratProfile.Layers.length > 0\r\n    ) {\r\n      this.reg.request.SnowProfile2.StratProfile.Layers = this.reg.request.SnowProfile2.StratProfile.Layers.filter(\r\n        (l) => l !== this.layer\r\n      );\r\n      await this.save();\r\n    }\r\n    this.modalController.dismiss();\r\n  }\r\n\r\n  toggleShowMore() {\r\n    this.showMore = !this.showMore;\r\n    this.updateFilters();\r\n  }\r\n\r\n  private updateFilters() {\r\n    this.setHardnessFilter();\r\n    this.setGrainFormFilter();\r\n    this.setWetnessFilter();\r\n  }\r\n\r\n  private setHardnessFilter() {\r\n    this.hardnessFilter = this.showMore\r\n      ? undefined\r\n      : (n) => basicHardnessValues.indexOf(n) >= 0;\r\n  }\r\n\r\n  private setGrainFormFilter() {\r\n    this.grainFormFilter = this.showMore\r\n      ? undefined\r\n      : (n) => basicGrainFormValues.indexOf(n) >= 0;\r\n  }\r\n\r\n  private setWetnessFilter() {\r\n    this.wetnessFilter = this.showMore\r\n      ? undefined\r\n      : (n) => basicWetnessValues.indexOf(n) >= 0;\r\n  }\r\n}\r\n","<ion-header>\r\n  <ion-toolbar appHeaderColor mode=\"ios\">\r\n    <ion-buttons slot=\"start\">\r\n      <ion-button (click)=\"cancel()\">{{ 'DIALOGS.CANCEL' | translate }}</ion-button>\r\n    </ion-buttons>\r\n    <ion-title>\r\n      {{ 'REGISTRATION.SNOW.SNOW_PROFILE.STRAT_PROFILE.TITLE' | translate }}\r\n    </ion-title>\r\n  </ion-toolbar>\r\n</ion-header>\r\n<ion-content>\r\n  <form (ngSubmit)=\"ok()\">\r\n    <ion-list lines=\"full\" class=\"ion-no-margin\">\r\n      <ion-list-header class=\"ion-text-uppercase\">\r\n        <ion-label>\r\n          {{ 'REGISTRATION.SNOW.SNOW_PROFILE.STRAT_PROFILE.LAYER' | translate}}\r\n        </ion-label>\r\n      </ion-list-header>\r\n      <app-numeric-input [(value)]=\"layer.Thickness\" title=\"REGISTRATION.SNOW.SNOW_PROFILE.STRAT_PROFILE.THICKNESS\"\r\n        [min]=\"0\" suffix=\"cm\" [decimalPlaces]=\"2\" [convertRatio]=\"100\">\r\n      </app-numeric-input>\r\n      <app-kdv-select title=\"REGISTRATION.SNOW.SNOW_PROFILE.STRAT_PROFILE.HARDNESS\" kdvKey=\"Snow_HardnessKDV\"\r\n        [(value)]=\"layer.HardnessTID\" [filter]=\"hardnessFilter\"></app-kdv-select>\r\n      <app-kdv-select title=\"REGISTRATION.SNOW.SNOW_PROFILE.STRAT_PROFILE.GRAIN_FORM\" kdvKey=\"Snow_GrainFormKDV\"\r\n        [(value)]=\"layer.GrainFormPrimaryTID\" [filter]=\"grainFormFilter\" [getIconFunc]=\"getIconFunc\">\r\n      </app-kdv-select>\r\n      <ion-item>\r\n        <ion-label color=\"medium\" position=\"stacked\" class=\"ion-text-uppercase\">\r\n          {{ 'REGISTRATION.SNOW.SNOW_PROFILE.STRAT_PROFILE.SIZE' | translate }}</ion-label>\r\n        <app-select [(selectedValue)]=\"layer.GrainSizeAvg\" [options]=\"grainSizeOptions\"\r\n          title=\"REGISTRATION.SNOW.SNOW_PROFILE.STRAT_PROFILE.SIZE\">\r\n        </app-select>\r\n      </ion-item>\r\n      <app-kdv-select title=\"REGISTRATION.SNOW.SNOW_PROFILE.STRAT_PROFILE.WETNESS\" kdvKey=\"Snow_WetnessKDV\"\r\n        [(value)]=\"layer.WetnessTID\" [filter]=\"wetnessFilter\">\r\n      </app-kdv-select>\r\n    </ion-list>\r\n    <ion-button (click)=\"toggleShowMore()\" fill=\"clear\" expand=\"full\">\r\n      <ion-icon slot=\"start\" [name]=\"showMore ? 'chevron-up' : 'chevron-down'\"></ion-icon>\r\n      <ng-container *ngIf=\"showMore\">{{ 'REGISTRATION.SNOW.SNOW_PROFILE.STRAT_PROFILE.SHOW_LESS' | translate  }}\r\n      </ng-container>\r\n      <ng-container *ngIf=\"!showMore\">{{ 'REGISTRATION.SNOW.SNOW_PROFILE.STRAT_PROFILE.SHOW_MORE' | translate  }}\r\n      </ng-container>\r\n    </ion-button>\r\n    <ion-list lines=\"full\" *ngIf=\"showMore\">\r\n      <app-kdv-select title=\"REGISTRATION.SNOW.SNOW_PROFILE.STRAT_PROFILE.HARDNESS_BOTTOM\" kdvKey=\"Snow_HardnessKDV\"\r\n        [(value)]=\"layer.HardnessBottomTID\">\r\n      </app-kdv-select>\r\n      <app-kdv-select title=\"REGISTRATION.SNOW.SNOW_PROFILE.STRAT_PROFILE.GRAIN_FROM_SECONDARY\"\r\n        kdvKey=\"Snow_GrainFormKDV\" [(value)]=\"layer.GrainFormSecondaryTID\" [getIconFunc]=\"getIconFunc\">\r\n      </app-kdv-select>\r\n      <ion-item>\r\n        <ion-label color=\"medium\" position=\"stacked\" class=\"ion-text-uppercase\">\r\n          {{ 'REGISTRATION.SNOW.SNOW_PROFILE.STRAT_PROFILE.MAX_GRAIN_SIZE' | translate }}</ion-label>\r\n        <app-select [(selectedValue)]=\"layer.GrainSizeAvgMax\" [options]=\"grainSizeOptions\"\r\n          title=\"REGISTRATION.SNOW.SNOW_PROFILE.STRAT_PROFILE.MAX_GRAIN_SIZE\">\r\n        </app-select>\r\n      </ion-item>\r\n      <app-kdv-select title=\"REGISTRATION.SNOW.SNOW_PROFILE.STRAT_PROFILE.CRITICAL_LAYER\" kdvKey=\"Snow_CriticalLayerKDV\"\r\n        [(value)]=\"layer.CriticalLayerTID\">\r\n      </app-kdv-select>\r\n      <app-text-comment title=\"DIALOGS.COMMENT\" [(value)]=\"layer.Comment\"></app-text-comment>\r\n    </ion-list>\r\n    <ion-grid class=\"ion-no-padding\">\r\n      <ion-row>\r\n        <ion-col size=\"6\">\r\n          <ion-button [disabled]=\"index === 0\" expand=\"block\" fill=\"outline\" color=\"primary\" (click)=\"ok(-1)\">\r\n            <ion-icon slot=\"start\" name=\"arrow-back\"></ion-icon>\r\n            <ion-text>{{ 'DIALOGS.PREVIOUS' | translate }}\r\n              {{ 'REGISTRATION.SNOW.SNOW_PROFILE.STRAT_PROFILE.LAYER' | translate | lowercase }} </ion-text>\r\n          </ion-button>\r\n        </ion-col>\r\n        <ion-col size=\"6\">\r\n          <ion-button [disabled]=\"!canGoNext\" expand=\"block\" fill=\"outline\" color=\"primary\" (click)=\"ok(1)\">\r\n            <ion-icon slot=\"end\" name=\"arrow-forward\"></ion-icon>\r\n            <ion-text>{{ 'DIALOGS.NEXT' | translate }}\r\n              {{ 'REGISTRATION.SNOW.SNOW_PROFILE.STRAT_PROFILE.LAYER' | translate | lowercase }}</ion-text>\r\n          </ion-button>\r\n        </ion-col>\r\n      </ion-row>\r\n      <ion-row>\r\n        <ion-col size=\"12\">\r\n          <ion-button type=\"submit\" expand=\"block\" fill=\"solid\" color=\"primary\">\r\n            {{ 'DIALOGS.OK_BACK' | translate }}\r\n          </ion-button>\r\n        </ion-col>\r\n      </ion-row>\r\n      <ion-row *ngIf=\"!addNew\">\r\n        <ion-col size=\"6\" offset=\"3\">\r\n          <ion-button (click)=\"delete()\" size=\"small\" fill=\"clear\" expand=\"block\">\r\n            <ion-icon slot=\"start\" name=\"trash\"></ion-icon>\r\n            {{ 'DIALOGS.DELETE' | translate }}\r\n          </ion-button>\r\n        </ion-col>\r\n      </ion-row>\r\n    </ion-grid>\r\n  </form>\r\n</ion-content>","import { NgModule } from '@angular/core';\r\nimport { StratProfileModalPage } from './strat-profile-modal.page';\r\nimport { SharedComponentsModule } from '../../../../../shared-components.module';\r\nimport { StratProfileLayerModalPageModule } from '../strat-profile-layer-modal/strat-profile-layer-modal.module';\r\nimport { StratProfileLayerHistoryModalPageModule } from '../strat-profile-layer-history-modal/strat-profile-layer-history-modal.module';\r\n\r\n@NgModule({\r\n  imports: [\r\n    SharedComponentsModule,\r\n    StratProfileLayerModalPageModule,\r\n    StratProfileLayerHistoryModalPageModule\r\n  ],\r\n  declarations: [StratProfileModalPage],\r\n  entryComponents: [StratProfileModalPage]\r\n})\r\nexport class StratProfileModalPageModule {}\r\n","import { Component, OnInit, Input, OnDestroy, NgZone } from '@angular/core';\r\nimport { ModalController } from '@ionic/angular';\r\nimport {\r\n  StratProfileEditModel,\r\n  StratProfileLayerEditModel\r\n} from '@varsom-regobs-common/regobs-api';\r\nimport { StratProfileLayerModalPage } from '../strat-profile-layer-modal/strat-profile-layer-modal.page';\r\nimport { ItemReorderEventDetail } from '@ionic/core';\r\nimport { ArrayHelper } from '../../../../../../../core/helpers/array-helper';\r\nimport { StratProfileLayerHistoryModalPage } from '../strat-profile-layer-history-modal/strat-profile-layer-history-modal.page';\r\nimport { IRegistration } from 'src/app/modules/common-registration/registration.models';\r\nimport { RegistrationService as CommonRegistrationService } from 'src/app/modules/common-registration/registration.services';\r\nimport { RegistrationService } from '../../../../../services/registration.service';\r\nimport { Subject } from 'rxjs';\r\nimport { takeUntil } from 'rxjs/operators';\r\nimport cloneDeep from 'clone-deep';\r\nimport { RegobsAuthService } from '../../../../../../auth/services/regobs-auth.service';\r\n\r\n@Component({\r\n  selector: 'app-strat-profile-modal',\r\n  templateUrl: './strat-profile-modal.page.html',\r\n  styleUrls: ['./strat-profile-modal.page.scss']\r\n})\r\nexport class StratProfileModalPage implements OnInit, OnDestroy {\r\n  @Input() regId: string;\r\n\r\n  reg: IRegistration;\r\n\r\n  private regInitClone: IRegistration;\r\n  totalThickness: number;\r\n\r\n  private ngDestroy$ = new Subject<void>();\r\n\r\n  private layerModal: HTMLIonModalElement;\r\n\r\n  get hasLayers(): boolean {\r\n    return this.profile.Layers && this.profile.Layers.length > 0;\r\n  }\r\n\r\n  get profile(): StratProfileEditModel {\r\n    if (\r\n      this.reg &&\r\n      this.reg.request &&\r\n      this.reg.request.SnowProfile2 &&\r\n      this.reg.request.SnowProfile2.StratProfile\r\n    ) {\r\n      return this.reg.request.SnowProfile2.StratProfile;\r\n    }\r\n    return {};\r\n  }\r\n\r\n  constructor(\r\n    private modalController: ModalController,\r\n    private regobsAuthService: RegobsAuthService,\r\n    private ngZone: NgZone,\r\n    private registrationService: RegistrationService,\r\n    private commonRegistrationService: CommonRegistrationService,\r\n  ) {}\r\n\r\n  ngOnInit(): void {\r\n    this.commonRegistrationService\r\n      .getRegistrationByIdShared$(this.regId)\r\n      .pipe(takeUntil(this.ngDestroy$))\r\n      .subscribe((reg) => {\r\n        this.ngZone.run(() => {\r\n          if (!this.regInitClone) {\r\n            this.regInitClone = cloneDeep(reg);\r\n          }\r\n          this.reg = reg;\r\n          this.calculate();\r\n        });\r\n      });\r\n  }\r\n\r\n  ngOnDestroy(): void {\r\n    this.ngDestroy$.next();\r\n    this.ngDestroy$.complete();\r\n  }\r\n\r\n  async ok(): Promise<void> {\r\n    await this.registrationService.saveRegistrationAsync(this.reg);\r\n    this.modalController.dismiss();\r\n  }\r\n\r\n  async cancel(): Promise<void> {\r\n    await this.registrationService.saveRegistrationAsync(this.regInitClone); // Reset to inital state\r\n    this.modalController.dismiss();\r\n  }\r\n\r\n  addLayerTop(): void {\r\n    this.addOrEditLayer(0, undefined);\r\n  }\r\n\r\n  addLayerBottom(): void {\r\n    this.addOrEditLayer(\r\n      this.hasLayers\r\n        ? this.reg.request.SnowProfile2.StratProfile.Layers.length\r\n        : 0,\r\n      undefined\r\n    );\r\n  }\r\n\r\n  onLayerReorder(event: CustomEvent<ItemReorderEventDetail>): void {\r\n    this.reg.request.SnowProfile2.StratProfile.Layers = ArrayHelper.reorderList(\r\n      this.reg.request.SnowProfile2.StratProfile.Layers,\r\n      event.detail.from,\r\n      event.detail.to\r\n    );\r\n    event.detail.complete();\r\n    this.registrationService.saveRegistrationAsync(this.reg);\r\n  }\r\n\r\n  async getPrevousUsedLayers(): Promise<void> {\r\n    const loggedInUser = await this.regobsAuthService.getLoggedInUserAsPromise();\r\n    if (loggedInUser && loggedInUser.isLoggedIn) {\r\n      if (!this.layerModal) {\r\n        this.layerModal = await this.modalController.create({\r\n          component: StratProfileLayerHistoryModalPage,\r\n          componentProps: {\r\n            reg: this.reg\r\n          }\r\n        });\r\n        this.layerModal.present();\r\n        await this.layerModal.onDidDismiss();\r\n        this.layerModal = null;\r\n        this.calculate();\r\n      }\r\n    } else {\r\n      this.regobsAuthService.signIn();\r\n    }\r\n  }\r\n\r\n  async addOrEditLayer(index: number, layer: StratProfileLayerEditModel): Promise<void> {\r\n    if (!this.layerModal) {\r\n      this.layerModal = await this.modalController.create({\r\n        component: StratProfileLayerModalPage,\r\n        componentProps: {\r\n          reg: this.reg,\r\n          layer,\r\n          index\r\n        }\r\n      });\r\n      this.layerModal.present();\r\n      await this.layerModal.onDidDismiss();\r\n      this.layerModal = null;\r\n    }\r\n  }\r\n\r\n  private calculate(): void {\r\n    const layers = this.profile.Layers || [];\r\n    const sum = layers\r\n      .filter((x) => x.Thickness !== undefined)\r\n      .map((layer) => layer.Thickness)\r\n      .reduce((pv, cv) => pv + cv, 0);\r\n    this.totalThickness = sum;\r\n  }\r\n}\r\n","<ion-header>\r\n  <ion-toolbar appHeaderColor mode=\"ios\">\r\n    <ion-buttons slot=\"start\">\r\n      <ion-button (click)=\"cancel()\">{{ 'DIALOGS.CANCEL' | translate }}</ion-button>\r\n    </ion-buttons>\r\n    <ion-title>\r\n      {{ 'REGISTRATION.SNOW.SNOW_PROFILE.STRAT_PROFILE.TITLE' | translate }}\r\n    </ion-title>\r\n  </ion-toolbar>\r\n</ion-header>\r\n\r\n<ion-content>\r\n  <form (ngSubmit)=\"ok()\">\r\n    <ion-list lines=\"full\">\r\n      <ion-list-header class=\"ion-text-uppercase\">\r\n        <ion-label>\r\n          {{ 'REGISTRATION.SNOW.SNOW_PROFILE.STRAT_PROFILE.FROM_OTHER_PROFILE' | translate}}\r\n        </ion-label>\r\n      </ion-list-header>\r\n      <ion-item tabindex=\"0\" (click)=\"getPrevousUsedLayers()\" (keyup.enter)=\"getPrevousUsedLayers()\">\r\n        <ion-icon color=\"dark\" name=\"cloud-download\" slot=\"start\"></ion-icon>\r\n        <ion-label>{{'REGISTRATION.SNOW.SNOW_PROFILE.STRAT_PROFILE.OTHER_PROFILE_ITEM_TEXT' | translate }}</ion-label>\r\n      </ion-item>\r\n      <ion-item-divider>\r\n        <ion-label class=\"ion-text-wrap\">\r\n          {{'REGISTRATION.SNOW.SNOW_PROFILE.STRAT_PROFILE.OTHER_PROFILE_DESCRIPTION' | translate }}\r\n        </ion-label>\r\n      </ion-item-divider>\r\n      <ion-list-header class=\"ion-text-uppercase\">\r\n        <ion-label>\r\n          {{ 'REGISTRATION.SNOW.SNOW_PROFILE.STRAT_PROFILE.TITLE' | translate}}\r\n        </ion-label>\r\n      </ion-list-header>\r\n      <ng-container *ngIf=\"hasLayers else noLayers\">\r\n        <ion-item tabindex=\"0\" (click)=\"addLayerTop()\" (keyup.enter)=\"addLayerTop()\">\r\n          <ion-icon color=\"primary\" name=\"add-circle-outline\" slot=\"start\"></ion-icon>\r\n          <ion-label>{{'REGISTRATION.SNOW.SNOW_PROFILE.STRAT_PROFILE.ADD_LAYER_TOP' | translate}}</ion-label>\r\n        </ion-item>\r\n        <ion-reorder-group disabled=\"false\" (ionItemReorder)=\"onLayerReorder($event)\">\r\n          <ion-item tabindex=\"0\" (click)=\"addOrEditLayer(i, layer)\" (keyup.enter)=\"addOrEditLayer(i, layer)\"\r\n            *ngFor=\"let layer of profile.Layers; let i = index\">\r\n            <ion-label [color]=\"layer.CriticalLayerTID > 0 ? 'danger' : 'dark'\">\r\n              <ng-container *ngIf=\"layer.Thickness !== undefined\">\r\n                {{layer.Thickness | metersToCm}}cm\r\n              </ng-container>\r\n              <ng-container *ngIf=\"layer.HardnessTID !== undefined\">\r\n                {{layer.HardnessTID | kdvDescription: 'Snow_HardnessKDV' | async}}\r\n              </ng-container>\r\n              <ng-container *ngIf=\"layer.GrainFormPrimaryTID !== undefined\">\r\n                {{layer.GrainFormPrimaryTID | kdvDescription: 'Snow_GrainFormKDV' | async}}\r\n              </ng-container>\r\n              <ng-container *ngIf=\"layer.GrainSizeAvg !== undefined\">\r\n                {{layer.GrainSizeAvg * 100 | number:'1.0-2' }}mm\r\n              </ng-container>\r\n              <ng-container *ngIf=\"layer.WetnessTID !== undefined\">\r\n                {{layer.WetnessTID | kdvDescription: 'Snow_WetnessKDV' | async }}\r\n              </ng-container>\r\n            </ion-label>\r\n            <ion-reorder slot=\"end\"></ion-reorder>\r\n          </ion-item>\r\n        </ion-reorder-group>\r\n        <ion-item tabindex=\"0\" (click)=\"addLayerBottom()\" (keyup.enter)=\"addLayerBottom()\">\r\n          <ion-icon color=\"primary\" name=\"add-circle-outline\" slot=\"start\"></ion-icon>\r\n          <ion-label>{{'REGISTRATION.SNOW.SNOW_PROFILE.STRAT_PROFILE.ADD_LAYER_BOTTOM' | translate}}</ion-label>\r\n        </ion-item>\r\n      </ng-container>\r\n      <ng-container *ngIf=\"hasLayers\">\r\n        <ion-list-header class=\"ion-text-uppercase\">\r\n          <ion-label>\r\n            {{ 'REGISTRATION.SUMMARY' | translate}}\r\n          </ion-label>\r\n        </ion-list-header>\r\n        <ion-item>\r\n          <ion-label color=\"medium\" position=\"stacked\" class=\"ion-text-uppercase\">{{'REGISTRATION.SNOW.SNOW_PROFILE.STRAT_PROFILE.TOTAL_THICKNESS'\r\n            | translate}}</ion-label>\r\n          <ion-text class=\"ion-align-self-start ion-text-wrap ion-margin-bottom\">\r\n            <p class=\"ion-no-margin\" *ngIf=\"totalThickness !== undefined\">{{ totalThickness | metersToCm }} cm</p>\r\n          </ion-text>\r\n        </ion-item>\r\n      </ng-container>\r\n    </ion-list>\r\n    <ion-grid class=\"ion-no-padding\">\r\n      <ion-row>\r\n        <ion-col size=\"6\" offset=\"3\">\r\n          <ion-button type=\"submit\" expand=\"block\" fill=\"solid\" color=\"primary\">\r\n            {{'DIALOGS.OK' | translate}}\r\n          </ion-button>\r\n        </ion-col>\r\n      </ion-row>\r\n    </ion-grid>\r\n  </form>\r\n</ion-content>\r\n<ng-template #noLayers>\r\n  <ion-item tabindex=\"0\" (click)=\"addLayerBottom()\" (keyup.enter)=\"addLayerBottom()\">\r\n    <ion-icon color=\"primary\" name=\"add-circle-outline\" slot=\"start\"></ion-icon>\r\n    <ion-label>{{'REGISTRATION.SNOW.SNOW_PROFILE.STRAT_PROFILE.ADD_LAYER' | translate}}</ion-label>\r\n  </ion-item>\r\n</ng-template>","import { Component, OnInit, Input } from '@angular/core';\r\nimport { IsEmptyHelper } from '../../../../../../core/helpers/is-empty.helper';\r\nimport { ModalController } from '@ionic/angular';\r\nimport { StratProfileModalPage } from './strat-profile-modal/strat-profile-modal.page';\r\nimport { IRegistration } from 'src/app/modules/common-registration/registration.models';\r\nimport { RegistrationService } from '../../../../services/registration.service';\r\nimport { StratProfileEditModel } from '@varsom-regobs-common/regobs-api';\r\n\r\n@Component({\r\n  selector: 'app-strat-profile',\r\n  templateUrl: './strat-profile.component.html',\r\n  styleUrls: ['./strat-profile.component.scss']\r\n})\r\nexport class StratProfileComponent implements OnInit {\r\n  @Input() reg: IRegistration;\r\n\r\n  private modal: HTMLIonModalElement;\r\n\r\n  get profile(): StratProfileEditModel {\r\n    if (\r\n      this.reg &&\r\n      this.reg.request &&\r\n      this.reg.request.SnowProfile2 &&\r\n      this.reg.request.SnowProfile2.StratProfile\r\n    ) {\r\n      return this.reg.request.SnowProfile2.StratProfile;\r\n    }\r\n    return {};\r\n  }\r\n\r\n  get isEmpty() {\r\n    return IsEmptyHelper.isEmpty(this.profile);\r\n  }\r\n\r\n  constructor(\r\n    private modalContoller: ModalController,\r\n    private registrationService: RegistrationService\r\n  ) {}\r\n\r\n  ngOnInit() {}\r\n\r\n  async openModal() {\r\n    if (!this.modal) {\r\n      await this.registrationService.saveRegistrationAsync(this.reg); // Save registration before open modal page\r\n      this.modal = await this.modalContoller.create({\r\n        component: StratProfileModalPage,\r\n        componentProps: {\r\n          regId: this.reg.id\r\n        }\r\n      });\r\n      this.modal.present();\r\n      await this.modal.onDidDismiss();\r\n      this.modal = null;\r\n    }\r\n  }\r\n}\r\n","<ion-item tabindex=\"0\" class=\"summary-item\" (click)=\"openModal()\" (keyup.enter)=\"openModal()\">\r\n  <ion-label class=\"ion-padding-vertical ion-padding-end\">\r\n    <h2>{{ 'REGISTRATION.SNOW.SNOW_PROFILE.STRAT_PROFILE.TITLE' | translate}}</h2>\r\n    <p>\r\n      <ion-text *ngIf=\"!isEmpty else empty\">{{profile.Layers ? profile.Layers.length : 0 }}\r\n        <ng-container *ngIf=\"profile.Layers.length === 1 else multiple\">\r\n          {{'REGISTRATION.SNOW.SNOW_PROFILE.STRAT_PROFILE.ONE_LAYER' | translate}}\r\n        </ng-container>\r\n      </ion-text>\r\n    </p>\r\n  </ion-label>\r\n  <ion-icon *ngIf=\"!isEmpty\" slot=\"end\" color=\"success\" name=\"checkmark-circle\"></ion-icon>\r\n</ion-item>\r\n<ng-template #empty>\r\n  {{'REGISTRATION.SNOW.SNOW_PROFILE.STRAT_PROFILE.EMPTY' | translate}}\r\n</ng-template>\r\n<ng-template #multiple>\r\n  {{'REGISTRATION.SNOW.SNOW_PROFILE.STRAT_PROFILE.MULTIPLE_LAYERS' | translate}}\r\n</ng-template>","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\nimport { SnowProfilePage } from './snow-profile.page';\r\nimport { SharedComponentsModule } from '../../../shared-components.module';\r\nimport { CompressionTestComponent } from '../../../components/snow/snow-profile/compression-test/compression-test.component';\r\nimport { SnowDensityComponent } from '../../../components/snow/snow-profile/snow-density/snow-density.component';\r\nimport { SnowTempComponent } from '../../../components/snow/snow-profile/snow-temp/snow-temp.component';\r\nimport { StratProfileComponent } from '../../../components/snow/snow-profile/strat-profile/strat-profile.component';\r\n// tslint:disable-next-line:max-line-length\r\nimport { StratProfileModalPageModule } from '../../../components/snow/snow-profile/strat-profile/strat-profile-modal/strat-profile-modal.module';\r\nimport { FullscreenImageModalPageModule } from '../../../../../pages/modal-pages/fullscreen-image-modal/fullscreen-image-modal.module';\r\nimport { SnowTempModalPageModule } from '../../../components/snow/snow-profile/snow-temp/snow-temp-modal/snow-temp-modal.module';\r\n// tslint:disable-next-line:max-line-length\r\nimport { SnowDensityModalPageModule } from '../../../components/snow/snow-profile/snow-density/snow-density-modal/snow-density-modal.module';\r\n// tslint:disable-next-line:max-line-length\r\nimport { CompressionTestListModalPageModule } from '../../../components/snow/snow-profile/compression-test/compression-test-list-modal/compression-test-list-modal.module';\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: '',\r\n    component: SnowProfilePage\r\n  }\r\n];\r\n\r\n@NgModule({\r\n  imports: [\r\n    SharedComponentsModule,\r\n    StratProfileModalPageModule,\r\n    SnowTempModalPageModule,\r\n    SnowDensityModalPageModule,\r\n    CompressionTestListModalPageModule,\r\n    FullscreenImageModalPageModule,\r\n    RouterModule.forChild(routes)\r\n  ],\r\n  declarations: [\r\n    SnowProfilePage,\r\n    CompressionTestComponent,\r\n    SnowDensityComponent,\r\n    SnowTempComponent,\r\n    StratProfileComponent\r\n  ]\r\n})\r\nexport class SnowProfilePageModule {}\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { BasePageService } from '../../base-page-service';\r\nimport { ActivatedRoute } from '@angular/router';\r\nimport { RegistrationTid } from 'src/app/modules/common-registration/registration.models';\r\nimport { BasePage } from '../../base.page';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport {\r\n  ModalController,\r\n  LoadingController,\r\n  ToastController\r\n} from '@ionic/angular';\r\nimport { FullscreenImageModalPage } from '../../../../../pages/modal-pages/fullscreen-image-modal/fullscreen-image-modal.page';\r\nimport { DataUrlHelper } from '../../../../../core/helpers/data-url.helper';\r\nimport { IsEmptyHelper } from '../../../../../core/helpers/is-empty.helper';\r\nimport { TranslateService } from '@ngx-translate/core';\r\nimport { UserSettingService } from '../../../../../core/services/user-setting/user-setting.service';\r\nimport { settings } from '../../../../../../settings';\r\nimport { from, of } from 'rxjs';\r\nimport { catchError, switchMap, take } from 'rxjs/operators';\r\nimport { UserSetting } from '../../../../../core/models/user-settings.model';\r\nimport { LoggingService } from '../../../../shared/services/logging/logging.service';\r\nimport { isEmpty } from '@varsom-regobs-common/core';\r\nimport { SelectOption } from 'src/app/modules/shared/components/input/select/select-option.model';\r\n\r\nconst DEBUG_TAG = 'SnowProfilePage';\r\n\r\n@Component({\r\n  selector: 'app-snow-profile',\r\n  templateUrl: './snow-profile.page.html',\r\n  styleUrls: ['./snow-profile.page.scss']\r\n})\r\nexport class SnowProfilePage extends BasePage {\r\n  expositionOptions: SelectOption[] = [\r\n    { id: 0, text: 'REGISTRATION.SNOW.SNOW_PROFILE.NORTH' },\r\n    { id: 1, text: 'REGISTRATION.SNOW.SNOW_PROFILE.NORTH_EAST' },\r\n    { id: 2, text: 'REGISTRATION.SNOW.SNOW_PROFILE.EAST' },\r\n    { id: 3, text: 'REGISTRATION.SNOW.SNOW_PROFILE.SOUTH_EAST' },\r\n    { id: 4, text: 'REGISTRATION.SNOW.SNOW_PROFILE.SOUTH' },\r\n    { id: 5, text: 'REGISTRATION.SNOW.SNOW_PROFILE.SOUTH_WEST' },\r\n    { id: 6, text: 'REGISTRATION.SNOW.SNOW_PROFILE.WEST' },\r\n    { id: 7, text: 'REGISTRATION.SNOW.SNOW_PROFILE.NORTH_WEST' }\r\n  ];\r\n\r\n  constructor(\r\n    basePageService: BasePageService,\r\n    activatedRoute: ActivatedRoute,\r\n    private httpClient: HttpClient,\r\n    private modalController: ModalController,\r\n    private loadingController: LoadingController,\r\n    private toastController: ToastController,\r\n    private translateService: TranslateService,\r\n    private userSettingService: UserSettingService,\r\n    private loggingService: LoggingService\r\n  ) {\r\n    super(RegistrationTid.SnowProfile2, basePageService, activatedRoute);\r\n  }\r\n\r\n  onInit() {}\r\n\r\n  isEmpty() {\r\n    const isEmptyResult =\r\n     isEmpty(this.registration.request.SnowProfile2) &&\r\n      !(this.registration.request.CompressionTest || []).some(\r\n        (ct) => ct.IncludeInSnowProfile === true\r\n      );\r\n    return Promise.resolve(isEmptyResult);\r\n  }\r\n\r\n  async openPreview() {\r\n    this.translateService\r\n      .get('REGISTRATION.SNOW.SNOW_PROFILE.GENERATING_PREVIEW')\r\n      .subscribe(async (message) => {\r\n        const loader = await this.loadingController.create({\r\n          message,\r\n          backdropDismiss: true // enable cancel\r\n        });\r\n        await loader.present();\r\n        const userSetting = await this.userSettingService.userSetting$\r\n          .pipe(take(1))\r\n          .toPromise();\r\n        const format = 5; // Mobile profile plot\r\n        const size = 400;\r\n        const subscription = this.getPlotFromApiWithFallback(\r\n          userSetting,\r\n          format,\r\n          size\r\n        ).subscribe(\r\n          (result) => {\r\n            this.openImageModal(result);\r\n            this.loadingController.dismiss();\r\n          },\r\n          (err) => {\r\n            this.loadingController.dismiss();\r\n            this.showPreviewError();\r\n          }\r\n        );\r\n        await loader.onDidDismiss();\r\n        subscription.unsubscribe();\r\n      });\r\n  }\r\n\r\n  private getPlotFromApiWithFallback(\r\n    userSetting: UserSetting,\r\n    format: number,\r\n    size: number\r\n  ) {\r\n    return this.getPlotFromApi(userSetting, format, size).pipe(\r\n      catchError((error) => {\r\n        this.loggingService.debug('Could not generate plot', DEBUG_TAG);\r\n        if (format === 5) {\r\n          this.loggingService.debug('Fallback to BareSimpleProfile', DEBUG_TAG);\r\n          return this.getPlotFromApi(userSetting, 4, size); // fallback to BareSimpleProfile when mobile plot failed\r\n        }\r\n        return of(null);\r\n      }),\r\n      switchMap((result) => from(DataUrlHelper.toDataUrl(result, 'image/png')))\r\n    );\r\n  }\r\n\r\n  private getPlotFromApi(\r\n    userSetting: UserSetting,\r\n    format: number,\r\n    size: number\r\n  ) {\r\n    const rootUrl = settings.services.regObs.apiUrl[userSetting.appMode];\r\n    return this.httpClient.post(\r\n      `${rootUrl}/Registration/PlotPreviewPng?format=${format}` +\r\n        `&height=${size}&width=${size}&langKey=${userSetting.language}`,\r\n      this.registration.request,\r\n      {\r\n        responseType: 'blob'\r\n      }\r\n    );\r\n  }\r\n\r\n  private hasAnyTempLayers() {\r\n    return (\r\n      this.registration.request.SnowProfile2 &&\r\n      this.registration.request.SnowProfile2.SnowTemp &&\r\n      this.registration.request.SnowProfile2.SnowTemp.Layers &&\r\n      this.registration.request.SnowProfile2.SnowTemp.Layers.some(\r\n        (x) => x.SnowTemp < 0\r\n      )\r\n    );\r\n  }\r\n\r\n  private async showPreviewError() {\r\n    this.translateService\r\n      .get('REGISTRATION.SNOW.SNOW_PROFILE.PREVIEW_ERROR')\r\n      .subscribe(async (message) => {\r\n        const toast = await this.toastController.create({\r\n          message: message,\r\n          mode: 'md',\r\n          duration: 2000\r\n        });\r\n        toast.present();\r\n      });\r\n  }\r\n\r\n  private async openImageModal(src: string) {\r\n    const modal = await this.modalController.create({\r\n      component: FullscreenImageModalPage,\r\n      componentProps: {\r\n        imgSrc: src\r\n      }\r\n    });\r\n    modal.present();\r\n  }\r\n}\r\n","<ion-header>\r\n  <ion-toolbar appHeaderColor mode=\"ios\">\r\n    <ion-buttons slot=\"start\">\r\n      <ion-back-button text=\"\" defaultHref=\"/\"></ion-back-button>\r\n    </ion-buttons>\r\n    <ion-title>\r\n      {{'REGISTRATION.SNOW.SNOW_PROFILE.TITLE' | translate}}\r\n    </ion-title>\r\n  </ion-toolbar>\r\n</ion-header>\r\n\r\n<ion-content>\r\n  <app-registration-content-wrapper *ngIf=\"registration && registration.request.SnowProfile2\"\r\n    [registration]=\"registration\" [registrationTid]=\"registrationTid\" (reset)=\"reset()\">\r\n    <ion-list lines=\"full\">\r\n      <ion-list-header class=\"ion-text-uppercase\">\r\n        <ion-label>\r\n          {{ 'REGISTRATION.SNOW.SNOW_PROFILE.SUPERIOR' | translate}}\r\n        </ion-label>\r\n      </ion-list-header>\r\n      <app-yes-no-select [(value)]=\"registration.request.SnowProfile2.IsProfileToGround\"\r\n        title=\"REGISTRATION.SNOW.SNOW_PROFILE.IS_PROFILE_TO_GROUND\">\r\n      </app-yes-no-select>\r\n      <!-- TODO: Ta inn dette når vi er på siste versjon av API'et\r\n        ion-item>\r\n        <ion-label color=\"medium\" position=\"stacked\" class=\"ion-text-uppercase\">\r\n          {{ 'REGISTRATION.SNOW.SNOW_PROFILE.VALID_EXPOSITION' | translate}}</ion-label>\r\n        <app-select [(selectedValue)]=\"registration.request.SnowProfile2.Exposition\"\r\n          [options]=\"expositionOptions\" title=\"REGISTRATION.SNOW.SNOW_PROFILE.VALID_EXPOSITION\"></app-select>\r\n      </ion-item>\r\n      <app-numeric-input [(value)]=\"registration.request.SnowProfile2.SlopeAngle\"\r\n      title=\"REGISTRATION.SNOW.SNOW_PROFILE.SLOPE_ANGLE\" [min]=\"0\" [max]=\"59\" suffix=\"°\"\r\n      placeholder=\"REGISTRATION.SNOW.SNOW_PROFILE.SLOPE_ANGLE_PLACEHOLDER\" [decimalPlaces]=\"0\"></app-numeric-input-->\r\n      <app-text-comment title=\"DIALOGS.COMMENT\" [(value)]=\"registration.request.SnowProfile2.Comment\">\r\n      </app-text-comment>\r\n      <ion-list-header class=\"ion-text-uppercase\">\r\n        <ion-label>\r\n          {{'REGISTRATION.SNOW.SNOW_PROFILE.SUBFORMS' | translate}}\r\n        </ion-label>\r\n      </ion-list-header>\r\n      <app-strat-profile [reg]=\"registration\"></app-strat-profile>\r\n      <app-snow-temp [reg]=\"registration\"></app-snow-temp>\r\n      <app-snow-density [reg]=\"registration\"></app-snow-density>\r\n      <app-compression-test [reg]=\"registration\">\r\n      </app-compression-test>\r\n      <ion-list-header class=\"ion-text-uppercase\">\r\n        <ion-label>\r\n          {{'REGISTRATION.SNOW.SNOW_PROFILE.PREVIEW' | translate}}\r\n        </ion-label>\r\n      </ion-list-header>\r\n      <ion-item [disabled]=\"isEmpty()\" (click)=\"openPreview()\">\r\n        <ion-icon name=\"eye\" color=\"dark\" slot=\"start\"></ion-icon>\r\n        <ion-label>{{'REGISTRATION.SNOW.SNOW_PROFILE.PREVIEW_ITEM' | translate }}</ion-label>\r\n      </ion-item>\r\n      <ion-list-header class=\"ion-text-uppercase\">\r\n        <ion-label>\r\n          {{'REGISTRATION.IMAGES' | translate}}\r\n        </ion-label>\r\n      </ion-list-header>\r\n      <app-add-picture-item [geoHazard]=\"registration.geoHazard\" [registrationId]=\"registration.id\"\r\n        [registrationTid]=\"registrationTid\" [onBeforeAdd]=\"getSaveFunc()\">\r\n      </app-add-picture-item>\r\n    </ion-list>\r\n  </app-registration-content-wrapper>\r\n</ion-content>","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { FormsModule } from '@angular/forms';\r\nimport { IonicModule } from '@ionic/angular';\r\nimport { FullscreenImageModalPage } from './fullscreen-image-modal.page';\r\n\r\n@NgModule({\r\n  imports: [CommonModule, IonicModule, FormsModule],\r\n  declarations: [FullscreenImageModalPage],\r\n  entryComponents: [FullscreenImageModalPage]\r\n})\r\nexport class FullscreenImageModalPageModule {}\r\n"],"names":[],"sourceRoot":"webpack:///"}