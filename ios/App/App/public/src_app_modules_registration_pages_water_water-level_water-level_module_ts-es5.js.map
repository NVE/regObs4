{"version":3,"mappings":"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","names":["_angular_core__WEBPACK_IMPORTED_MODULE_5__","WaterLevelMeasurementComponent","waterLevelMeasurement","DtMeasurementTime","moment__WEBPACK_IMPORTED_MODULE_0___default","startOf","isSame","dtObsTime","maxDate","getMaxDateForNow","Attachments","minutes","toISOString","now","showDtMeasurementTimeError","showError","selectors","inputs","measurementNumber","waterLevelMethod","registrationTid","registrationId","geoHazard","outputs","waterLevelMeasurementChange","decls","vars","consts","template","ctx","DEBUG_TAG","BasePageService","registrationService","newAttachmentService","commonRegistrationService","ngZone","alertController","translateService","loggingService","registration","onReset","get","toPromise","leaveText","createResetDialog","message","translations","create","buttons","text","role","alert","present","onDidDismiss","result","reset","Zone","run","request","getDefaultValue","resetImages","saveRegistrationAsync","propName","getAttachments","id","pipe","attachments","map","a","removeAttachment","subscribe","debug","error","_angular_core__WEBPACK_IMPORTED_MODULE_7__","factory","providedIn","BasePage","basePageService","activatedRoute","snapshot","params","CommonRegistrationService","getRegistrationByIdShared$","reg","createDefaultProps","createInitObservable","ngDestroy$","Promise","resolve","isValid","valid","isEmpty","confirmLeave","onInit","onBeforeLeave","save","clean","syncStatus","src_app_modules_common_registration_registration_models__WEBPACK_IMPORTED_MODULE_1__","RegistrationService","hasAnyDataToShowInRegistrationTypes","confirmReset","pathFromRoot","v","url","segment","toString","join","filter","path","_core_helpers_observable_helper__WEBPACK_IMPORTED_MODULE_2__","_angular_core__WEBPACK_IMPORTED_MODULE_11__","features","routes","component","_water_level_page__WEBPACK_IMPORTED_MODULE_0__","canDeactivate","_can_deactivate_route_guard__WEBPACK_IMPORTED_MODULE_3__","WaterLevelPageModule","_shared_components_module__WEBPACK_IMPORTED_MODULE_1__","_angular_router__WEBPACK_IMPORTED_MODULE_5__","declarations","_components_water_water_level_measurement_water_level_measurement_component__WEBPACK_IMPORTED_MODULE_2__","imports","_angular_core__WEBPACK_IMPORTED_MODULE_9__","ctx_r19","ctx_r0","WaterLevelPage","WaterLevel2","WaterLevelMeasurement","length","undefined","push","WaterLevelMethodTID","MarkingReferenceTID","MeasurementTypeTID","MeasuringToolDescription","Comment","item","_core_helpers_is_empty_helper__WEBPACK_IMPORTED_MODULE_2__","waterLevelMeasurements","toArray","wl","some","x","_base_page__WEBPACK_IMPORTED_MODULE_0__","viewQuery","_components_water_water_level_measurement_water_level_measurement_component__WEBPACK_IMPORTED_MODULE_4__"],"sources":["webpack:///src/app/modules/registration/components/water/water-level-measurement/water-level-measurement.component.html","webpack:///src/app/modules/registration/components/water/water-level-measurement/water-level-measurement.component.ts","webpack:///src/app/modules/registration/pages/base-page-service.ts","webpack:///src/app/modules/registration/pages/base.page.ts","webpack:///src/app/modules/registration/pages/water/water-level/water-level.module.ts","webpack:///src/app/modules/registration/pages/water/water-level/water-level.page.html","webpack:///src/app/modules/registration/pages/water/water-level/water-level.page.ts"],"sourcesContent":["<ion-list-header>\r\n  <ion-label>\r\n    {{ (waterLevelMethod === 1 ? 'REGISTRATION.WATER.WATER_LEVEL.MARKING' :\r\n    'REGISTRATION.WATER.WATER_LEVEL.MEASURING') |\r\n    translate }} {{ measurementNumber }}\r\n  </ion-label>\r\n</ion-list-header>\r\n<app-numeric-input *ngIf=\"waterLevelMethod === 2\" [(value)]=\"waterLevelMeasurement.WaterLevelValue\"\r\n  title=\"REGISTRATION.WATER.WATER_LEVEL.WATER_LEVEL_METERS\" [min]=\"0\" [max]=\"8848\" [decimalPlaces]=\"3\" suffix=\"m\">\r\n</app-numeric-input>\r\n<ion-item [ngClass]=\"{'hasWarning': dateIsDifferentThanObsTime}\">\r\n  <ion-label color=\"medium\" position=\"stacked\" class=\"ion-text-uppercase\">\r\n    {{ 'REGISTRATION.SET_TIME.TITLE' | translate }}\r\n  </ion-label>\r\n  <ion-datetime (ionChange)=\"dtChanged()\" color=\"medium\" monthShortNames=\"{{ 'MONTHS.SHORT_LIST' | translate }}\"\r\n    doneText=\"{{'DIALOGS.OK' | translate}}\" cancelText=\"{{'DIALOGS.CANCEL' | translate}}\"\r\n    display-format=\"D. MMM, YYYY HH:mm\" [(ngModel)]=\"waterLevelMeasurement.DtMeasurementTime\" [max]=\"maxDate\">\r\n  </ion-datetime>\r\n  <ion-button class=\"set-to-now-button\" slot=\"end\" fill=\"outline\" color=\"medium\" (click)=\"setToNow()\">\r\n    <ion-icon slot=\"start\" name=\"time\"></ion-icon> {{\"REGISTRATION.SET_TIME.NOW\" | translate}}\r\n  </ion-button>\r\n</ion-item>\r\n<ion-item *ngIf=\"dateIsDifferentThanObsTime\">\r\n  <ion-label color=\"danger\" class=\"ion-text-wrap\">\r\n    {{'ALERT.WARNING' | translate}}! {{'REGISTRATION.SNOW.AVALANCHE_ACTIVITY.DATE_WARNING' | translate}}\r\n  </ion-label>\r\n</ion-item>\r\n<ion-item *ngIf=\"showDtMeasurementTimeError\">\r\n  <ion-label color=\"danger\" class=\"ion-text-wrap\">\r\n    {{'REGISTRATION.WATER.WATER_LEVEL.DT_REQUIRED_TEXT' | translate}}\r\n  </ion-label>\r\n</ion-item>\r\n<app-add-picture-item iconColor=\"primary\" icon=\"add-circle-outline\" title=\"{{ 'REGISTRATION.WATER.WATER_LEVEL.ADD_PICTURE' | translate }} {{ (waterLevelMethod === 1 ? 'REGISTRATION.WATER.WATER_LEVEL.MARKING_PLURAL' :\r\n'REGISTRATION.WATER.WATER_LEVEL.MEASURE_PLURAL') | translate | lowercase }}\"\r\n    [registrationTid]=\"registrationTid\"\r\n    [geoHazard]=\"geoHazard\" [registrationId]=\"registrationId\" \r\n    [ref]=\"waterLevelMeasurement.WaterLevelMeasurementId\"\r\n    [attachmentType]=\"'WaterLevelMeasurementAttachment'\">\r\n</app-add-picture-item>\r\n<app-text-comment [(value)]=\"waterLevelMeasurement.Comment\" placeholder=\"{{'REGISTRATION.WATER.WATER_LEVEL.DESCRIBE' | translate }} {{ (waterLevelMethod === 1 ? 'REGISTRATION.WATER.WATER_LEVEL.MARKING_PLURAL' :\r\n'REGISTRATION.WATER.WATER_LEVEL.MEASURE_PLURAL') | translate | lowercase }}\"></app-text-comment>","import { Component, OnInit, Input, Output, EventEmitter } from '@angular/core';\r\nimport { WaterLevelMeasurementEditModel } from '@varsom-regobs-common/regobs-api';\r\nimport moment from 'moment';\r\nimport { RegistrationTid } from 'src/app/modules/common-registration/registration.models';\r\nimport { GeoHazard, isEmpty } from '@varsom-regobs-common/core';\r\n\r\n@Component({\r\n  selector: 'app-water-level-measurement',\r\n  templateUrl: './water-level-measurement.component.html',\r\n  styleUrls: ['./water-level-measurement.component.scss']\r\n})\r\nexport class WaterLevelMeasurementComponent implements OnInit {\r\n  @Input() measurementNumber: number;\r\n  @Input() waterLevelMethod: number;\r\n  @Input() registrationTid: RegistrationTid;\r\n  @Input() registrationId: string;\r\n  @Input() geoHazard: GeoHazard;\r\n  @Input() dtObsTime: string;\r\n  @Input() waterLevelMeasurement: WaterLevelMeasurementEditModel;\r\n  @Output() waterLevelMeasurementChange = new EventEmitter();\r\n  maxDate: string;\r\n  showDtMeasurementTimeError = false;\r\n\r\n  get dateIsDifferentThanObsTime() {\r\n    return (\r\n      this.waterLevelMeasurement.DtMeasurementTime &&\r\n      !moment(this.waterLevelMeasurement.DtMeasurementTime)\r\n        .startOf('day')\r\n        .isSame(moment(this.dtObsTime).startOf('day'))\r\n    );\r\n  }\r\n\r\n  get isValid() {\r\n    if (isEmpty(this.waterLevelMeasurement)) {\r\n      return true;\r\n    }\r\n    return this.waterLevelMeasurement.DtMeasurementTime;\r\n  }\r\n\r\n  constructor() {}\r\n\r\n  ngOnInit() {\r\n    this.maxDate = this.getMaxDateForNow();\r\n    if (!this.waterLevelMeasurement.Attachments) {\r\n      this.waterLevelMeasurement.Attachments = [];\r\n    }\r\n  }\r\n\r\n  getMaxDateForNow() {\r\n    // There is an issue when setting max date that when changing hour, the minutes is still max minutes.\r\n    // Workaround is to set minutes to 59.\r\n    return moment().minutes(59).toISOString(true);\r\n  }\r\n\r\n  setToNow() {\r\n    const now = moment().toISOString(true);\r\n    this.maxDate = this.getMaxDateForNow();\r\n    this.waterLevelMeasurement.DtMeasurementTime = now;\r\n  }\r\n\r\n  showError() {\r\n    if (\r\n      !isEmpty(this.waterLevelMeasurement) &&\r\n      !this.waterLevelMeasurement.DtMeasurementTime\r\n    ) {\r\n      this.showDtMeasurementTimeError = true;\r\n    } else {\r\n      this.showDtMeasurementTimeError = false;\r\n    }\r\n  }\r\n\r\n  dtChanged() {\r\n    this.showError();\r\n  }\r\n\r\n  // triggerChange() {\r\n  //   this.waterLevelMeasurementChange.emit(this.waterLevelMeasurement);\r\n  // }\r\n}\r\n","import { Injectable, NgZone } from '@angular/core';\r\nimport { IRegistration, RegistrationTid } from 'src/app/modules/common-registration/registration.models';\r\nimport { getPropertyName, isArrayType } from 'src/app/modules/common-registration/registration.helpers';\r\nimport { NewAttachmentService, RegistrationService as CommonRegistrationService } from 'src/app/modules/common-registration/registration.services';\r\nimport { RegistrationService } from '../services/registration.service';\r\nimport { AlertController } from '@ionic/angular';\r\nimport { TranslateService } from '@ngx-translate/core';\r\nimport { switchMap } from 'rxjs/operators';\r\nimport { forkJoin } from 'rxjs';\r\nimport { LoggingService } from '../../shared/services/logging/logging.service';\r\n\r\nconst DEBUG_TAG = 'BasePageService';\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class BasePageService {\r\n  get Zone() {\r\n    return this.ngZone;\r\n  }\r\n\r\n  get RegistrationService() {\r\n    return this.registrationService;\r\n  }\r\n\r\n  get AlertController() {\r\n    return this.alertController;\r\n  }\r\n\r\n  get TranslateService() {\r\n    return this.translateService;\r\n  }\r\n\r\n  get CommonRegistrationService() {\r\n    return this.commonRegistrationService;\r\n  }\r\n\r\n  constructor(\r\n    private registrationService: RegistrationService,\r\n    private newAttachmentService: NewAttachmentService,\r\n    private commonRegistrationService: CommonRegistrationService,\r\n    private ngZone: NgZone,\r\n    private alertController: AlertController,\r\n    private translateService: TranslateService,\r\n    private loggingService: LoggingService\r\n  ) {}\r\n\r\n  async confirmLeave(registration: IRegistration, registrationTid: RegistrationTid, onReset?: () => void) {\r\n    const leaveText = await this.translateService.get('REGISTRATION.REQUIRED_FIELDS_MISSING').toPromise();\r\n    return this.createResetDialog(leaveText, registration, registrationTid, onReset);\r\n  }\r\n\r\n  async confirmReset(registration: IRegistration, registrationTid: RegistrationTid, onReset?: () => void) {\r\n    const leaveText = await this.translateService.get('REGISTRATION.CONFIRM_RESET').toPromise();\r\n    return this.createResetDialog(leaveText, registration, registrationTid, onReset);\r\n  }\r\n\r\n  private async createResetDialog(message: string, registration: IRegistration, registrationTid: RegistrationTid, onReset?: () => void) {\r\n    const translations = await this.translateService.get(['DIALOGS.CANCEL', 'DIALOGS.YES']).toPromise();\r\n    const alert = await this.alertController.create({\r\n      message,\r\n      buttons: [\r\n        {\r\n          text: translations['DIALOGS.CANCEL'],\r\n          role: 'cancel'\r\n        },\r\n        {\r\n          text: translations['DIALOGS.YES']\r\n        }\r\n      ]\r\n    });\r\n    await alert.present();\r\n    const result = await alert.onDidDismiss();\r\n    const reset: boolean = result.role !== 'cancel';\r\n    if (reset) {\r\n      await this.reset(registration, registrationTid, onReset);\r\n    }\r\n    return reset;\r\n  }\r\n\r\n  async reset(registration: IRegistration, registrationTid: RegistrationTid, onReset?: () => void) {\r\n    this.Zone.run(() => {\r\n      if (registrationTid) {\r\n        registration.request[getPropertyName(registrationTid)] = this.getDefaultValue(registrationTid);\r\n        this.resetImages(registration);\r\n      }\r\n      if (onReset) {\r\n        onReset();\r\n      }\r\n    });\r\n    await this.registrationService.saveRegistrationAsync(registration);\r\n  }\r\n\r\n  createDefaultProps(registration: IRegistration, registrationTid: RegistrationTid) {\r\n    const propName = getPropertyName(registrationTid);\r\n    if (!registration.request[propName]) {\r\n      // Init to new object if null\r\n      registration.request[propName] = this.getDefaultValue(registrationTid);\r\n    }\r\n  }\r\n\r\n  getDefaultValue(registrationTid: RegistrationTid) {\r\n    if (isArrayType(registrationTid)) {\r\n      return [];\r\n    } else {\r\n      return {};\r\n    }\r\n  }\r\n\r\n  resetImages(registration: IRegistration) {\r\n    this.newAttachmentService\r\n      .getAttachments(registration.id)\r\n      .pipe(switchMap((attachments) => forkJoin(attachments.map((a) => this.newAttachmentService.removeAttachment(registration.id, a.id)))))\r\n      .subscribe(\r\n        () => {\r\n          this.loggingService.debug('Reset images complete', DEBUG_TAG);\r\n        },\r\n        (error) => {\r\n          this.loggingService.error(error, DEBUG_TAG, 'Could not reset images');\r\n        }\r\n      );\r\n  }\r\n}\r\n","import { Directive, OnInit } from '@angular/core';\r\nimport { from, of } from 'rxjs';\r\nimport { BasePageService } from './base-page-service';\r\nimport { IRegistration, RegistrationTid, SyncStatus } from 'src/app/modules/common-registration/registration.models';\r\nimport { ActivatedRoute } from '@angular/router';\r\nimport { take, takeUntil, map, switchMap, tap } from 'rxjs/operators';\r\nimport { NgDestoryBase } from '../../../core/helpers/observable-helper';\r\n\r\n@Directive()\r\nexport abstract class BasePage extends NgDestoryBase implements OnInit {\r\n  registration: IRegistration;\r\n  basePageService: BasePageService;\r\n  registrationTid: RegistrationTid;\r\n  activatedRoute: ActivatedRoute;\r\n\r\n  constructor(registrationTid: RegistrationTid, basePageService: BasePageService, activatedRoute: ActivatedRoute) {\r\n    super();\r\n    this.basePageService = basePageService;\r\n    this.activatedRoute = activatedRoute;\r\n    this.registrationTid = registrationTid;\r\n  }\r\n\r\n  ngOnInit() {}\r\n\r\n  ionViewDidEnter() {\r\n    const id = this.activatedRoute.snapshot.params['id'];\r\n    this.basePageService.CommonRegistrationService.getRegistrationByIdShared$(id)\r\n      .pipe(\r\n        take(1),\r\n        map((reg) => {\r\n          this.basePageService.createDefaultProps(reg, this.registrationTid);\r\n          return reg;\r\n        }),\r\n        tap((reg) => {\r\n          this.registration = reg;\r\n        }),\r\n        switchMap(() => this.createInitObservable()),\r\n        takeUntil(this.ngDestroy$)\r\n      )\r\n      .subscribe();\r\n  }\r\n\r\n  onInit?(): void | Promise<any>;\r\n\r\n  onBeforeLeave?(): void | Promise<any>;\r\n\r\n  onReset?(): void;\r\n\r\n  isValid?(): boolean | Promise<boolean>;\r\n\r\n  // NOTE: Remember to add canDeactivate: [CanDeactivateRouteGuard] in page module\r\n  async canLeave() {\r\n    // Check if implementation page has implemented custom isValid logic\r\n    const valid = await Promise.resolve(this.isValid ? this.isValid() : true);\r\n    // Only return alert if page is not empty and invalid\r\n    const isEmpty = await Promise.resolve(this.isEmpty());\r\n    if (!isEmpty && !valid) {\r\n      return this.basePageService.confirmLeave(this.registration, this.registrationTid, () => (this.onReset ? this.onReset() : null));\r\n    }\r\n    return true;\r\n  }\r\n\r\n  private createInitObservable() {\r\n    if (this.onInit) {\r\n      return from(Promise.resolve(this.onInit()));\r\n    }\r\n    return of({});\r\n  }\r\n\r\n  async ionViewWillLeave() {\r\n    if (this.onBeforeLeave) {\r\n      await Promise.resolve(this.onBeforeLeave());\r\n    }\r\n    await this.save(true);\r\n  }\r\n\r\n  save(clean = false) {\r\n    this.registration.syncStatus = SyncStatus.Draft;\r\n    return this.basePageService.RegistrationService.saveRegistrationAsync(this.registration, clean);\r\n  }\r\n\r\n  getSaveFunc() {\r\n    return () => this.save();\r\n  }\r\n\r\n  async isEmpty(): Promise<boolean> {\r\n    return !(await this.basePageService.CommonRegistrationService.hasAnyDataToShowInRegistrationTypes(\r\n      this.registration,\r\n      this.registrationTid\r\n    )\r\n      .pipe(take(1))\r\n      .toPromise());\r\n  }\r\n\r\n  reset() {\r\n    return this.basePageService.confirmReset(this.registration, this.registrationTid, () => (this.onReset ? this.onReset() : null));\r\n  }\r\n\r\n  getResolvedUrl(): string {\r\n    return (\r\n      '/' +\r\n      this.activatedRoute.snapshot.pathFromRoot\r\n        .map((v) => v.url.map((segment) => segment.toString()).join('/'))\r\n        .filter((path) => !!path)\r\n        .join('/')\r\n    );\r\n  }\r\n\r\n  // getConfiguredUrl(): string {\r\n  //     return '/' + this.activatedRoute.snapshot.pathFromRoot\r\n  //         .filter(v => v.routeConfig)\r\n  //         .map(v => v.routeConfig.path)\r\n  //         .join('/');\r\n  // }\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\nimport { WaterLevelPage } from './water-level.page';\r\nimport { SharedComponentsModule } from '../../../shared-components.module';\r\nimport { WaterLevelMeasurementComponent } from '../../../components/water/water-level-measurement/water-level-measurement.component';\r\nimport { CanDeactivateRouteGuard } from '../../can-deactivate-route.guard';\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: '',\r\n    component: WaterLevelPage,\r\n    canDeactivate: [CanDeactivateRouteGuard]\r\n  }\r\n];\r\n\r\n@NgModule({\r\n  imports: [SharedComponentsModule, RouterModule.forChild(routes)],\r\n  declarations: [WaterLevelPage, WaterLevelMeasurementComponent]\r\n})\r\nexport class WaterLevelPageModule {}\r\n","<ion-header>\r\n  <ion-toolbar appHeaderColor mode=\"ios\">\r\n    <ion-buttons slot=\"start\">\r\n      <ion-back-button text=\"\" defaultHref=\"/\"></ion-back-button>\r\n    </ion-buttons>\r\n    <ion-title>\r\n      {{'REGISTRATION.WATER.WATER_LEVEL.TITLE' | translate}}\r\n    </ion-title>\r\n  </ion-toolbar>\r\n</ion-header>\r\n<ion-content>\r\n  <app-registration-content-wrapper *ngIf=\"registration && registration.request.WaterLevel2\"\r\n    [registration]=\"registration\" [registrationTid]=\"registrationTid\" (reset)=\"reset()\">\r\n    <ion-list lines=\"full\">\r\n      <app-kdv-radiobutton-list title=\"REGISTRATION.WATER.WATER_LEVEL.DESCRIBE_SITUATION\"\r\n        kdvKey=\"Water_WaterLevelStateKDV\" [(value)]=\"registration.request.WaterLevel2.WaterLevelStateTID\">\r\n      </app-kdv-radiobutton-list>\r\n      <app-kdv-radiobutton-list title=\"REGISTRATION.WATER.WATER_LEVEL.CAN_YOU_SEE_WATER\" kdvKey=\"Water_WaterAstrayKDV\"\r\n        [(value)]=\"registration.request.WaterLevel2.WaterAstrayTID\"></app-kdv-radiobutton-list>\r\n      <app-kdv-radiobutton-list title=\"REGISTRATION.WATER.WATER_LEVEL.OBSERVATION_TIMING\"\r\n        kdvKey=\"Water_ObservationTimingKDV\" [(value)]=\"registration.request.WaterLevel2.ObservationTimingTID\">\r\n      </app-kdv-radiobutton-list>\r\n      <app-kdv-radiobutton-list title=\"REGISTRATION.WATER.WATER_LEVEL.REGISTRATION_METHOD\"\r\n        kdvKey=\"Water_WaterLevelMethodKDV\" [(value)]=\"registration.request.WaterLevel2.WaterLevelMethodTID\">\r\n      </app-kdv-radiobutton-list>\r\n      <app-kdv-radiobutton-list *ngIf=\"registration.request.WaterLevel2.WaterLevelMethodTID === 1\"\r\n        title=\"REGISTRATION.WATER.WATER_LEVEL.MARKING_REFERENCE\" kdvKey=\"Water_MarkingReferenceKDV\"\r\n        [(value)]=\"registration.request.WaterLevel2.MarkingReferenceTID\">\r\n        <app-text-comment [(value)]=\"registration.request.WaterLevel2.Comment\"\r\n          title=\"{{ 'REGISTRATION.WATER.WATER_LEVEL.DESCRIBE' | translate | uppercase  }} {{ 'REGISTRATION.WATER.WATER_LEVEL.MARKING_PLURAL' | translate | uppercase  }}\">\r\n        </app-text-comment>\r\n      </app-kdv-radiobutton-list>\r\n      <app-kdv-radiobutton-list *ngIf=\"registration.request.WaterLevel2.WaterLevelMethodTID === 1\"\r\n        title=\"REGISTRATION.WATER.WATER_LEVEL.MARKED_WITH\" kdvKey=\"Water_MarkingTypeKDV\"\r\n        [(value)]=\"registration.request.WaterLevel2.MarkingTypeTID\"></app-kdv-radiobutton-list>\r\n      <app-kdv-radiobutton-list *ngIf=\"registration.request.WaterLevel2.WaterLevelMethodTID === 2\"\r\n        title=\"REGISTRATION.WATER.WATER_LEVEL.HOW_DO_YOU_READ\" kdvKey=\"Water_MeasurementTypeKDV\"\r\n        [(value)]=\"registration.request.WaterLevel2.MeasurementTypeTID\">\r\n        <app-text-comment *ngIf=\"registration.request.WaterLevel2.MeasurementTypeTID === 3\"\r\n          [(value)]=\"registration.request.WaterLevel2.MeasuringToolDescription\"\r\n          title=\"REGISTRATION.WATER.WATER_LEVEL.MEASURING_TOOL\"></app-text-comment>\r\n      </app-kdv-radiobutton-list>\r\n      <app-kdv-radiobutton-list *ngIf=\"registration.request.WaterLevel2.MeasurementTypeTID === 1\"\r\n        title=\"REGISTRATION.WATER.WATER_LEVEL.RELATIVE\" kdvKey=\"Water_MeasurementReferenceKDV\"\r\n        [(value)]=\"registration.request.WaterLevel2.MeasurementReferenceTID\">\r\n        <app-text-comment [(value)]=\"registration.request.WaterLevel2.Comment\"\r\n          title=\"REGISTRATION.WATER.WATER_LEVEL.DESCRIBE_HEIGHT\"></app-text-comment>\r\n      </app-kdv-radiobutton-list>\r\n    </ion-list>\r\n    <ng-container *ngIf=\"registration.request.WaterLevel2.WaterLevelMethodTID\">\r\n      <ion-list lines=\"full\">\r\n        <app-water-level-measurement [measurementNumber]=\"i+1\"\r\n          [waterLevelMethod]=\"registration.request.WaterLevel2.WaterLevelMethodTID\"\r\n          [(waterLevelMeasurement)]=\"registration.request.WaterLevel2.WaterLevelMeasurement[i]\"\r\n          [registrationTid]=\"registrationTid\" [dtObsTime]=\"registration.request.DtObsTime\"\r\n          [registrationId]=\"registration.id\" [geoHazard]=\"registration.geoHazard\"\r\n          (waterLevelMeasurementChange)=\"save()\"\r\n          *ngFor=\"let measurement of registration.request.WaterLevel2.WaterLevelMeasurement; let i = index\">\r\n        </app-water-level-measurement>\r\n      </ion-list>\r\n      <ion-list class=\"ion-margin-top\" lines=\"full\">\r\n        <ion-item (click)=\"addWaterLevelMeasurement()\">\r\n          <ion-icon slot=\"start\" color=\"primary\" name=\"add-circle\"></ion-icon>\r\n          <ion-label>{{'REGISTRATION.WATER.WATER_LEVEL.ADD_NEW' | translate}}\r\n            {{(registration.request.WaterLevel2.WaterLevelMethodTID === 1 ?\r\n            'REGISTRATION.WATER.WATER_LEVEL.WATER_MARKING':\r\n            'REGISTRATION.WATER.WATER_LEVEL.WATER_MEASUREMENT') | translate | lowercase }}</ion-label>\r\n        </ion-item>\r\n      </ion-list>\r\n    </ng-container>\r\n  </app-registration-content-wrapper>\r\n</ion-content>","import { Component, QueryList, ViewChildren } from '@angular/core';\r\nimport { BasePage } from '../../base.page';\r\nimport { RegistrationTid } from 'src/app/modules/common-registration/registration.models';\r\nimport { IsEmptyHelper } from '../../../../../core/helpers/is-empty.helper';\r\nimport { BasePageService } from '../../base-page-service';\r\nimport { ActivatedRoute } from '@angular/router';\r\nimport { WaterLevelMeasurementComponent } from '../../../components/water/water-level-measurement/water-level-measurement.component';\r\n\r\n@Component({\r\n  selector: 'app-water-level',\r\n  templateUrl: './water-level.page.html',\r\n  styleUrls: ['./water-level.page.scss']\r\n})\r\nexport class WaterLevelPage extends BasePage {\r\n  @ViewChildren(WaterLevelMeasurementComponent)\r\n  private waterLevelMeasurements: QueryList<WaterLevelMeasurementComponent>;\r\n\r\n  constructor(\r\n    basePageService: BasePageService,\r\n    activatedRoute: ActivatedRoute\r\n  ) {\r\n    super(RegistrationTid.WaterLevel2, basePageService, activatedRoute);\r\n  }\r\n\r\n  onInit() {\r\n    if (\r\n      !this.registration.request.WaterLevel2.WaterLevelMeasurement ||\r\n      this.registration.request.WaterLevel2.WaterLevelMeasurement.length === 0\r\n    ) {\r\n      this.registration.request.WaterLevel2.WaterLevelMeasurement = [\r\n        { DtMeasurementTime: undefined }\r\n      ];\r\n    }\r\n  }\r\n\r\n  onReset() {\r\n    this.registration.request.WaterLevel2.WaterLevelMeasurement = [\r\n      { DtMeasurementTime: undefined }\r\n    ];\r\n  }\r\n\r\n  addWaterLevelMeasurement() {\r\n    this.registration.request.WaterLevel2.WaterLevelMeasurement.push({\r\n      DtMeasurementTime: undefined\r\n    });\r\n    this.save();\r\n  }\r\n\r\n  onBeforeLeave() {\r\n    // Cleanup\r\n    if (this.registration.request.WaterLevel2.WaterLevelMethodTID === 2) {\r\n      this.registration.request.WaterLevel2.MarkingReferenceTID = null;\r\n    }\r\n    if (this.registration.request.WaterLevel2.MeasurementTypeTID !== 3) {\r\n      this.registration.request.WaterLevel2.MeasuringToolDescription = undefined;\r\n    }\r\n    if (\r\n      !(\r\n        this.registration.request.WaterLevel2.WaterLevelMethodTID === 1 ||\r\n        this.registration.request.WaterLevel2.MeasurementTypeTID === 1\r\n      )\r\n    ) {\r\n      this.registration.request.WaterLevel2.Comment = undefined;\r\n    }\r\n    this.registration.request.WaterLevel2.WaterLevelMeasurement = (\r\n      this.registration.request.WaterLevel2.WaterLevelMeasurement || []\r\n    ).filter((item) => !IsEmptyHelper.isEmpty(item));\r\n  }\r\n\r\n  isValid() {\r\n    for (const wl of this.waterLevelMeasurements.toArray()) {\r\n      wl.showError();\r\n    }\r\n    return (\r\n      this.waterLevelMeasurements &&\r\n      !this.waterLevelMeasurements.some((x) => !x.isValid)\r\n    );\r\n  }\r\n}\r\n"]}