{"version":3,"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAOIA;;AACEA;;;;AACFA;;;;AADEA;;AAAAA;;;;;;AAEFA;;AACEA;;;;AACFA;;;;;;AADEA;;AAAAA;;;;;;AAEFA;;AACEA;;;;;;AAIAA;;;;AACFA;;;;AALEA;;AAAAA;;AAIAA;;AAAAA;;;;;;AAGJA;;AACEA;;AACEA;;;;AACFA;;AACFA;;;;;;AAFIA;;AAAAA;;;;ACPN,UAAMC,SAAS,GAAGC,mBAAO;AAAC;AAAA,WAAD,CAAzB;;UAOaC;AAIX,8CACUC,mBADV,EAEUC,aAFV,EAGUC,gBAHV,EAIUC,MAJV,EAIwB;AAAA;;AAHd;AACA;AACA;AACA;AANA,oCAAqB,IAAIP,uDAAJ,EAArB;AAON;;;;iBAEJ,oBAAQ,CAAK;;;iBAEP,uBAAW;;;;;;;;AACf,2BAAKQ,YAAL,CAAkBC,UAAlB,GAA+BC,qGAA/B;;AACA,6BAAM,KAAKN,mBAAL,CAAyBO,qBAAzB,CAA+C,KAAKH,YAApD,CAAN;;;AACA,2BAAKD,MAAL,CAAYK,GAAZ,CAAgB,YAAK;AACnB,6BAAI,CAACC,kBAAL,CAAwBC,IAAxB,CAA6B,KAAI,CAACN,YAAlC;AACD,uBAFD;;;;;;;;;AAGD;;;iBAEK,qBAAS;;;;;;;;AACQ,6BAAM,KAAKF,gBAAL,CACxBS,GADwB,CACpB,CAAC,4BAAD,EAA+B,yBAA/B,CADoB,EAExBC,SAFwB,EAAN;;;AAAfC;AAGN;AACA;AACA;AACA;AACA;AACA;AACMC,qCAAeC,IAAI,CAAClB,SAAS,CAAC,KAAKO,YAAN,CAAV;AACnBY,oCAAc,CAAC,+BAA+BF,YAAhC,GACpB;AACA;AACA;;AACMG,8BAA8B;AAClCC,0BAAE,EAAEC,iEAD8B;AAElCH,mCAAW,EAAXA,WAFkC;AAGlCI,+BAAO,EAAEP,YAAY,CAAC,4BAAD,CAHa;AAIlCQ,4BAAI,EAAER,YAAY,CAAC,yBAAD,CAJgB;AAKlCS,8BAAM,EAAE;AAL0B;AAOpC,2BAAKrB,aAAL,CAAmBsB,IAAnB,CAAwBN,KAAxB;;;;;;;;;AACD;;;;;;;yBA5CUlB,8BAA2BH;AAAA;;;cAA3BG;AAA2ByB;AAAAC;AAAArB;AAAA;AAAAsB;AAAAjB;AAAA;AAAAkB;AAAAC;AAAAC;AAAAC;AAAA;ADvBxClC;;AACEA;;AACEA;;AACEA;;;;AACFA;;AACFA;;AACAA;;AACEA;;AAGAA;;AAGAA;;AAOFA;;AACAA;;AAKAA;;AAAUA;AAAA,qBAASmC,eAAT;AAAoB,aAApB;;AACRnC;;AACAA;;AACEA;;;;AACFA;;AACFA;;AACAA;;AAAUA;AAAA,qBAASmC,iBAAT;AAAsB,aAAtB;;AACRnC;;AACAA;;AACEA;;;;AACFA;;AACFA;;AACFA;;;;AAnCMA;;AAAAA;;AAIgCA;;AAAAA;;AAGAA;;AAAAA;;AAGAA;;AAAAA;;AAQzBA;;AAAAA;;AAQPA;;AAAAA;;AAMAA;;AAAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AE5BMA;;AAAqCA;;;;AAAqCA;;;;AAArCA;;AAAAA;;;;;;AACrCA;;AAAsCA;;;;AAAmCA;;;;AAAnCA;;AAAAA;;;;;;;;AARlDA;;AACEA;;AACEA;;AACEA;;AACEA;;AACEA;;AAAyEA;AAAAA;;AAAA;;AAAA;AAAA;;AACvEA;;AACAA;;AACAA;;AACFA;;AACFA;;AACFA;;AACAA;;AACEA;;AACEA;;AAAYA;AAAAA;;AAAA;;AAAA;AAAA;;AAEVA;;AACAA;;;;AACFA;;AACFA;;AACFA;;AACFA;;AACFA;;AACFA;;;;;;AAlBsBA;;AAAAA;;AAEHA;;AAAAA;;AACAA;;AAAAA;;AASPA;;AAAAA;;;;UCCCoC;AAkBX,sCACUhC,mBADV,EAEUiC,eAFV,EAGUC,kBAHV,EAIUhC,gBAJV,EAKUiC,aALV,EAMUC,iBANV,EAOUC,yBAPV,EAQUC,GARV,EASUnC,MATV,EASwB;AAAA;;AARd;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAdV,2BAAY,KAAZ;AACA,6BAAc,KAAd;AAEQ,4BAAa,IAAIoC,yCAAJ,EAAb;AAYJ;;;;eApBJ,eAAc;AACZ;AACA,mBAAO,KAAKC,OAAL,IAAgB,KAAKC,SAArB,IAAkC,KAAKC,WAA9C;AACD;;;iBAmBD,oBAAQ;AAAA;;AACN,iBAAKD,SAAL,GAAiB,KAAjB;AACA,iBAAKC,WAAL,GAAmB,KAAnB;AACA,iBAAKN,iBAAL,CAAuBO,YAAvB,CACGC,IADH,CACQ,2DAAU,KAAKC,UAAf,CADR,EAEGC,SAFH,CAEa,UAACC,GAAD,EAAQ;AACjB,oBAAI,CAAC5C,MAAL,CAAYK,GAAZ,CAAgB,YAAK;AACnB,sBAAI,CAACkC,WAAL,GAAmBK,GAAnB;;AACA,sBAAI,CAACT,GAAL,CAASU,aAAT;AACH,eAHC;AAIH,aAPD;AAQD;;;iBAED,qBAAYC,OAAZ,EAAuD;AAAA;;;;AACrD,gBAAI,aAAO,CAAC7C,YAAR,MAAoB,IAApB,IAAoB8C,aAApB,GAAoB,MAApB,GAAoBA,GAAEC,YAA1B,EAAwC;AACtC,mBAAKd,yBAAL,CAA+BG,OAA/B,CAAuCS,OAAO,CAAC7C,YAAR,CAAqB+C,YAA5D,EAA0EC,IAA1E,CAA+E,UAACC,KAAD,EAAU;AACvF,sBAAI,CAACb,OAAL,GAAea,KAAf;;AACA,sBAAI,CAACf,GAAL,CAASU,aAAT;AACD,eAHD;AAID;AACF;;;iBAED,uBAAW;AACT,iBAAKH,UAAL,CAAgBS,IAAhB;AACA,iBAAKT,UAAL,CAAgBU,QAAhB;AACD;;;iBAEK,gBAAI;;;;;;;0BACH,KAAKd;;;;;AACR,2BAAKA,SAAL,GAAiB,IAAjB;AACA,2BAAKH,GAAL,CAASU,aAAT;;;AAEyB,6BAAM,KAAKd,kBAAL,CAAwBsB,YAAxB,CACxBZ,IADwB,CACnB,sDAAK,CAAL,CADmB,EAExBhC,SAFwB,EAAN;;;AAAf6C;;AAGN,6BAAM,KAAKzD,mBAAL,CAAyB0D,gBAAzB,CACJD,YAAY,CAACE,OADT,EAEJ,KAAKvD,YAFD,CAAN;;;;AAKE,2BAAKqC,SAAL,GAAiB,KAAjB;AACA,2BAAKH,GAAL,CAASU,aAAT;;;;;;;;;;AAGT;;;iBAEK,mBAAM;;;;;;;;;;AAEW,6BAAM,KAAK9C,gBAAL,CACxBS,GADwB,CACpB,CACH,qBADG,EAEH,6BAFG,EAGH,UAHG,EAIH,cAJG,CADoB,EAOxBC,SAPwB,EAAN;;;AAAfC;;AAQQ,6BAAM,KAAKoB,eAAL,CAAqB2B,MAArB,CAA4B;AAC9CC,8BAAM,EAAEhD,YAAY,CAAC,qBAAD,CAD0B;AAE9CiD,+BAAO,EAAEjD,YAAY,CAAC,6BAAD,CAFyB;AAG9CkD,+BAAO,EAAE,CACP;AACEC,8BAAI,EAAEnD,YAAY,CAAC,cAAD,CADpB;AAEEoD,8BAAI,EAAE,QAFR;AAGEC,kCAAQ,EAAE;AAHZ,yBADO,EAMP;AACEF,8BAAI,EAAEnD,YAAY,CAAC,UAAD,CADpB;AAEEsD,iCAAO,EAAE,mBAAK;AACZ,kCAAI,CAAC9B,yBAAL,CAA+B+B,oCAA/B,CACE,MAAI,CAAChE,YAAL,CAAkBiE,EADpB,EAEEvB,SAFF,CAEY,YAAK;AACf,oCAAI,CAACX,aAAL,CAAmBmC,YAAnB,CAAgC,EAAhC;AACD,6BAJD;AAKD;AARH,yBANO;AAHqC,uBAA5B,CAAN;;;AAARC;;AAqBN,6BAAMA,KAAK,CAACC,OAAN,EAAN;;;;;;;;;AACD;;;;;;;yBA5GUxC,sBAAmBpC;AAAA;;;cAAnBoC;AAAmBR;AAAAC;AAAArB;AAAA;AAAAqE;AAAA9C;AAAAC;AAAAC;AAAAC;AAAA;ADlBhClC;;;;AAAaA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AEGTA;;AACEA;;;;AACFA;;;;;;AADEA;;AAAAA;;;;;;AAGAA;;;;;;AAAuDA;;;;;;AADzDA;;AACEA;;AACFA;;;;;;AADyCA;;AAAAA;;;;;;AAG3CA;;;;;;;;AAVFA;;AAA+BA;AAAAA;;AAAA;;AAAA;AAAA;;AAC7BA;;AACEA;;AAAIA;;;;AAA2BA;;AAC/BA;;AAGAA;;AAGFA;;AACAA;;AACFA;;;;;;AAXoDA;;AAE5CA;;AAAAA;;AACAA;;AAAAA;;AAGeA;;AAAAA;;AAIVA;;AAAAA;;;;ACAb,UAAM8E,SAAS,GAAG,sBAAlB;;UAOaC;;;;;AAMX,uCAAoBxC,aAApB,EAA0DyC,oBAA1D,EAA8GtC,GAA9G,EAA8IuC,MAA9I,EAAoK;AAAA;;AAAA;;AAClK;AADkB;AAAsC;AAAoD;AAAgC;AAJrI,4BAAW,KAAX;AAI2J;AAEnK;;;;iBAED,uBAAW;AAAA;;;;AACT,gBAAI,YAAKC,IAAL,MAAS,IAAT,IAAS5B,aAAT,GAAS,MAAT,GAASA,GAAElC,WAAX,KAA0B,IAA9B,EAAoC;AAClC,wDAAG,KAAK8D,IAAL,CAAU9D,WAAb,EACG4B,IADH,CAEI,2CAAI,UAAC5B,WAAD;AAAA,uBAAiBA,WAAW,CAAC+D,MAAZ,CAAmB,UAACC,CAAD;AAAA,yBAAOA,CAAC,CAACC,IAAF,KAAW,KAAlB;AAAA,iBAAnB,EAA4CC,GAA5C,CAAgD,UAACF,CAAD;AAAA,yBAAOA,CAAC,CAACG,UAAT;AAAA,iBAAhD,CAAjB;AAAA,eAAJ,CAFJ,EAGI,iDAAU,UAACnE,WAAD;AAAA,uBACRA,WAAW,CAACoE,MAAZ,KAAuB,CAAvB,GACI,0CAAG,EAAH,CADJ,GAEI,mEACKpE,WAAW,CAACkE,GAAZ,CAAgB,UAACF,CAAD;AAAA,yBACjB,MAAI,CAACJ,oBAAL,CAA0BS,OAA1B,CAAkC,MAAI,CAACP,IAAL,CAAUT,EAA5C,EAAgDW,CAAC,CAACX,EAAlD,EAAsDzB,IAAtD,CACE,4CAAK,CAAL,CADF,EAEE,2CAAI,UAAC0C,IAAD;AAAA,2BAAUC,gCAAMP,CAAN,GAAO;AAAEM,0BAAI,EAAJA;AAAF,qBAAP,CAAV;AAAA,mBAAJ,CAFF,EAGE,mDAAW,UAACE,GAAD,EAAQ;AACjB,0BAAI,CAACX,MAAL,CAAYY,KAAZ,CAAkBD,GAAlB,EAAuBd,SAAvB,EAAkC,oCAAlC;;AACA,2BAAO,0CAAEa,gCAAMP,CAAN,GAAO;AAAEM,0BAAI,EAAEI;AAAR,qBAAP,CAAF,CAAP;AACD,mBAHD,CAHF,CADiB;AAAA,iBAAhB,CADL,EAHI;AAAA,eAAV,CAHJ,EAmBI,kDAAU,KAAK7C,UAAf,CAnBJ,EAqBGC,SArBH,CAqBa,UAAC6C,MAAD,EAAW;AACpB,sBAAI,CAAC3E,WAAL,GAAmB2E,MAAnB;;AACA,sBAAI,CAACrD,GAAL,CAASU,aAAT;AACD,eAxBH;AAyBD;AACF;;;iBAED,oBAAQ;AACN,gBAAI,CAAC,KAAK4C,QAAV,EAAoB;AAClB,mBAAKzD,aAAL,CAAmB0D,eAAnB,CAAmC,CAAC,KAAKf,IAAL,CAAUgB,IAAX,EAAiB,KAAKhB,IAAL,CAAUT,EAA3B,CAAnC,EAAmE;AACjE0B,2BAAW,EAAE,KAAKjB,IAAL,CAAUiB;AAD0C,eAAnE;AAGD;AACF;;;;QA9CuCC;;;yBAA7BrB,uBAAoB/E;AAAA;;;cAApB+E;AAAoBnD;AAAAC;AAAAqD;AAAAc;AAAA;AAAAnB;AAAA9C;AAAAC;AAAAC;AAAAC;AAAA;ADjBjClC;;;;AAA0EA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AES1E,UAAMqG,MAAM,GAAW,CACrB;AACEC,YAAI,EAAE,EADR;AAEEC,iBAAS,EAAEC,wDAFb;AAGEC,qBAAa,EAAE,CAACC,uEAAD;AAHjB,OADqB,CAAvB;;UAiBaC;;;;;yBAAAA;AAAkB;;;cAAlBA;;;kBARF,CAACC,6EAAD,EAAyBC,mEAAsBR,MAAtB,CAAzB;;;;4HAQEM,qBAAkB;AAAAG,yBAN3BN,wDAM2B,EAL3BO,8FAK2B,EAJ3BC,iGAI2B,EAH3BC,sHAG2B;AAHAC,oBALnBN,6EAKmB,EALKC,yDAKL;AAGA;AARK;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACNhCM;;;;;;AACEA;;;;;;AAOAA;;;;;;;;AAAkBA,mJAAgE,MAAhE,EAAgEC,OAAhE;;;;;;AAVxBD;;AACEA;;AACEA;;AAEAA;;AACEA;;AACEA;;AACEA;;;;AACFA;;AACFA;;AACAA;;AAEFA;;AACFA;;AACAA;;AACFA;;;;;;AAb8BA;;AAAAA;;AAKpBA;;AAAAA;;AAIeA;;AAAAA,oGAAiB,cAAjB,EAAiBE,sBAAjB;;AAGNF;;AAAAA;;;;UCFNG;;;;;AAOX,+BACU7E,yBADV,EAEUC,GAFV,EAGU6E,cAHV,EAIUC,kBAJV,EAKUC,gBALV,EAMUzC,oBANV,EAMoD;AAAA;;AAAA;;AAElD;AAPQ;AACA;AACA;AACA;AACA;AACA;AAXV,kCAAiB0C,oGAAjB;AACA,6BAAYC,kEAAZ;AACA,sCAAqBD,+FAArB;AACA,gCAAoC,EAApC;AAQoD;AAGnD;;;;iBAED,oBAAQ;AAAA;;AACN,gBAAMjD,EAAE,GAAG,KAAK8C,cAAL,CAAoBK,QAApB,CAA6BC,MAA7B,CAAoC,IAApC,CAAX;AACA,iBAAKC,aAAL,GAAqB,KAAKrF,yBAAL,CAA+BsF,0BAA/B,CAA0DtD,EAA1D,CAArB;AACA,iBAAKqD,aAAL,CAAmB9E,IAAnB,CAAwB,4DAAU,KAAKC,UAAf,CAAxB,EAAoDC,SAApD,CAA8D,UAAC1C,YAAD,EAAiB;AAC7E,oBAAI,CAACA,YAAL,GAAoBA,YAApB;;AACA,oBAAI,CAACkC,GAAL,CAASU,aAAT;AACD,aAHD;AAIA,iBAAK4E,2BAAL;AACA,iBAAKP,gBAAL,CAAsBQ,gBAAtB;AACD;;;iBAEO,uCAA2B;AAAA;;AACjC,iBAAKH,aAAL,CACG9E,IADH,CAEI,4DAAU,UAACkF,GAAD;AAAA,qBACR,sDAAc,CAAC,MAAI,CAACT,gBAAL,CAAsBU,yBAAtB,EAAD,EAAoD,MAAI,CAACnD,oBAAL,CAA0BoD,cAA1B,CAAyCF,GAAG,CAACzD,EAA7C,CAApD,CAAd,EAAqHzB,IAArH,CACE,4DAAU;AAAA;AAAA,oBAAEqF,UAAF;;AAAA,uBAAkB,6CAAK,MAAI,CAACb,kBAAL,CAAwBc,eAAxB,CAAwCJ,GAAxC,EAA6CG,UAA7C,CAAL,CAAlB;AAAA,eAAV,CADF,CADQ;AAAA,aAAV,CAFJ,EAOI,uEAAqB,UAACjD,CAAD,EAAImD,CAAJ;AAAA,qBAAUC,uDAAUpD,CAAV,EAAamD,CAAb,CAAV;AAAA,aAArB,CAPJ,EAQI,4DAAU,KAAKtF,UAAf,CARJ,EAUGC,SAVH,CAUa,UAACuF,YAAD,EAAiB;AAC1B,oBAAI,CAACA,YAAL,GAAoBA,YAApB;;AACA,oBAAI,CAAC/F,GAAL,CAASU,aAAT;AACD,aAbH;AAcD;;;iBAED,yBAAgBsF,KAAhB,EAA+BxD,IAA/B,EAAiD;AAC/C,gBAAI,CAACA,IAAL,EAAW;AACT,qBAAO,IAAP;AACD;;AACD,mBAAOA,IAAI,CAACgB,IAAZ;AACD;;;;QAnD+ByC;;;yBAArBrB,eAAYH;AAAA;;;cAAZG;AAAY1F;AAAAiD;AAAA9C;AAAAC;AAAAC;AAAAC;AAAA;ADtBzBiF;;AACEA;;AACEA;;AACEA;;AACFA;;AACAA;;AACEA;;;;AACFA;;AACFA;;AACFA;;AACAA;;;;AAJMA;;AAAAA;;AAISA;;AAAAA;;;;;;;;;;","names":["_angular_core__WEBPACK_IMPORTED_MODULE_4__","stringify","__webpack_require__","FailedRegistrationComponent","registrationService","emailComposer","translateService","ngZone","registration","syncStatus","src_app_modules_common_registration_registration_models__WEBPACK_IMPORTED_MODULE_0__","saveRegistrationAsync","run","registrationChange","emit","get","toPromise","translations","base64string","btoa","attachments","email","to","_settings__WEBPACK_IMPORTED_MODULE_3__","subject","body","isHtml","open","selectors","inputs","outputs","decls","vars","consts","template","ctx","SendButtonComponent","alertController","userSettingService","navController","regobsAuthService","commonRegistrationService","cdr","rxjs__WEBPACK_IMPORTED_MODULE_5__","isEmpty","isSending","isLoggingIn","isLoggingIn$","pipe","ngDestroy$","subscribe","val","detectChanges","changes","_a","currentValue","then","empty","next","complete","userSetting$","userSettings","sendRegistration","appMode","create","header","message","buttons","text","role","cssClass","handler","deleteRegistrationFromOfflineStorage","id","navigateRoot","alert","present","features","DEBUG_TAG","SummaryItemComponent","newAttachmentService","logger","item","filter","a","type","map","attachment","length","getBlob","blob","Object","err","error","undefined","result","readonly","navigateForward","href","queryParams","src_app_core_helpers_observable_helper__WEBPACK_IMPORTED_MODULE_0__","routes","path","component","_overview_page__WEBPACK_IMPORTED_MODULE_0__","canDeactivate","_save_as_draft_guard__WEBPACK_IMPORTED_MODULE_5__","OverviewPageModule","_shared_components_module__WEBPACK_IMPORTED_MODULE_3__","_angular_router__WEBPACK_IMPORTED_MODULE_7__","declarations","_components_send_button_send_button_component__WEBPACK_IMPORTED_MODULE_1__","_components_summary_item_summary_item_component__WEBPACK_IMPORTED_MODULE_2__","_components_failed_registration_failed_registration_component__WEBPACK_IMPORTED_MODULE_4__","imports","_angular_core__WEBPACK_IMPORTED_MODULE_10__","item_r3","ctx_r0","OverviewPage","activatedRoute","summaryItemService","userGroupService","src_app_modules_common_registration_registration_models__WEBPACK_IMPORTED_MODULE_1__","_varsom_regobs_common_core__WEBPACK_IMPORTED_MODULE_11__","snapshot","params","registration$","getRegistrationByIdShared$","initSummaryItemSubscription","updateUserGroups","reg","getUserGroupsAsObservable","getAttachments","userGroups","getSummaryItems","b","fast_deep_equal__WEBPACK_IMPORTED_MODULE_5___default","summaryItems","index","src_app_core_helpers_observable_helper__WEBPACK_IMPORTED_MODULE_4__"],"sources":["webpack:///src/app/modules/registration/components/failed-registration/failed-registration.component.html","webpack:///src/app/modules/registration/components/failed-registration/failed-registration.component.ts","webpack:///src/app/modules/registration/components/send-button/send-button.component.html","webpack:///src/app/modules/registration/components/send-button/send-button.component.ts","webpack:///src/app/modules/registration/components/summary-item/summary-item.component.html","webpack:///src/app/modules/registration/components/summary-item/summary-item.component.ts","webpack:///src/app/modules/registration/pages/overview/overview.module.ts","webpack:///src/app/modules/registration/pages/overview/overview.page.html","webpack:///src/app/modules/registration/pages/overview/overview.page.ts"],"sourcesContent":["<ion-list lines=\"full\">\r\n  <ion-list-header class=\"ion-text-uppercase\">\r\n    <ion-label>\r\n      {{'REGISTRATION.FAILED.TITLE' | translate}}\r\n    </ion-label>\r\n  </ion-list-header>\r\n  <ion-item>\r\n    <ion-label class=\"ion-text-wrap\" *ngIf=\"registration.syncStatusCode === 0\">\r\n      {{'REGISTRATION.FAILED.SUBTITLE' | translate}}\r\n    </ion-label>\r\n    <ion-label class=\"ion-text-wrap\" *ngIf=\"registration.syncStatusCode === 400\">\r\n      {{'REGISTRATION.FAILED.PROBLEM' | translate}}: {{ registration.syncError }}\r\n    </ion-label>\r\n    <ion-label class=\"ion-text-wrap\" *ngIf=\"registration.syncStatusCode > 400\">\r\n      {{'REGISTRATION.FAILED.PROBLEM' | translate}}. {{'REGISTRATION.FAILED.LOGGED' | translate}}\r\n      <!-- Ta skjermbilde og\r\n      <app-external-link src=\"http://www.regobs.no/Home/About\">kontakt oss</app-external-link>\r\n      , så hjelper du oss med å finne en løsning.  -->\r\n      {{'REGISTRATION.FAILED.PROBLEM_HELP_TEXT' | translate}}\r\n    </ion-label>\r\n  </ion-item>\r\n  <ion-item *ngIf=\"registration.syncStatusCode >= 400\">\r\n    <ion-label class=\"ion-text-wrap\">\r\n      {{'REGISTRATION.FAILED.REFERENCE' | translate}} ID: {{ registration.id }}\r\n    </ion-label>\r\n  </ion-item>\r\n  <ion-item (click)=\"sendEmail()\">\r\n    <ion-icon slot=\"start\" name=\"mail\"></ion-icon>\r\n    <ion-label class=\"ion-text-wrap\">\r\n      {{'REGISTRATION.FAILED.SEND_EMAIL' | translate}}\r\n    </ion-label>\r\n  </ion-item>\r\n  <ion-item (click)=\"openForEdit()\">\r\n    <ion-icon slot=\"start\" name=\"create\"></ion-icon>\r\n    <ion-label class=\"ion-text-wrap\">\r\n      {{'REGISTRATION.FAILED.EDIT_OBSERVATION' | translate}}\r\n    </ion-label>\r\n  </ion-item>\r\n</ion-list>","import {\r\n  Component,\r\n  OnInit,\r\n  Input,\r\n  Output,\r\n  EventEmitter,\r\n  NgZone\r\n} from '@angular/core';\r\nimport { IRegistration, SyncStatus } from 'src/app/modules/common-registration/registration.models';\r\nimport { RegistrationService } from '../../services/registration.service';\r\nimport {\r\n  EmailComposer,\r\n  EmailComposerOptions\r\n} from '@ionic-native/email-composer/ngx';\r\nimport { TranslateService } from '@ngx-translate/core';\r\nimport { settings } from '../../../../../settings';\r\nconst stringify = require('json-stringify-safe');\r\n\r\n@Component({\r\n  selector: 'app-failed-registration',\r\n  templateUrl: './failed-registration.component.html',\r\n  styleUrls: ['./failed-registration.component.scss']\r\n})\r\nexport class FailedRegistrationComponent implements OnInit {\r\n  @Input() registration: IRegistration;\r\n  @Output() registrationChange = new EventEmitter();\r\n\r\n  constructor(\r\n    private registrationService: RegistrationService,\r\n    private emailComposer: EmailComposer,\r\n    private translateService: TranslateService,\r\n    private ngZone: NgZone,\r\n  ) {}\r\n\r\n  ngOnInit() {}\r\n\r\n  async openForEdit() {\r\n    this.registration.syncStatus = SyncStatus.Draft;\r\n    await this.registrationService.saveRegistrationAsync(this.registration);\r\n    this.ngZone.run(() => {\r\n      this.registrationChange.emit(this.registration);\r\n    });\r\n  }\r\n\r\n  async sendEmail() {\r\n    const translations = await this.translateService\r\n      .get(['REGISTRATION.EMAIL.SUBJECT', 'REGISTRATION.EMAIL.BODY'])\r\n      .toPromise();\r\n    // const pictures = this.registrationService\r\n    //   .getAllPictures(this.registration.request)\r\n    //   .filter(\r\n    //     (p) => p.PictureImageBase64 && !p.PictureImageBase64.startsWith('data')\r\n    //   )\r\n    //   .map((p) => p.PictureImageBase64);\r\n    const base64string = btoa(stringify(this.registration));\r\n    const attachments = ['base64:registration.json//' + base64string];\r\n    // const attachments = ['base64:registration.json//' + base64string].concat(\r\n    //   pictures\r\n    // );\r\n    const email: EmailComposerOptions = {\r\n      to: settings.errorEmailAddress,\r\n      attachments,\r\n      subject: translations['REGISTRATION.EMAIL.SUBJECT'],\r\n      body: translations['REGISTRATION.EMAIL.BODY'],\r\n      isHtml: true\r\n    };\r\n    this.emailComposer.open(email);\r\n  }\r\n\r\n  // private async getEmailAddress() {\r\n  //   const userSetting = await this.userSettingService.getUserSettings();\r\n  //   switch (userSetting.currentGeoHazard) {\r\n  //     case GeoHazard.Snow:\r\n  //       return 'snoskredvarsling@nve.no';\r\n  //     case GeoHazard.Ice:\r\n  //       return 'isvarsling@nve.no';\r\n  //     case GeoHazard.Water:\r\n  //       return 'flomvarsling@nve.no';\r\n  //     case GeoHazard.Dirt:\r\n  //       return 'jordskredvarsling@nve.no';\r\n  //   }\r\n  // }\r\n}\r\n","<ion-footer *ngIf=\"registration\">\r\n  <ion-toolbar>\r\n    <ion-grid class=\"ion-no-padding\">\r\n      <ion-row>\r\n        <ion-col class=\"send-button-col\" size=\"12\">\r\n          <ion-button [disabled]=\"isDisabled\" expand=\"block\" color=\"varsom-orange\" (click)=\"send()\">\r\n            <ion-icon slot=\"start\" name=\"send\"></ion-icon>\r\n            <span *ngIf=\"registration.syncError\">{{\"REGISTRATION.RESEND\" | translate}}</span>\r\n            <span *ngIf=\"!registration.syncError\">{{\"REGISTRATION.SEND\" | translate}}</span>\r\n          </ion-button>\r\n        </ion-col>\r\n      </ion-row>\r\n      <ion-row class=\"ion-no-padding\">\r\n        <ion-col class=\"delete-button-col ion-no-padding ion-text-center\">\r\n          <ion-button (click)=\"delete()\" color=\"dark\" size=\"small\" fill=\"clear\">\r\n            <!-- <ion-icon slot=\"start\" name=\"trash\"></ion-icon> -->\r\n            <svg-icon slot=\"start\" src=\"/assets/icon/delete.svg\"></svg-icon>\r\n            {{\"REGISTRATION.DELETE\" | translate}}\r\n          </ion-button>\r\n        </ion-col>\r\n      </ion-row>\r\n    </ion-grid>\r\n  </ion-toolbar>\r\n</ion-footer>","import { Component, OnInit, Input, NgZone, OnDestroy, ChangeDetectionStrategy, ChangeDetectorRef, OnChanges, SimpleChanges } from '@angular/core';\r\nimport { RegistrationService } from '../../services/registration.service';\r\nimport { AlertController, NavController } from '@ionic/angular';\r\nimport { TranslateService } from '@ngx-translate/core';\r\nimport { IRegistration } from 'src/app/modules/common-registration/registration.models';\r\nimport { UserSettingService } from '../../../../core/services/user-setting/user-setting.service';\r\nimport { take, takeUntil } from 'rxjs/operators';\r\nimport { RegobsAuthService } from '../../../auth/services/regobs-auth.service';\r\nimport { Subject } from 'rxjs';\r\nimport { RegistrationService as CommonRegistrationService } from 'src/app/modules/common-registration/registration.services';\r\nimport { SmartChanges } from 'src/app/core/helpers/simple-changes.helper';\r\n\r\n@Component({\r\n  selector: 'app-send-button',\r\n  templateUrl: './send-button.component.html',\r\n  styleUrls: ['./send-button.component.scss'],\r\n  changeDetection: ChangeDetectionStrategy.OnPush\r\n})\r\nexport class SendButtonComponent implements OnInit, OnDestroy, OnChanges {\r\n  @Input() registration: IRegistration;\r\n\r\n  // get isEmpty(): boolean {\r\n  //   return this.registrationService.isRegistrationEmpty(this.registration);\r\n  // }\r\n  isEmpty: boolean;\r\n\r\n  get isDisabled(): boolean {\r\n    // TODO: Hvorfor disabled hvis man holder på å logge inn?\r\n    return this.isEmpty || this.isSending || this.isLoggingIn;\r\n  }\r\n\r\n  isSending = false;\r\n  isLoggingIn = false;\r\n\r\n  private ngDestroy$ = new Subject<void>();\r\n\r\n  constructor(\r\n    private registrationService: RegistrationService,\r\n    private alertController: AlertController,\r\n    private userSettingService: UserSettingService,\r\n    private translateService: TranslateService,\r\n    private navController: NavController,\r\n    private regobsAuthService: RegobsAuthService,\r\n    private commonRegistrationService: CommonRegistrationService,\r\n    private cdr: ChangeDetectorRef,\r\n    private ngZone: NgZone,\r\n  ) {}\r\n\r\n  ngOnInit(): void {\r\n    this.isSending = false;\r\n    this.isLoggingIn = false;\r\n    this.regobsAuthService.isLoggingIn$\r\n      .pipe(takeUntil(this.ngDestroy$))\r\n      .subscribe((val) => {\r\n        this.ngZone.run(() => {\r\n          this.isLoggingIn = val;\r\n          this.cdr.detectChanges();\r\n      });\r\n    });\r\n  }\r\n\r\n  ngOnChanges(changes: SimpleChanges & SmartChanges<this>): void {\r\n    if (changes.registration?.currentValue) {\r\n      this.commonRegistrationService.isEmpty(changes.registration.currentValue).then((empty) => {\r\n        this.isEmpty = empty;\r\n        this.cdr.detectChanges();\r\n      });\r\n    }\r\n  }\r\n\r\n  ngOnDestroy(): void {\r\n    this.ngDestroy$.next();\r\n    this.ngDestroy$.complete();\r\n  }\r\n\r\n  async send(): Promise<void> {\r\n    if (!this.isSending) {\r\n      this.isSending = true;\r\n      this.cdr.detectChanges();\r\n        try {\r\n          const userSettings = await this.userSettingService.userSetting$\r\n            .pipe(take(1))\r\n            .toPromise();\r\n          await this.registrationService.sendRegistration(\r\n            userSettings.appMode,\r\n            this.registration\r\n          );\r\n        } finally {\r\n            this.isSending = false;\r\n            this.cdr.detectChanges();\r\n        }\r\n    }\r\n  }\r\n\r\n  async delete(): Promise<void> {\r\n\r\n    const translations = await this.translateService\r\n      .get([\r\n        'REGISTRATION.DELETE',\r\n        'REGISTRATION.DELETE_CONFIRM',\r\n        'ALERT.OK',\r\n        'ALERT.CANCEL'\r\n      ])\r\n      .toPromise();\r\n    const alert = await this.alertController.create({\r\n      header: translations['REGISTRATION.DELETE'],\r\n      message: translations['REGISTRATION.DELETE_CONFIRM'],\r\n      buttons: [\r\n        {\r\n          text: translations['ALERT.CANCEL'],\r\n          role: 'cancel',\r\n          cssClass: 'secondary'\r\n        },\r\n        {\r\n          text: translations['ALERT.OK'],\r\n          handler: () => {\r\n            this.commonRegistrationService.deleteRegistrationFromOfflineStorage(\r\n              this.registration.id\r\n            ).subscribe(() => {\r\n              this.navController.navigateRoot('');\r\n            });\r\n          }\r\n        }\r\n      ]\r\n    });\r\n    await alert.present();\r\n  }\r\n}\r\n","<ion-item class=\"summary-item\" (click)=\"navigate()\" [detail]=\"!readonly\" *ngIf=\"!(readonly && !item.hasData)\">\r\n  <ion-label class=\"ion-padding-vertical ion-padding-end\">\r\n    <h2>{{ item.title | translate}}</h2>\r\n    <p *ngIf=\"item.subTitle\">\r\n      {{ item.subTitle | translate }}\r\n    </p>\r\n    <p class=\"images\" *ngIf=\"attachments\">\r\n      <ro-blob-image  *ngFor=\"let attachment of attachments\" [imgBlob]=\"attachment.blob\"></ro-blob-image>\r\n    </p>\r\n  </ion-label>\r\n  <ion-icon *ngIf=\"item.hasData && !readonly\" slot=\"end\" color=\"success\" name=\"checkmark-circle\"></ion-icon>\r\n</ion-item>","import { Component, OnChanges, Input, ChangeDetectorRef, ChangeDetectionStrategy } from '@angular/core';\r\nimport { ISummaryItem } from './summary-item.model';\r\nimport { NavController } from '@ionic/angular';\r\nimport { NgDestoryBase } from 'src/app/core/helpers/observable-helper';\r\nimport { forkJoin, map, of, switchMap, take, takeUntil, catchError } from 'rxjs';\r\nimport { AttachmentUploadEditModel } from 'src/app/modules/common-registration/registration.models';\r\nimport { NewAttachmentService } from 'src/app/modules/common-registration/registration.services';\r\nimport { AttachmentUploadEditModelWithBlob } from '../add-picture-item/add-picture-item.component';\r\nimport { LoggingService } from 'src/app/modules/shared/services/logging/logging.service';\r\n\r\nconst DEBUG_TAG = 'SummaryItemComponent';\r\n@Component({\r\n  selector: 'app-summary-item',\r\n  templateUrl: './summary-item.component.html',\r\n  styleUrls: ['./summary-item.component.scss'],\r\n  changeDetection: ChangeDetectionStrategy.OnPush\r\n})\r\nexport class SummaryItemComponent extends NgDestoryBase implements OnChanges {\r\n  @Input() item: ISummaryItem;\r\n  @Input() readonly = false;\r\n\r\n  attachments: AttachmentUploadEditModelWithBlob[];\r\n\r\n  constructor(private navController: NavController, private newAttachmentService: NewAttachmentService, private cdr: ChangeDetectorRef, private logger: LoggingService) {\r\n    super();\r\n  }\r\n\r\n  ngOnChanges() {\r\n    if (this.item?.attachments != null) {\r\n      of(this.item.attachments)\r\n        .pipe(\r\n          map((attachments) => attachments.filter((a) => a.type === 'new').map((a) => a.attachment as AttachmentUploadEditModel)),\r\n          switchMap((attachments) =>\r\n            attachments.length === 0\r\n              ? of([])\r\n              : forkJoin([\r\n                  ...attachments.map((a) =>\r\n                    this.newAttachmentService.getBlob(this.item.id, a.id).pipe(\r\n                      take(1),\r\n                      map((blob) => ({ ...a, blob })),\r\n                      catchError((err) => {\r\n                        this.logger.error(err, DEBUG_TAG, 'Could not get blob from attachment');\r\n                        return of({ ...a, blob: undefined });\r\n                      })\r\n                    )\r\n                  )\r\n                ])\r\n          ),\r\n          takeUntil(this.ngDestroy$)\r\n        )\r\n        .subscribe((result) => {\r\n          this.attachments = result;\r\n          this.cdr.detectChanges();\r\n        });\r\n    }\r\n  }\r\n\r\n  navigate() {\r\n    if (!this.readonly) {\r\n      this.navController.navigateForward([this.item.href, this.item.id], {\r\n        queryParams: this.item.queryParams\r\n      });\r\n    }\r\n  }\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\nimport { OverviewPage } from './overview.page';\r\nimport { SendButtonComponent } from '../../components/send-button/send-button.component';\r\nimport { SummaryItemComponent } from '../../components/summary-item/summary-item.component';\r\nimport { SharedComponentsModule } from '../../shared-components.module';\r\nimport { FailedRegistrationComponent } from '../../components/failed-registration/failed-registration.component';\r\nimport { SaveAsDraftRouteGuard } from '../save-as-draft.guard';\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: '',\r\n    component: OverviewPage,\r\n    canDeactivate: [SaveAsDraftRouteGuard]\r\n  }\r\n];\r\n\r\n@NgModule({\r\n  imports: [SharedComponentsModule, RouterModule.forChild(routes)],\r\n  declarations: [\r\n    OverviewPage,\r\n    SendButtonComponent,\r\n    SummaryItemComponent,\r\n    FailedRegistrationComponent\r\n  ]\r\n})\r\nexport class OverviewPageModule {}\r\n","<ion-header>\r\n  <ion-toolbar appHeaderColor mode=\"ios\">\r\n    <ion-buttons slot=\"start\">\r\n      <ion-back-button text=\"\" defaultHref=\"/\"></ion-back-button>\r\n    </ion-buttons>\r\n    <ion-title>\r\n      {{\"REGISTRATION.OVERVIEW.TITLE\" | translate}}\r\n    </ion-title>\r\n  </ion-toolbar>\r\n</ion-header>\r\n<ng-container *ngIf=\"registration\">\r\n  <ion-content>\r\n    <app-failed-registration *ngIf=\"registration.syncError && registration.syncStatus === RegistrationStatus.Sync\"\r\n      [registration]=\"registration\"></app-failed-registration>\r\n    <ion-list lines=\"full\">\r\n      <ion-list-header class=\"ion-text-uppercase\">\r\n        <ion-label>\r\n          {{\"REGISTRATION.OVERVIEW.MY_OBSERVATION\" | translate}}\r\n        </ion-label>\r\n      </ion-list-header>\r\n      <app-summary-item [readonly]=\"registration.syncStatus === RegistrationStatus.Sync\"\r\n        *ngFor=\"let item of summaryItems; trackBy: trackByFunction\" [item]=\"item\"></app-summary-item>\r\n    </ion-list>\r\n  </ion-content>\r\n  <app-send-button [registration]=\"registration\"></app-send-button>\r\n</ng-container>","import { Component, OnInit, ChangeDetectorRef, ChangeDetectionStrategy } from '@angular/core';\r\nimport {\r\n  NewAttachmentService,\r\n  RegistrationService as CommonRegistrationService\r\n} from 'src/app/modules/common-registration/registration.services';\r\nimport { combineLatest, from, Observable } from 'rxjs';\r\nimport { IRegistration, RegistrationTid, SyncStatus } from 'src/app/modules/common-registration/registration.models';\r\nimport { UserGroupService } from '../../../../core/services/user-group/user-group.service';\r\nimport { GeoHazard } from '@varsom-regobs-common/core';\r\nimport { ISummaryItem } from '../../components/summary-item/summary-item.model';\r\nimport { ActivatedRoute } from '@angular/router';\r\nimport { SummaryItemService } from '../../services/summary-item.service';\r\nimport { distinctUntilChanged, switchMap, takeUntil } from 'rxjs/operators';\r\nimport { NgDestoryBase } from 'src/app/core/helpers/observable-helper';\r\nimport deepEqual from 'fast-deep-equal';\r\n\r\n@Component({\r\n  selector: 'app-overview',\r\n  templateUrl: './overview.page.html',\r\n  styleUrls: ['./overview.page.scss'],\r\n  changeDetection: ChangeDetectionStrategy.OnPush\r\n})\r\nexport class OverviewPage extends NgDestoryBase implements OnInit {\r\n  registration: IRegistration;\r\n  RegistationTid = RegistrationTid;\r\n  GeoHazard = GeoHazard;\r\n  RegistrationStatus = SyncStatus;\r\n  summaryItems: Array<ISummaryItem> = [];\r\n  private registration$: Observable<IRegistration>;\r\n  constructor(\r\n    private commonRegistrationService: CommonRegistrationService,\r\n    private cdr: ChangeDetectorRef,\r\n    private activatedRoute: ActivatedRoute,\r\n    private summaryItemService: SummaryItemService,\r\n    private userGroupService: UserGroupService,\r\n    private newAttachmentService: NewAttachmentService\r\n  ) {\r\n    super();\r\n  }\r\n\r\n  ngOnInit() {\r\n    const id = this.activatedRoute.snapshot.params['id'];\r\n    this.registration$ = this.commonRegistrationService.getRegistrationByIdShared$(id);\r\n    this.registration$.pipe(takeUntil(this.ngDestroy$)).subscribe((registration) => {\r\n      this.registration = registration;\r\n      this.cdr.detectChanges();\r\n    });\r\n    this.initSummaryItemSubscription();\r\n    this.userGroupService.updateUserGroups();\r\n  }\r\n\r\n  private initSummaryItemSubscription() {\r\n    this.registration$\r\n      .pipe(\r\n        switchMap((reg) =>\r\n          combineLatest([this.userGroupService.getUserGroupsAsObservable(), this.newAttachmentService.getAttachments(reg.id)]).pipe(\r\n            switchMap(([userGroups]) => from(this.summaryItemService.getSummaryItems(reg, userGroups)))\r\n          )\r\n        ),\r\n        distinctUntilChanged((a, b) => deepEqual(a, b)),\r\n        takeUntil(this.ngDestroy$)\r\n      )\r\n      .subscribe((summaryItems) => {\r\n        this.summaryItems = summaryItems;\r\n        this.cdr.detectChanges();\r\n      });\r\n  }\r\n\r\n  trackByFunction(index: number, item: ISummaryItem) {\r\n    if (!item) {\r\n      return null;\r\n    }\r\n    return item.href;\r\n  }\r\n}\r\n"]}