{"version":3,"file":"src_app_modules_registration_pages_overview_overview_module_ts-es2015.js","mappings":"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","sources":["./src/app/modules/registration/components/failed-registration/failed-registration.component.ts","./src/app/modules/registration/components/failed-registration/failed-registration.component.html","./src/app/modules/registration/components/send-button/send-button.component.ts","./src/app/modules/registration/components/send-button/send-button.component.html","./src/app/modules/registration/components/summary-item/summary-item.component.ts","./src/app/modules/registration/components/summary-item/summary-item.component.html","./src/app/modules/registration/pages/overview/overview.module.ts","./src/app/modules/registration/pages/overview/overview.page.ts","./src/app/modules/registration/pages/overview/overview.page.html"],"sourcesContent":["import {\r\n  Component,\r\n  OnInit,\r\n  Input,\r\n  Output,\r\n  EventEmitter,\r\n  NgZone\r\n} from '@angular/core';\r\nimport { IRegistration, SyncStatus } from 'src/app/modules/common-registration/registration.models';\r\nimport { RegistrationService } from '../../services/registration.service';\r\nimport {\r\n  EmailComposer,\r\n  EmailComposerOptions\r\n} from '@ionic-native/email-composer/ngx';\r\nimport { TranslateService } from '@ngx-translate/core';\r\nimport { settings } from '../../../../../settings';\r\nconst stringify = require('json-stringify-safe');\r\n\r\n@Component({\r\n  selector: 'app-failed-registration',\r\n  templateUrl: './failed-registration.component.html',\r\n  styleUrls: ['./failed-registration.component.scss']\r\n})\r\nexport class FailedRegistrationComponent implements OnInit {\r\n  @Input() registration: IRegistration;\r\n  @Output() registrationChange = new EventEmitter();\r\n\r\n  constructor(\r\n    private registrationService: RegistrationService,\r\n    private emailComposer: EmailComposer,\r\n    private translateService: TranslateService,\r\n    private ngZone: NgZone,\r\n  ) {}\r\n\r\n  ngOnInit() {}\r\n\r\n  async openForEdit() {\r\n    this.registration.syncStatus = SyncStatus.Draft;\r\n    await this.registrationService.saveRegistrationAsync(this.registration);\r\n    this.ngZone.run(() => {\r\n      this.registrationChange.emit(this.registration);\r\n    });\r\n  }\r\n\r\n  async sendEmail() {\r\n    const translations = await this.translateService\r\n      .get(['REGISTRATION.EMAIL.SUBJECT', 'REGISTRATION.EMAIL.BODY'])\r\n      .toPromise();\r\n    // const pictures = this.registrationService\r\n    //   .getAllPictures(this.registration.request)\r\n    //   .filter(\r\n    //     (p) => p.PictureImageBase64 && !p.PictureImageBase64.startsWith('data')\r\n    //   )\r\n    //   .map((p) => p.PictureImageBase64);\r\n    const base64string = btoa(stringify(this.registration));\r\n    const attachments = ['base64:registration.json//' + base64string];\r\n    // const attachments = ['base64:registration.json//' + base64string].concat(\r\n    //   pictures\r\n    // );\r\n    const email: EmailComposerOptions = {\r\n      to: settings.errorEmailAddress,\r\n      attachments,\r\n      subject: translations['REGISTRATION.EMAIL.SUBJECT'],\r\n      body: translations['REGISTRATION.EMAIL.BODY'],\r\n      isHtml: true\r\n    };\r\n    this.emailComposer.open(email);\r\n  }\r\n\r\n  // private async getEmailAddress() {\r\n  //   const userSetting = await this.userSettingService.getUserSettings();\r\n  //   switch (userSetting.currentGeoHazard) {\r\n  //     case GeoHazard.Snow:\r\n  //       return 'snoskredvarsling@nve.no';\r\n  //     case GeoHazard.Ice:\r\n  //       return 'isvarsling@nve.no';\r\n  //     case GeoHazard.Water:\r\n  //       return 'flomvarsling@nve.no';\r\n  //     case GeoHazard.Dirt:\r\n  //       return 'jordskredvarsling@nve.no';\r\n  //   }\r\n  // }\r\n}\r\n","<ion-list lines=\"full\">\r\n  <ion-list-header class=\"ion-text-uppercase\">\r\n    <ion-label>\r\n      {{'REGISTRATION.FAILED.TITLE' | translate}}\r\n    </ion-label>\r\n  </ion-list-header>\r\n  <ion-item>\r\n    <ion-label class=\"ion-text-wrap\" *ngIf=\"registration.syncStatusCode === 0\">\r\n      {{'REGISTRATION.FAILED.SUBTITLE' | translate}}\r\n    </ion-label>\r\n    <ion-label class=\"ion-text-wrap\" *ngIf=\"registration.syncStatusCode === 400\">\r\n      {{'REGISTRATION.FAILED.PROBLEM' | translate}}: {{ registration.syncError }}\r\n    </ion-label>\r\n    <ion-label class=\"ion-text-wrap\" *ngIf=\"registration.syncStatusCode > 400\">\r\n      {{'REGISTRATION.FAILED.PROBLEM' | translate}}. {{'REGISTRATION.FAILED.LOGGED' | translate}}\r\n      <!-- Ta skjermbilde og\r\n      <app-external-link src=\"http://www.regobs.no/Home/About\">kontakt oss</app-external-link>\r\n      , så hjelper du oss med å finne en løsning.  -->\r\n      {{'REGISTRATION.FAILED.PROBLEM_HELP_TEXT' | translate}}\r\n    </ion-label>\r\n  </ion-item>\r\n  <ion-item *ngIf=\"registration.syncStatusCode >= 400\">\r\n    <ion-label class=\"ion-text-wrap\">\r\n      {{'REGISTRATION.FAILED.REFERENCE' | translate}} ID: {{ registration.id }}\r\n    </ion-label>\r\n  </ion-item>\r\n  <ion-item (click)=\"sendEmail()\">\r\n    <ion-icon slot=\"start\" name=\"mail\"></ion-icon>\r\n    <ion-label class=\"ion-text-wrap\">\r\n      {{'REGISTRATION.FAILED.SEND_EMAIL' | translate}}\r\n    </ion-label>\r\n  </ion-item>\r\n  <ion-item (click)=\"openForEdit()\">\r\n    <ion-icon slot=\"start\" name=\"create\"></ion-icon>\r\n    <ion-label class=\"ion-text-wrap\">\r\n      {{'REGISTRATION.FAILED.EDIT_OBSERVATION' | translate}}\r\n    </ion-label>\r\n  </ion-item>\r\n</ion-list>","import { Component, OnInit, Input, NgZone, OnDestroy, ChangeDetectionStrategy, ChangeDetectorRef, OnChanges, SimpleChanges } from '@angular/core';\r\nimport { RegistrationService } from '../../services/registration.service';\r\nimport { AlertController, NavController } from '@ionic/angular';\r\nimport { TranslateService } from '@ngx-translate/core';\r\nimport { IRegistration } from 'src/app/modules/common-registration/registration.models';\r\nimport { UserSettingService } from '../../../../core/services/user-setting/user-setting.service';\r\nimport { take, takeUntil } from 'rxjs/operators';\r\nimport { RegobsAuthService } from '../../../auth/services/regobs-auth.service';\r\nimport { Subject } from 'rxjs';\r\nimport { RegistrationService as CommonRegistrationService } from 'src/app/modules/common-registration/registration.services';\r\nimport { SmartChanges } from 'src/app/core/helpers/simple-changes.helper';\r\n\r\n@Component({\r\n  selector: 'app-send-button',\r\n  templateUrl: './send-button.component.html',\r\n  styleUrls: ['./send-button.component.scss'],\r\n  changeDetection: ChangeDetectionStrategy.OnPush\r\n})\r\nexport class SendButtonComponent implements OnInit, OnDestroy, OnChanges {\r\n  @Input() registration: IRegistration;\r\n\r\n  // get isEmpty(): boolean {\r\n  //   return this.registrationService.isRegistrationEmpty(this.registration);\r\n  // }\r\n  isEmpty: boolean;\r\n\r\n  get isDisabled(): boolean {\r\n    // TODO: Hvorfor disabled hvis man holder på å logge inn?\r\n    return this.isEmpty || this.isSending || this.isLoggingIn;\r\n  }\r\n\r\n  isSending = false;\r\n  isLoggingIn = false;\r\n\r\n  private ngDestroy$ = new Subject<void>();\r\n\r\n  constructor(\r\n    private registrationService: RegistrationService,\r\n    private alertController: AlertController,\r\n    private userSettingService: UserSettingService,\r\n    private translateService: TranslateService,\r\n    private navController: NavController,\r\n    private regobsAuthService: RegobsAuthService,\r\n    private commonRegistrationService: CommonRegistrationService,\r\n    private cdr: ChangeDetectorRef,\r\n    private ngZone: NgZone,\r\n  ) {}\r\n\r\n  ngOnInit(): void {\r\n    this.isSending = false;\r\n    this.isLoggingIn = false;\r\n    this.regobsAuthService.isLoggingIn$\r\n      .pipe(takeUntil(this.ngDestroy$))\r\n      .subscribe((val) => {\r\n        this.ngZone.run(() => {\r\n          this.isLoggingIn = val;\r\n          this.cdr.detectChanges();\r\n      });\r\n    });\r\n  }\r\n\r\n  ngOnChanges(changes: SimpleChanges & SmartChanges<this>): void {\r\n    if (changes.registration?.currentValue) {\r\n      this.commonRegistrationService.isEmpty(changes.registration.currentValue).then((empty) => {\r\n        this.isEmpty = empty;\r\n        this.cdr.detectChanges();\r\n      });\r\n    }\r\n  }\r\n\r\n  ngOnDestroy(): void {\r\n    this.ngDestroy$.next();\r\n    this.ngDestroy$.complete();\r\n  }\r\n\r\n  async send(): Promise<void> {\r\n    if (!this.isSending) {\r\n      this.isSending = true;\r\n      this.cdr.detectChanges();\r\n        try {\r\n          const userSettings = await this.userSettingService.userSetting$\r\n            .pipe(take(1))\r\n            .toPromise();\r\n          await this.registrationService.sendRegistration(\r\n            userSettings.appMode,\r\n            this.registration\r\n          );\r\n        } finally {\r\n            this.isSending = false;\r\n            this.cdr.detectChanges();\r\n        }\r\n    }\r\n  }\r\n\r\n  async delete(): Promise<void> {\r\n\r\n    const translations = await this.translateService\r\n      .get([\r\n        'REGISTRATION.DELETE',\r\n        'REGISTRATION.DELETE_CONFIRM',\r\n        'ALERT.OK',\r\n        'ALERT.CANCEL'\r\n      ])\r\n      .toPromise();\r\n    const alert = await this.alertController.create({\r\n      header: translations['REGISTRATION.DELETE'],\r\n      message: translations['REGISTRATION.DELETE_CONFIRM'],\r\n      buttons: [\r\n        {\r\n          text: translations['ALERT.CANCEL'],\r\n          role: 'cancel',\r\n          cssClass: 'secondary'\r\n        },\r\n        {\r\n          text: translations['ALERT.OK'],\r\n          handler: () => {\r\n            this.commonRegistrationService.deleteRegistrationFromOfflineStorage(\r\n              this.registration.id\r\n            ).subscribe(() => {\r\n              this.navController.navigateRoot('');\r\n            });\r\n          }\r\n        }\r\n      ]\r\n    });\r\n    await alert.present();\r\n  }\r\n}\r\n","<ion-footer *ngIf=\"registration\">\r\n  <ion-toolbar>\r\n    <ion-grid class=\"ion-no-padding\">\r\n      <ion-row>\r\n        <ion-col class=\"send-button-col\" size=\"12\">\r\n          <ion-button [disabled]=\"isDisabled\" expand=\"block\" color=\"varsom-orange\" (click)=\"send()\">\r\n            <ion-icon slot=\"start\" name=\"send\"></ion-icon>\r\n            <span *ngIf=\"registration.syncError\">{{\"REGISTRATION.RESEND\" | translate}}</span>\r\n            <span *ngIf=\"!registration.syncError\">{{\"REGISTRATION.SEND\" | translate}}</span>\r\n          </ion-button>\r\n        </ion-col>\r\n      </ion-row>\r\n      <ion-row class=\"ion-no-padding\">\r\n        <ion-col class=\"delete-button-col ion-no-padding ion-text-center\">\r\n          <ion-button (click)=\"delete()\" color=\"dark\" size=\"small\" fill=\"clear\">\r\n            <!-- <ion-icon slot=\"start\" name=\"trash\"></ion-icon> -->\r\n            <svg-icon slot=\"start\" src=\"/assets/icon/delete.svg\"></svg-icon>\r\n            {{\"REGISTRATION.DELETE\" | translate}}\r\n          </ion-button>\r\n        </ion-col>\r\n      </ion-row>\r\n    </ion-grid>\r\n  </ion-toolbar>\r\n</ion-footer>","import { Component, OnChanges, Input, ChangeDetectorRef, ChangeDetectionStrategy } from '@angular/core';\r\nimport { ISummaryItem } from './summary-item.model';\r\nimport { NavController } from '@ionic/angular';\r\nimport { NgDestoryBase } from 'src/app/core/helpers/observable-helper';\r\nimport { forkJoin, map, of, switchMap, take, takeUntil, catchError } from 'rxjs';\r\nimport { AttachmentUploadEditModel } from 'src/app/modules/common-registration/registration.models';\r\nimport { NewAttachmentService } from 'src/app/modules/common-registration/registration.services';\r\nimport { AttachmentUploadEditModelWithBlob } from '../add-picture-item/add-picture-item.component';\r\nimport { LoggingService } from 'src/app/modules/shared/services/logging/logging.service';\r\n\r\nconst DEBUG_TAG = 'SummaryItemComponent';\r\n@Component({\r\n  selector: 'app-summary-item',\r\n  templateUrl: './summary-item.component.html',\r\n  styleUrls: ['./summary-item.component.scss'],\r\n  changeDetection: ChangeDetectionStrategy.OnPush\r\n})\r\nexport class SummaryItemComponent extends NgDestoryBase implements OnChanges {\r\n  @Input() item: ISummaryItem;\r\n  @Input() readonly = false;\r\n\r\n  attachments: AttachmentUploadEditModelWithBlob[];\r\n\r\n  constructor(private navController: NavController, private newAttachmentService: NewAttachmentService, private cdr: ChangeDetectorRef, private logger: LoggingService) {\r\n    super();\r\n  }\r\n\r\n  ngOnChanges() {\r\n    if (this.item?.attachments != null) {\r\n      of(this.item.attachments)\r\n        .pipe(\r\n          map((attachments) => attachments.filter((a) => a.type === 'new').map((a) => a.attachment as AttachmentUploadEditModel)),\r\n          switchMap((attachments) =>\r\n            attachments.length === 0\r\n              ? of([])\r\n              : forkJoin([\r\n                  ...attachments.map((a) =>\r\n                    this.newAttachmentService.getBlob(this.item.id, a.id).pipe(\r\n                      take(1),\r\n                      map((blob) => ({ ...a, blob })),\r\n                      catchError((err) => {\r\n                        this.logger.error(err, DEBUG_TAG, 'Could not get blob from attachment');\r\n                        return of({ ...a, blob: undefined });\r\n                      })\r\n                    )\r\n                  )\r\n                ])\r\n          ),\r\n          takeUntil(this.ngDestroy$)\r\n        )\r\n        .subscribe((result) => {\r\n          this.attachments = result;\r\n          this.cdr.detectChanges();\r\n        });\r\n    }\r\n  }\r\n\r\n  navigate() {\r\n    if (!this.readonly) {\r\n      this.navController.navigateForward([this.item.href, this.item.id], {\r\n        queryParams: this.item.queryParams\r\n      });\r\n    }\r\n  }\r\n}\r\n","<ion-item class=\"summary-item\" (click)=\"navigate()\" [detail]=\"!readonly\" *ngIf=\"!(readonly && !item.hasData)\">\r\n  <ion-label class=\"ion-padding-vertical ion-padding-end\">\r\n    <h2>{{ item.title | translate}}</h2>\r\n    <p *ngIf=\"item.subTitle\">\r\n      {{ item.subTitle | translate }}\r\n    </p>\r\n    <p class=\"images\" *ngIf=\"attachments\">\r\n      <ro-blob-image  *ngFor=\"let attachment of attachments\" [imgBlob]=\"attachment.blob\"></ro-blob-image>\r\n    </p>\r\n  </ion-label>\r\n  <ion-icon *ngIf=\"item.hasData && !readonly\" slot=\"end\" color=\"success\" name=\"checkmark-circle\"></ion-icon>\r\n</ion-item>","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\nimport { OverviewPage } from './overview.page';\r\nimport { SendButtonComponent } from '../../components/send-button/send-button.component';\r\nimport { SummaryItemComponent } from '../../components/summary-item/summary-item.component';\r\nimport { SharedComponentsModule } from '../../shared-components.module';\r\nimport { FailedRegistrationComponent } from '../../components/failed-registration/failed-registration.component';\r\nimport { SaveAsDraftRouteGuard } from '../save-as-draft.guard';\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: '',\r\n    component: OverviewPage,\r\n    canDeactivate: [SaveAsDraftRouteGuard]\r\n  }\r\n];\r\n\r\n@NgModule({\r\n  imports: [SharedComponentsModule, RouterModule.forChild(routes)],\r\n  declarations: [\r\n    OverviewPage,\r\n    SendButtonComponent,\r\n    SummaryItemComponent,\r\n    FailedRegistrationComponent\r\n  ]\r\n})\r\nexport class OverviewPageModule {}\r\n","import { Component, OnInit, ChangeDetectorRef, ChangeDetectionStrategy } from '@angular/core';\r\nimport {\r\n  NewAttachmentService,\r\n  RegistrationService as CommonRegistrationService\r\n} from 'src/app/modules/common-registration/registration.services';\r\nimport { combineLatest, from, Observable } from 'rxjs';\r\nimport { IRegistration, RegistrationTid, SyncStatus } from 'src/app/modules/common-registration/registration.models';\r\nimport { UserGroupService } from '../../../../core/services/user-group/user-group.service';\r\nimport { GeoHazard } from '@varsom-regobs-common/core';\r\nimport { ISummaryItem } from '../../components/summary-item/summary-item.model';\r\nimport { ActivatedRoute } from '@angular/router';\r\nimport { SummaryItemService } from '../../services/summary-item.service';\r\nimport { distinctUntilChanged, switchMap, takeUntil } from 'rxjs/operators';\r\nimport { NgDestoryBase } from 'src/app/core/helpers/observable-helper';\r\nimport deepEqual from 'fast-deep-equal';\r\n\r\n@Component({\r\n  selector: 'app-overview',\r\n  templateUrl: './overview.page.html',\r\n  styleUrls: ['./overview.page.scss'],\r\n  changeDetection: ChangeDetectionStrategy.OnPush\r\n})\r\nexport class OverviewPage extends NgDestoryBase implements OnInit {\r\n  registration: IRegistration;\r\n  RegistationTid = RegistrationTid;\r\n  GeoHazard = GeoHazard;\r\n  RegistrationStatus = SyncStatus;\r\n  summaryItems: Array<ISummaryItem> = [];\r\n  private registration$: Observable<IRegistration>;\r\n  constructor(\r\n    private commonRegistrationService: CommonRegistrationService,\r\n    private cdr: ChangeDetectorRef,\r\n    private activatedRoute: ActivatedRoute,\r\n    private summaryItemService: SummaryItemService,\r\n    private userGroupService: UserGroupService,\r\n    private newAttachmentService: NewAttachmentService\r\n  ) {\r\n    super();\r\n  }\r\n\r\n  ngOnInit() {\r\n    const id = this.activatedRoute.snapshot.params['id'];\r\n    this.registration$ = this.commonRegistrationService.getRegistrationByIdShared$(id);\r\n    this.registration$.pipe(takeUntil(this.ngDestroy$)).subscribe((registration) => {\r\n      this.registration = registration;\r\n      this.cdr.detectChanges();\r\n    });\r\n    this.initSummaryItemSubscription();\r\n    this.userGroupService.updateUserGroups();\r\n  }\r\n\r\n  private initSummaryItemSubscription() {\r\n    this.registration$\r\n      .pipe(\r\n        switchMap((reg) =>\r\n          combineLatest([this.userGroupService.getUserGroupsAsObservable(), this.newAttachmentService.getAttachments(reg.id)]).pipe(\r\n            switchMap(([userGroups]) => from(this.summaryItemService.getSummaryItems(reg, userGroups)))\r\n          )\r\n        ),\r\n        distinctUntilChanged((a, b) => deepEqual(a, b)),\r\n        takeUntil(this.ngDestroy$)\r\n      )\r\n      .subscribe((summaryItems) => {\r\n        this.summaryItems = summaryItems;\r\n        this.cdr.detectChanges();\r\n      });\r\n  }\r\n\r\n  trackByFunction(index: number, item: ISummaryItem) {\r\n    if (!item) {\r\n      return null;\r\n    }\r\n    return item.href;\r\n  }\r\n}\r\n","<ion-header>\r\n  <ion-toolbar appHeaderColor mode=\"ios\">\r\n    <ion-buttons slot=\"start\">\r\n      <ion-back-button text=\"\" defaultHref=\"/\"></ion-back-button>\r\n    </ion-buttons>\r\n    <ion-title>\r\n      {{\"REGISTRATION.OVERVIEW.TITLE\" | translate}}\r\n    </ion-title>\r\n  </ion-toolbar>\r\n</ion-header>\r\n<ng-container *ngIf=\"registration\">\r\n  <ion-content>\r\n    <app-failed-registration *ngIf=\"registration.syncError && registration.syncStatus === RegistrationStatus.Sync\"\r\n      [registration]=\"registration\"></app-failed-registration>\r\n    <ion-list lines=\"full\">\r\n      <ion-list-header class=\"ion-text-uppercase\">\r\n        <ion-label>\r\n          {{\"REGISTRATION.OVERVIEW.MY_OBSERVATION\" | translate}}\r\n        </ion-label>\r\n      </ion-list-header>\r\n      <app-summary-item [readonly]=\"registration.syncStatus === RegistrationStatus.Sync\"\r\n        *ngFor=\"let item of summaryItems; trackBy: trackByFunction\" [item]=\"item\"></app-summary-item>\r\n    </ion-list>\r\n  </ion-content>\r\n  <app-send-button [registration]=\"registration\"></app-send-button>\r\n</ng-container>"],"names":[],"sourceRoot":"webpack:///"}