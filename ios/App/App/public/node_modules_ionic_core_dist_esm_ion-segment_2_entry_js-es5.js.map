{"version":3,"mappings":"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","names":["segmentIosCss","segmentMdCss","Segment","constructor","hostRef","registerInstance","ionChange","createEvent","ionSelect","ionStyle","didInit","activated","disabled","scrollable","swipeGesture","onClick","ev","current","target","previous","checked","tagName","value","checkButton","setCheckedClasses","colorChanged","oldValue","undefined","emitStyle","swipeGestureChanged","gestureChanged","valueChanged","emit","valueAfterGesture","disabledChanged","buttons","getButtons","button","gesture","enable","connectedCallback","componentWillLoad","componentDidLoad","_this","Promise","createGesture","el","gestureName","gesturePriority","threshold","passive","onStart","onMove","onEnd","detail","activate","setNextIndex","setActivated","checkedValidButton","event","stopImmediatePropagation","addRipple","Array","from","querySelectorAll","useRippleEffect","config","find","root","shadowRoot","ripple","querySelector","pointerCoord","x","y","then","remove","forEach","classList","add","clicked","getIndicator","previousIndicator","currentIndicator","previousClientRect","getBoundingClientRect","currentClientRect","widthDelta","width","xPosition","left","transform","writeTask","style","setProperty","index","findIndex","next","length","isEnd","isRTL","document","dir","nextIndex","rect","currentX","previousY","top","height","nextEl","elementFromPoint","decreaseIndex","increaseIndex","newIndex","render","mode","getIonMode","h","Host","role","class","createColorClasses","color","hostContext","getElement","ios","md","segmentButtonIosCss","segmentButtonMdCss","ids","SegmentButton","segmentEl","layout","type","updateStyle","forceUpdate","updateState","closest","addEventListener","disconnectedCallback","removeEventListener","hasTabIndex","hasAttribute","getAttribute","hasIcon","hasLabel","tabIndex","hasSegmentColor","part"],"sources":["webpack:///node_modules/@ionic/core/dist/esm/ion-segment_2.entry.js"],"sourcesContent":["import { r as registerInstance, e as createEvent, c as writeTask, h, H as Host, i as getElement, j as forceUpdate } from './index-7a8b7a1c.js';\nimport { c as config, b as getIonMode } from './ionic-global-63a97a32.js';\nimport { p as pointerCoord, a as addEventListener, b as removeEventListener } from './helpers-dd7e4b7b.js';\nimport { c as createColorClasses, h as hostContext } from './theme-ff3fc52f.js';\n\nconst segmentIosCss = \":host{--ripple-color:currentColor;-moz-osx-font-smoothing:grayscale;-webkit-font-smoothing:antialiased;display:-ms-flexbox;display:flex;position:relative;-ms-flex-align:stretch;align-items:stretch;-ms-flex-pack:center;justify-content:center;width:100%;background:var(--background);font-family:var(--ion-font-family, inherit);text-align:center;contain:paint;-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none}:host(.segment-scrollable){-ms-flex-pack:start;justify-content:start;width:auto;overflow-x:auto}:host(.segment-scrollable::-webkit-scrollbar){display:none}:host{--background:rgba(var(--ion-text-color-rgb, 0, 0, 0), 0.065);border-radius:8px;overflow:hidden;z-index:0}:host(.ion-color){background:rgba(var(--ion-color-base-rgb), 0.065)}:host(.in-toolbar){margin-left:auto;margin-right:auto;margin-top:0;margin-bottom:0;width:auto}@supports ((-webkit-margin-start: 0) or (margin-inline-start: 0)) or (-webkit-margin-start: 0){:host(.in-toolbar){margin-left:unset;margin-right:unset;-webkit-margin-start:auto;margin-inline-start:auto;-webkit-margin-end:auto;margin-inline-end:auto}}:host(.in-toolbar:not(.ion-color)){background:var(--ion-toolbar-segment-background, var(--background))}:host(.in-toolbar-color:not(.ion-color)){background:rgba(var(--ion-color-contrast-rgb), 0.11)}\";\n\nconst segmentMdCss = \":host{--ripple-color:currentColor;-moz-osx-font-smoothing:grayscale;-webkit-font-smoothing:antialiased;display:-ms-flexbox;display:flex;position:relative;-ms-flex-align:stretch;align-items:stretch;-ms-flex-pack:center;justify-content:center;width:100%;background:var(--background);font-family:var(--ion-font-family, inherit);text-align:center;contain:paint;-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none}:host(.segment-scrollable){-ms-flex-pack:start;justify-content:start;width:auto;overflow-x:auto}:host(.segment-scrollable::-webkit-scrollbar){display:none}:host{--background:transparent}:host(.segment-scrollable) ::slotted(ion-segment-button){min-width:auto}\";\n\nconst Segment = class {\n  constructor(hostRef) {\n    registerInstance(this, hostRef);\n    this.ionChange = createEvent(this, \"ionChange\", 7);\n    this.ionSelect = createEvent(this, \"ionSelect\", 7);\n    this.ionStyle = createEvent(this, \"ionStyle\", 7);\n    this.didInit = false;\n    this.activated = false;\n    /**\n     * If `true`, the user cannot interact with the segment.\n     */\n    this.disabled = false;\n    /**\n     * If `true`, the segment buttons will overflow and the user can swipe to see them.\n     * In addition, this will disable the gesture to drag the indicator between the buttons\n     * in order to swipe to see hidden buttons.\n     */\n    this.scrollable = false;\n    /**\n     * If `true`, users will be able to swipe between segment buttons to activate them.\n     */\n    this.swipeGesture = true;\n    this.onClick = (ev) => {\n      const current = ev.target;\n      const previous = this.checked;\n      // If the current element is a segment then that means\n      // the user tried to swipe to a segment button and\n      // click a segment button at the same time so we should\n      // not update the checked segment button\n      if (current.tagName === 'ION-SEGMENT') {\n        return;\n      }\n      this.value = current.value;\n      if (this.scrollable || !this.swipeGesture) {\n        if (previous) {\n          this.checkButton(previous, current);\n        }\n        else {\n          this.setCheckedClasses();\n        }\n      }\n      this.checked = current;\n    };\n  }\n  colorChanged(value, oldValue) {\n    /**\n     * If color is set after not having\n     * previously been set (or vice versa),\n     * we need to emit style so the segment-buttons\n     * can apply their color classes properly.\n     */\n    if ((oldValue === undefined && value !== undefined) ||\n      (oldValue !== undefined && value === undefined)) {\n      this.emitStyle();\n    }\n  }\n  swipeGestureChanged() {\n    this.gestureChanged();\n  }\n  valueChanged(value, oldValue) {\n    this.ionSelect.emit({ value });\n    if (oldValue !== '' || this.didInit) {\n      if (!this.activated) {\n        this.ionChange.emit({ value });\n      }\n      else {\n        this.valueAfterGesture = value;\n      }\n    }\n  }\n  disabledChanged() {\n    this.gestureChanged();\n    const buttons = this.getButtons();\n    for (const button of buttons) {\n      button.disabled = this.disabled;\n    }\n  }\n  gestureChanged() {\n    if (this.gesture) {\n      this.gesture.enable(!this.scrollable && !this.disabled && this.swipeGesture);\n    }\n  }\n  connectedCallback() {\n    this.emitStyle();\n  }\n  componentWillLoad() {\n    this.emitStyle();\n  }\n  async componentDidLoad() {\n    this.setCheckedClasses();\n    this.gesture = (await import('./index-34cb2743.js')).createGesture({\n      el: this.el,\n      gestureName: 'segment',\n      gesturePriority: 100,\n      threshold: 0,\n      passive: false,\n      onStart: ev => this.onStart(ev),\n      onMove: ev => this.onMove(ev),\n      onEnd: ev => this.onEnd(ev),\n    });\n    this.gestureChanged();\n    if (this.disabled) {\n      this.disabledChanged();\n    }\n    this.didInit = true;\n  }\n  onStart(detail) {\n    this.activate(detail);\n  }\n  onMove(detail) {\n    this.setNextIndex(detail);\n  }\n  onEnd(detail) {\n    this.setActivated(false);\n    const checkedValidButton = this.setNextIndex(detail, true);\n    detail.event.stopImmediatePropagation();\n    if (checkedValidButton) {\n      this.addRipple(detail);\n    }\n    const value = this.valueAfterGesture;\n    if (value !== undefined) {\n      this.ionChange.emit({ value });\n      this.valueAfterGesture = undefined;\n    }\n  }\n  getButtons() {\n    return Array.from(this.el.querySelectorAll('ion-segment-button'));\n  }\n  /**\n   * The gesture blocks the segment button ripple. This\n   * function adds the ripple based on the checked segment\n   * and where the cursor ended.\n   */\n  addRipple(detail) {\n    const useRippleEffect = config.getBoolean('animated', true) && config.getBoolean('rippleEffect', true);\n    if (!useRippleEffect) {\n      return;\n    }\n    const buttons = this.getButtons();\n    const checked = buttons.find(button => button.value === this.value);\n    const root = checked.shadowRoot || checked;\n    const ripple = root.querySelector('ion-ripple-effect');\n    if (!ripple) {\n      return;\n    }\n    const { x, y } = pointerCoord(detail.event);\n    ripple.addRipple(x, y).then(remove => remove());\n  }\n  /*\n   * Activate both the segment and the buttons\n   * due to a bug with ::slotted in Safari\n   */\n  setActivated(activated) {\n    const buttons = this.getButtons();\n    buttons.forEach(button => {\n      if (activated) {\n        button.classList.add('segment-button-activated');\n      }\n      else {\n        button.classList.remove('segment-button-activated');\n      }\n    });\n    this.activated = activated;\n  }\n  activate(detail) {\n    const clicked = detail.event.target;\n    const buttons = this.getButtons();\n    const checked = buttons.find(button => button.value === this.value);\n    // Make sure we are only checking for activation on a segment button\n    // since disabled buttons will get the click on the segment\n    if (clicked.tagName !== 'ION-SEGMENT-BUTTON') {\n      return;\n    }\n    // If there are no checked buttons, set the current button to checked\n    if (!checked) {\n      this.value = clicked.value;\n      this.setCheckedClasses();\n    }\n    // If the gesture began on the clicked button with the indicator\n    // then we should activate the indicator\n    if (this.value === clicked.value) {\n      this.setActivated(true);\n    }\n  }\n  getIndicator(button) {\n    const root = button.shadowRoot || button;\n    return root.querySelector('.segment-button-indicator');\n  }\n  checkButton(previous, current) {\n    const previousIndicator = this.getIndicator(previous);\n    const currentIndicator = this.getIndicator(current);\n    if (previousIndicator === null || currentIndicator === null) {\n      return;\n    }\n    const previousClientRect = previousIndicator.getBoundingClientRect();\n    const currentClientRect = currentIndicator.getBoundingClientRect();\n    const widthDelta = previousClientRect.width / currentClientRect.width;\n    const xPosition = previousClientRect.left - currentClientRect.left;\n    // Scale the indicator width to match the previous indicator width\n    // and translate it on top of the previous indicator\n    const transform = `translate3d(${xPosition}px, 0, 0) scaleX(${widthDelta})`;\n    writeTask(() => {\n      // Remove the transition before positioning on top of the previous indicator\n      currentIndicator.classList.remove('segment-button-indicator-animated');\n      currentIndicator.style.setProperty('transform', transform);\n      // Force a repaint to ensure the transform happens\n      currentIndicator.getBoundingClientRect();\n      // Add the transition to move the indicator into place\n      currentIndicator.classList.add('segment-button-indicator-animated');\n      // Remove the transform to slide the indicator back to the button clicked\n      currentIndicator.style.setProperty('transform', '');\n    });\n    this.value = current.value;\n    this.setCheckedClasses();\n  }\n  setCheckedClasses() {\n    const buttons = this.getButtons();\n    const index = buttons.findIndex(button => button.value === this.value);\n    const next = index + 1;\n    // Keep track of the currently checked button\n    this.checked = buttons.find(button => button.value === this.value);\n    for (const button of buttons) {\n      button.classList.remove('segment-button-after-checked');\n    }\n    if (next < buttons.length) {\n      buttons[next].classList.add('segment-button-after-checked');\n    }\n  }\n  setNextIndex(detail, isEnd = false) {\n    const isRTL = document.dir === 'rtl';\n    const activated = this.activated;\n    const buttons = this.getButtons();\n    const index = buttons.findIndex(button => button.value === this.value);\n    const previous = buttons[index];\n    let current;\n    let nextIndex;\n    if (index === -1) {\n      return;\n    }\n    // Get the element that the touch event started on in case\n    // it was the checked button, then we will move the indicator\n    const rect = previous.getBoundingClientRect();\n    const left = rect.left;\n    const width = rect.width;\n    // Get the element that the gesture is on top of based on the currentX of the\n    // gesture event and the Y coordinate of the starting element, since the gesture\n    // can move up and down off of the segment\n    const currentX = detail.currentX;\n    const previousY = rect.top + (rect.height / 2);\n    const nextEl = document.elementFromPoint(currentX, previousY);\n    const decreaseIndex = isRTL ? currentX > (left + width) : currentX < left;\n    const increaseIndex = isRTL ? currentX < left : currentX > (left + width);\n    // If the indicator is currently activated then we have started the gesture\n    // on top of the checked button so we need to slide the indicator\n    // by checking the button next to it as we move\n    if (activated && !isEnd) {\n      // Decrease index, move left in LTR & right in RTL\n      if (decreaseIndex) {\n        const newIndex = index - 1;\n        if (newIndex >= 0) {\n          nextIndex = newIndex;\n        }\n        // Increase index, moves right in LTR & left in RTL\n      }\n      else if (increaseIndex) {\n        if (activated && !isEnd) {\n          const newIndex = index + 1;\n          if (newIndex < buttons.length) {\n            nextIndex = newIndex;\n          }\n        }\n      }\n      if (nextIndex !== undefined && !buttons[nextIndex].disabled) {\n        current = buttons[nextIndex];\n      }\n    }\n    // If the indicator is not activated then we will just set the indicator\n    // to the element where the gesture ended\n    if (!activated && isEnd) {\n      current = nextEl;\n    }\n    /* tslint:disable-next-line */\n    if (current != null) {\n      /**\n       * If current element is ion-segment then that means\n       * user tried to select a disabled ion-segment-button,\n       * and we should not update the ripple.\n       */\n      if (current.tagName === 'ION-SEGMENT') {\n        return false;\n      }\n      if (previous !== current) {\n        this.checkButton(previous, current);\n      }\n    }\n    return true;\n  }\n  emitStyle() {\n    this.ionStyle.emit({\n      'segment': true\n    });\n  }\n  render() {\n    const mode = getIonMode(this);\n    return (h(Host, { role: \"tablist\", onClick: this.onClick, class: createColorClasses(this.color, {\n        [mode]: true,\n        'in-toolbar': hostContext('ion-toolbar', this.el),\n        'in-toolbar-color': hostContext('ion-toolbar[color]', this.el),\n        'segment-activated': this.activated,\n        'segment-disabled': this.disabled,\n        'segment-scrollable': this.scrollable\n      }) }, h(\"slot\", null)));\n  }\n  get el() { return getElement(this); }\n  static get watchers() { return {\n    \"color\": [\"colorChanged\"],\n    \"swipeGesture\": [\"swipeGestureChanged\"],\n    \"value\": [\"valueChanged\"],\n    \"disabled\": [\"disabledChanged\"]\n  }; }\n};\nSegment.style = {\n  ios: segmentIosCss,\n  md: segmentMdCss\n};\n\nconst segmentButtonIosCss = \":host{--color:initial;--color-hover:var(--color);--color-checked:var(--color);--color-disabled:var(--color);--padding-start:0;--padding-end:0;--padding-top:0;--padding-bottom:0;border-radius:var(--border-radius);display:-ms-flexbox;display:flex;position:relative;-ms-flex:1 1 auto;flex:1 1 auto;-ms-flex-direction:column;flex-direction:column;height:auto;background:var(--background);color:var(--color);text-decoration:none;text-overflow:ellipsis;white-space:nowrap;-webkit-font-kerning:none;font-kerning:none;cursor:pointer}.button-native{border-radius:0;font-family:inherit;font-size:inherit;font-style:inherit;font-weight:inherit;letter-spacing:inherit;text-decoration:inherit;text-indent:inherit;text-overflow:inherit;text-transform:inherit;text-align:inherit;white-space:inherit;color:inherit;margin-left:var(--margin-start);margin-right:var(--margin-end);margin-top:var(--margin-top);margin-bottom:var(--margin-bottom);padding-left:var(--padding-start);padding-right:var(--padding-end);padding-top:var(--padding-top);padding-bottom:var(--padding-bottom);-webkit-transform:translate3d(0,  0,  0);transform:translate3d(0,  0,  0);display:-ms-flexbox;display:flex;position:relative;-ms-flex-direction:inherit;flex-direction:inherit;-ms-flex-positive:1;flex-grow:1;-ms-flex-align:center;align-items:center;-ms-flex-pack:center;justify-content:center;width:100%;min-width:inherit;max-width:inherit;height:auto;min-height:inherit;max-height:inherit;-webkit-transition:var(--transition);transition:var(--transition);border:none;outline:none;background:transparent;contain:content;pointer-events:none;overflow:hidden;z-index:2}@supports ((-webkit-margin-start: 0) or (margin-inline-start: 0)) or (-webkit-margin-start: 0){.button-native{margin-left:unset;margin-right:unset;-webkit-margin-start:var(--margin-start);margin-inline-start:var(--margin-start);-webkit-margin-end:var(--margin-end);margin-inline-end:var(--margin-end)}}@supports ((-webkit-margin-start: 0) or (margin-inline-start: 0)) or (-webkit-margin-start: 0){.button-native{padding-left:unset;padding-right:unset;-webkit-padding-start:var(--padding-start);padding-inline-start:var(--padding-start);-webkit-padding-end:var(--padding-end);padding-inline-end:var(--padding-end)}}.button-native::after{left:0;right:0;top:0;bottom:0;position:absolute;content:\\\"\\\";opacity:0}.button-inner{display:-ms-flexbox;display:flex;position:relative;-ms-flex-flow:inherit;flex-flow:inherit;-ms-flex-align:center;align-items:center;-ms-flex-pack:center;justify-content:center;width:100%;height:100%;z-index:1}:host(.segment-button-checked){background:var(--background-checked);color:var(--color-checked)}:host(.segment-button-disabled){cursor:default;pointer-events:none}:host(.ion-focused) .button-native{color:var(--color-focused)}:host(.ion-focused) .button-native::after{background:var(--background-focused);opacity:var(--background-focused-opacity)}:host(:focus){outline:none}@media (any-hover: hover){:host(:hover) .button-native{color:var(--color-hover)}:host(:hover) .button-native::after{background:var(--background-hover);opacity:var(--background-hover-opacity)}:host(.segment-button-checked:hover) .button-native{color:var(--color-checked)}}::slotted(ion-icon){-ms-flex-negative:0;flex-shrink:0;-ms-flex-order:-1;order:-1;pointer-events:none}::slotted(ion-label){display:block;-ms-flex-item-align:center;align-self:center;line-height:22px;text-overflow:ellipsis;white-space:nowrap;-webkit-box-sizing:border-box;box-sizing:border-box;pointer-events:none}:host(.segment-button-layout-icon-top) .button-native{-ms-flex-direction:column;flex-direction:column}:host(.segment-button-layout-icon-start) .button-native{-ms-flex-direction:row;flex-direction:row}:host(.segment-button-layout-icon-end) .button-native{-ms-flex-direction:row-reverse;flex-direction:row-reverse}:host(.segment-button-layout-icon-bottom) .button-native{-ms-flex-direction:column-reverse;flex-direction:column-reverse}:host(.segment-button-layout-icon-hide) ::slotted(ion-icon){display:none}:host(.segment-button-layout-label-hide) ::slotted(ion-label){display:none}ion-ripple-effect{color:var(--ripple-color, var(--color-checked))}.segment-button-indicator{-webkit-transform-origin:left;transform-origin:left;position:absolute;opacity:0;-webkit-box-sizing:border-box;box-sizing:border-box;will-change:transform, opacity;pointer-events:none}.segment-button-indicator-background{width:100%;height:var(--indicator-height);-webkit-transform:var(--indicator-transform);transform:var(--indicator-transform);-webkit-box-shadow:var(--indicator-box-shadow);box-shadow:var(--indicator-box-shadow);pointer-events:none}.segment-button-indicator-animated{-webkit-transition:var(--indicator-transition);transition:var(--indicator-transition)}:host(.segment-button-checked) .segment-button-indicator{opacity:1}@media (prefers-reduced-motion: reduce){.segment-button-indicator-background{-webkit-transform:none;transform:none}.segment-button-indicator-animated{-webkit-transition:none;transition:none}}:host{--background:none;--background-checked:none;--background-hover:none;--background-hover-opacity:0;--background-focused:none;--background-focused-opacity:0;--border-radius:7px;--border-width:1px;--border-color:rgba(var(--ion-text-color-rgb, 0, 0, 0), 0.12);--border-style:solid;--indicator-box-shadow:0 0 5px rgba(0, 0, 0, 0.16);--indicator-color:var(--ion-color-step-350, var(--ion-background-color, #fff));--indicator-height:100%;--indicator-transition:transform 260ms cubic-bezier(0.4, 0, 0.2, 1);--indicator-transform:none;--transition:100ms all linear;--padding-top:0;--padding-end:13px;--padding-bottom:0;--padding-start:13px;margin-top:2px;margin-bottom:2px;position:relative;-ms-flex-preferred-size:0;flex-basis:0;-ms-flex-direction:row;flex-direction:row;min-width:70px;min-height:28px;-webkit-transform:translate3d(0, 0, 0);transform:translate3d(0, 0, 0);font-size:13px;font-weight:450;line-height:37px}:host::before{margin-left:0;margin-right:0;margin-top:5px;margin-bottom:5px;-webkit-transition:160ms opacity ease-in-out;transition:160ms opacity ease-in-out;-webkit-transition-delay:100ms;transition-delay:100ms;border-left:var(--border-width) var(--border-style) var(--border-color);content:\\\"\\\";opacity:1;will-change:opacity}:host(:first-of-type)::before{border-left-color:transparent}:host(.segment-button-disabled){opacity:0.3}::slotted(ion-icon){font-size:24px}:host(.segment-button-layout-icon-start) ::slotted(ion-label){margin-left:2px;margin-right:0}@supports ((-webkit-margin-start: 0) or (margin-inline-start: 0)) or (-webkit-margin-start: 0){:host(.segment-button-layout-icon-start) ::slotted(ion-label){margin-left:unset;margin-right:unset;-webkit-margin-start:2px;margin-inline-start:2px;-webkit-margin-end:0;margin-inline-end:0}}:host(.segment-button-layout-icon-end) ::slotted(ion-label){margin-left:0;margin-right:2px}@supports ((-webkit-margin-start: 0) or (margin-inline-start: 0)) or (-webkit-margin-start: 0){:host(.segment-button-layout-icon-end) ::slotted(ion-label){margin-left:unset;margin-right:unset;-webkit-margin-start:0;margin-inline-start:0;-webkit-margin-end:2px;margin-inline-end:2px}}.segment-button-indicator{padding-left:2px;padding-right:2px;left:0;right:0;top:0;bottom:0}@supports ((-webkit-margin-start: 0) or (margin-inline-start: 0)) or (-webkit-margin-start: 0){.segment-button-indicator{padding-left:unset;padding-right:unset;-webkit-padding-start:2px;padding-inline-start:2px;-webkit-padding-end:2px;padding-inline-end:2px}}.segment-button-indicator-background{border-radius:var(--border-radius);background:var(--indicator-color)}.segment-button-indicator-background{-webkit-transition:var(--indicator-transition);transition:var(--indicator-transition)}:host(.segment-button-checked)::before,:host(.segment-button-after-checked)::before{opacity:0}:host(.segment-button-checked){z-index:-1}:host(.segment-button-activated){--indicator-transform:scale(0.95)}:host(.ion-focused) .button-native{opacity:0.7}@media (any-hover: hover){:host(:hover) .button-native{opacity:0.5}:host(.segment-button-checked:hover) .button-native{opacity:1}}:host(.in-segment-color){background:none;color:var(--ion-text-color, #000)}:host(.in-segment-color) .segment-button-indicator-background{background:var(--ion-color-step-350, var(--ion-background-color, #fff))}@media (any-hover: hover){:host(.in-segment-color:hover) .button-native,:host(.in-segment-color.segment-button-checked:hover) .button-native{color:var(--ion-text-color, #000)}}:host(.in-toolbar:not(.in-segment-color)){--background-checked:var(--ion-toolbar-segment-background-checked, none);--color:var(--ion-toolbar-segment-color, var(--ion-toolbar-color), initial);--color-checked:var(--ion-toolbar-segment-color-checked, var(--ion-toolbar-color), initial);--indicator-color:var(--ion-toolbar-segment-indicator-color, var(--ion-color-step-350, var(--ion-background-color, #fff)))}:host(.in-toolbar-color) .segment-button-indicator-background{background:#fff}:host(.in-toolbar-color:not(.in-segment-color)) .button-native{color:var(--ion-color-contrast)}:host(.in-toolbar-color.segment-button-checked:not(.in-segment-color)) .button-native{color:var(--ion-color-base)}@media (any-hover: hover){:host(.in-toolbar-color:not(.in-segment-color):hover) .button-native{color:var(--ion-color-contrast)}:host(.in-toolbar-color.segment-button-checked:not(.in-segment-color):hover) .button-native{color:var(--ion-color-base)}}\";\n\nconst segmentButtonMdCss = \":host{--color:initial;--color-hover:var(--color);--color-checked:var(--color);--color-disabled:var(--color);--padding-start:0;--padding-end:0;--padding-top:0;--padding-bottom:0;border-radius:var(--border-radius);display:-ms-flexbox;display:flex;position:relative;-ms-flex:1 1 auto;flex:1 1 auto;-ms-flex-direction:column;flex-direction:column;height:auto;background:var(--background);color:var(--color);text-decoration:none;text-overflow:ellipsis;white-space:nowrap;-webkit-font-kerning:none;font-kerning:none;cursor:pointer}.button-native{border-radius:0;font-family:inherit;font-size:inherit;font-style:inherit;font-weight:inherit;letter-spacing:inherit;text-decoration:inherit;text-indent:inherit;text-overflow:inherit;text-transform:inherit;text-align:inherit;white-space:inherit;color:inherit;margin-left:var(--margin-start);margin-right:var(--margin-end);margin-top:var(--margin-top);margin-bottom:var(--margin-bottom);padding-left:var(--padding-start);padding-right:var(--padding-end);padding-top:var(--padding-top);padding-bottom:var(--padding-bottom);-webkit-transform:translate3d(0,  0,  0);transform:translate3d(0,  0,  0);display:-ms-flexbox;display:flex;position:relative;-ms-flex-direction:inherit;flex-direction:inherit;-ms-flex-positive:1;flex-grow:1;-ms-flex-align:center;align-items:center;-ms-flex-pack:center;justify-content:center;width:100%;min-width:inherit;max-width:inherit;height:auto;min-height:inherit;max-height:inherit;-webkit-transition:var(--transition);transition:var(--transition);border:none;outline:none;background:transparent;contain:content;pointer-events:none;overflow:hidden;z-index:2}@supports ((-webkit-margin-start: 0) or (margin-inline-start: 0)) or (-webkit-margin-start: 0){.button-native{margin-left:unset;margin-right:unset;-webkit-margin-start:var(--margin-start);margin-inline-start:var(--margin-start);-webkit-margin-end:var(--margin-end);margin-inline-end:var(--margin-end)}}@supports ((-webkit-margin-start: 0) or (margin-inline-start: 0)) or (-webkit-margin-start: 0){.button-native{padding-left:unset;padding-right:unset;-webkit-padding-start:var(--padding-start);padding-inline-start:var(--padding-start);-webkit-padding-end:var(--padding-end);padding-inline-end:var(--padding-end)}}.button-native::after{left:0;right:0;top:0;bottom:0;position:absolute;content:\\\"\\\";opacity:0}.button-inner{display:-ms-flexbox;display:flex;position:relative;-ms-flex-flow:inherit;flex-flow:inherit;-ms-flex-align:center;align-items:center;-ms-flex-pack:center;justify-content:center;width:100%;height:100%;z-index:1}:host(.segment-button-checked){background:var(--background-checked);color:var(--color-checked)}:host(.segment-button-disabled){cursor:default;pointer-events:none}:host(.ion-focused) .button-native{color:var(--color-focused)}:host(.ion-focused) .button-native::after{background:var(--background-focused);opacity:var(--background-focused-opacity)}:host(:focus){outline:none}@media (any-hover: hover){:host(:hover) .button-native{color:var(--color-hover)}:host(:hover) .button-native::after{background:var(--background-hover);opacity:var(--background-hover-opacity)}:host(.segment-button-checked:hover) .button-native{color:var(--color-checked)}}::slotted(ion-icon){-ms-flex-negative:0;flex-shrink:0;-ms-flex-order:-1;order:-1;pointer-events:none}::slotted(ion-label){display:block;-ms-flex-item-align:center;align-self:center;line-height:22px;text-overflow:ellipsis;white-space:nowrap;-webkit-box-sizing:border-box;box-sizing:border-box;pointer-events:none}:host(.segment-button-layout-icon-top) .button-native{-ms-flex-direction:column;flex-direction:column}:host(.segment-button-layout-icon-start) .button-native{-ms-flex-direction:row;flex-direction:row}:host(.segment-button-layout-icon-end) .button-native{-ms-flex-direction:row-reverse;flex-direction:row-reverse}:host(.segment-button-layout-icon-bottom) .button-native{-ms-flex-direction:column-reverse;flex-direction:column-reverse}:host(.segment-button-layout-icon-hide) ::slotted(ion-icon){display:none}:host(.segment-button-layout-label-hide) ::slotted(ion-label){display:none}ion-ripple-effect{color:var(--ripple-color, var(--color-checked))}.segment-button-indicator{-webkit-transform-origin:left;transform-origin:left;position:absolute;opacity:0;-webkit-box-sizing:border-box;box-sizing:border-box;will-change:transform, opacity;pointer-events:none}.segment-button-indicator-background{width:100%;height:var(--indicator-height);-webkit-transform:var(--indicator-transform);transform:var(--indicator-transform);-webkit-box-shadow:var(--indicator-box-shadow);box-shadow:var(--indicator-box-shadow);pointer-events:none}.segment-button-indicator-animated{-webkit-transition:var(--indicator-transition);transition:var(--indicator-transition)}:host(.segment-button-checked) .segment-button-indicator{opacity:1}@media (prefers-reduced-motion: reduce){.segment-button-indicator-background{-webkit-transform:none;transform:none}.segment-button-indicator-animated{-webkit-transition:none;transition:none}}:host{--background:none;--background-checked:none;--background-hover:var(--color-checked);--background-focused:var(--color-checked);--background-activated-opacity:0;--background-focused-opacity:.12;--background-hover-opacity:.04;--color:rgba(var(--ion-text-color-rgb, 0, 0, 0), 0.6);--color-checked:var(--ion-color-primary, #3880ff);--indicator-box-shadow:none;--indicator-color:var(--color-checked);--indicator-height:2px;--indicator-transition:transform 250ms cubic-bezier(0.4, 0, 0.2, 1);--indicator-transform:none;--padding-top:0;--padding-end:16px;--padding-bottom:0;--padding-start:16px;--transition:color 0.15s linear 0s, opacity 0.15s linear 0s;min-width:90px;max-width:360px;min-height:48px;border-width:var(--border-width);border-style:var(--border-style);border-color:var(--border-color);font-size:14px;font-weight:500;letter-spacing:0.06em;line-height:40px;text-transform:uppercase}:host(.segment-button-disabled){opacity:0.3}:host(.in-segment-color){background:none;color:rgba(var(--ion-text-color-rgb, 0, 0, 0), 0.6)}:host(.in-segment-color) ion-ripple-effect{color:var(--ion-color-base)}:host(.in-segment-color) .segment-button-indicator-background{background:var(--ion-color-base)}:host(.in-segment-color.segment-button-checked) .button-native{color:var(--ion-color-base)}:host(.in-segment-color.ion-focused) .button-native::after{background:var(--ion-color-base)}@media (any-hover: hover){:host(.in-segment-color:hover) .button-native{color:rgba(var(--ion-text-color-rgb, 0, 0, 0), 0.6)}:host(.in-segment-color:hover) .button-native::after{background:var(--ion-color-base)}:host(.in-segment-color.segment-button-checked:hover) .button-native{color:var(--ion-color-base)}}:host(.in-toolbar:not(.in-segment-color)){--background:var(--ion-toolbar-segment-background, none);--background-checked:var(--ion-toolbar-segment-background-checked, none);--color:var(--ion-toolbar-segment-color, rgba(var(--ion-text-color-rgb, 0, 0, 0), 0.6));--color-checked:var(--ion-toolbar-segment-color-checked, var(--ion-color-primary, #3880ff));--indicator-color:var(--ion-toolbar-segment-color-checked, var(--color-checked))}:host(.in-toolbar-color:not(.in-segment-color)) .button-native{color:rgba(var(--ion-color-contrast-rgb), 0.6)}:host(.in-toolbar-color.segment-button-checked:not(.in-segment-color)) .button-native{color:var(--ion-color-contrast)}@media (any-hover: hover){:host(.in-toolbar-color:not(.in-segment-color)) .button-native::after{background:var(--ion-color-contrast)}}::slotted(ion-icon){margin-top:12px;margin-bottom:12px;font-size:24px}::slotted(ion-label){margin-top:12px;margin-bottom:12px}:host(.segment-button-layout-icon-top) ::slotted(ion-label),:host(.segment-button-layout-icon-bottom) ::slotted(ion-icon){margin-top:0}:host(.segment-button-layout-icon-top) ::slotted(ion-icon),:host(.segment-button-layout-icon-bottom) ::slotted(ion-label){margin-bottom:0}:host(.segment-button-layout-icon-start) ::slotted(ion-label){margin-left:8px;margin-right:0}@supports ((-webkit-margin-start: 0) or (margin-inline-start: 0)) or (-webkit-margin-start: 0){:host(.segment-button-layout-icon-start) ::slotted(ion-label){margin-left:unset;margin-right:unset;-webkit-margin-start:8px;margin-inline-start:8px;-webkit-margin-end:0;margin-inline-end:0}}:host(.segment-button-layout-icon-end) ::slotted(ion-label){margin-left:0;margin-right:8px}@supports ((-webkit-margin-start: 0) or (margin-inline-start: 0)) or (-webkit-margin-start: 0){:host(.segment-button-layout-icon-end) ::slotted(ion-label){margin-left:unset;margin-right:unset;-webkit-margin-start:0;margin-inline-start:0;-webkit-margin-end:8px;margin-inline-end:8px}}:host(.segment-button-has-icon-only) ::slotted(ion-icon){margin-top:12px;margin-bottom:12px}:host(.segment-button-has-label-only) ::slotted(ion-label){margin-top:12px;margin-bottom:12px}.segment-button-indicator{left:0;right:0;bottom:0}.segment-button-indicator-background{background:var(--indicator-color)}:host(.in-toolbar:not(.in-segment-color)) .segment-button-indicator-background{background:var(--ion-toolbar-segment-indicator-color, var(--indicator-color))}:host(.in-toolbar-color:not(.in-segment-color)) .segment-button-indicator-background{background:var(--ion-color-contrast)}\";\n\nlet ids = 0;\nconst SegmentButton = class {\n  constructor(hostRef) {\n    registerInstance(this, hostRef);\n    this.segmentEl = null;\n    this.checked = false;\n    /**\n     * If `true`, the user cannot interact with the segment button.\n     */\n    this.disabled = false;\n    /**\n     * Set the layout of the text and icon in the segment.\n     */\n    this.layout = 'icon-top';\n    /**\n     * The type of the button.\n     */\n    this.type = 'button';\n    /**\n     * The value of the segment button.\n     */\n    this.value = 'ion-sb-' + (ids++);\n    this.updateStyle = () => {\n      forceUpdate(this);\n    };\n    this.updateState = () => {\n      if (this.segmentEl) {\n        this.checked = this.segmentEl.value === this.value;\n      }\n    };\n  }\n  connectedCallback() {\n    const segmentEl = this.segmentEl = this.el.closest('ion-segment');\n    if (segmentEl) {\n      this.updateState();\n      addEventListener(segmentEl, 'ionSelect', this.updateState);\n      addEventListener(segmentEl, 'ionStyle', this.updateStyle);\n    }\n  }\n  disconnectedCallback() {\n    const segmentEl = this.segmentEl;\n    if (segmentEl) {\n      removeEventListener(segmentEl, 'ionSelect', this.updateState);\n      removeEventListener(segmentEl, 'ionStyle', this.updateStyle);\n      this.segmentEl = null;\n    }\n  }\n  get hasLabel() {\n    return !!this.el.querySelector('ion-label');\n  }\n  get hasIcon() {\n    return !!this.el.querySelector('ion-icon');\n  }\n  get tabIndex() {\n    if (this.disabled) {\n      return -1;\n    }\n    const hasTabIndex = this.el.hasAttribute('tabindex');\n    if (hasTabIndex) {\n      return this.el.getAttribute('tabindex');\n    }\n    return 0;\n  }\n  render() {\n    const { checked, type, disabled, hasIcon, hasLabel, layout, segmentEl, tabIndex } = this;\n    const mode = getIonMode(this);\n    const hasSegmentColor = () => segmentEl !== null && segmentEl.color !== undefined;\n    return (h(Host, { role: \"tab\", \"aria-selected\": checked ? 'true' : 'false', \"aria-disabled\": disabled ? 'true' : null, tabIndex: tabIndex, class: {\n        [mode]: true,\n        'in-toolbar': hostContext('ion-toolbar', this.el),\n        'in-toolbar-color': hostContext('ion-toolbar[color]', this.el),\n        'in-segment': hostContext('ion-segment', this.el),\n        'in-segment-color': hasSegmentColor(),\n        'segment-button-has-label': hasLabel,\n        'segment-button-has-icon': hasIcon,\n        'segment-button-has-label-only': hasLabel && !hasIcon,\n        'segment-button-has-icon-only': hasIcon && !hasLabel,\n        'segment-button-disabled': disabled,\n        'segment-button-checked': checked,\n        [`segment-button-layout-${layout}`]: true,\n        'ion-activatable': true,\n        'ion-activatable-instant': true,\n        'ion-focusable': true,\n      } }, h(\"button\", { type: type, tabIndex: -1, class: \"button-native\", part: \"native\", disabled: disabled }, h(\"span\", { class: \"button-inner\" }, h(\"slot\", null)), mode === 'md' && h(\"ion-ripple-effect\", null)), h(\"div\", { part: \"indicator\", class: {\n        'segment-button-indicator': true,\n        'segment-button-indicator-animated': true\n      } }, h(\"div\", { part: \"indicator-background\", class: \"segment-button-indicator-background\" }))));\n  }\n  get el() { return getElement(this); }\n};\nSegmentButton.style = {\n  ios: segmentButtonIosCss,\n  md: segmentButtonMdCss\n};\n\nexport { Segment as ion_segment, SegmentButton as ion_segment_button };\n"]}