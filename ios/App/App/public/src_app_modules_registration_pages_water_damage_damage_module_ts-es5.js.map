{"version":3,"mappings":"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","names":["_angular_core__WEBPACK_IMPORTED_MODULE_6__","_r1","ctx_r0","DamageObsComponent","ngZone","modalController","registrationService","registration","request","DamageObs","find","x","DamageTypeTID","damageTypeId","undefined","damageObs","isSelected","Attachments","push","filter","save","saveRegistrationAsync","fromLatLng","ObsLocation","leaflet__WEBPACK_IMPORTED_MODULE_1__","Latitude","Longitude","create","component","_pages_set_damage_location_set_damage_location_page__WEBPACK_IMPORTED_MODULE_2__","componentProps","geoHazard","modal","present","onDidDismiss","result","data","obs","DamagePosition","selectors","inputs","damageTypeName","registrationTid","decls","vars","consts","template","ctx","DEBUG_TAG","BasePageService","newAttachmentService","commonRegistrationService","alertController","translateService","loggingService","onReset","get","toPromise","leaveText","createResetDialog","message","translations","buttons","text","role","alert","reset","Zone","run","getDefaultValue","resetImages","propName","getAttachments","id","pipe","attachments","map","a","removeAttachment","subscribe","debug","error","_angular_core__WEBPACK_IMPORTED_MODULE_7__","factory","providedIn","BasePage","basePageService","activatedRoute","snapshot","params","CommonRegistrationService","getRegistrationByIdShared$","reg","createDefaultProps","createInitObservable","ngDestroy$","Promise","resolve","isValid","valid","isEmpty","confirmLeave","onInit","onBeforeLeave","clean","syncStatus","src_app_modules_common_registration_registration_models__WEBPACK_IMPORTED_MODULE_1__","RegistrationService","hasAnyDataToShowInRegistrationTypes","confirmReset","pathFromRoot","v","url","segment","toString","join","path","_core_helpers_observable_helper__WEBPACK_IMPORTED_MODULE_2__","_angular_core__WEBPACK_IMPORTED_MODULE_11__","features","SetDamageLocationPageModule","_shared_components_module__WEBPACK_IMPORTED_MODULE_1__","declarations","_set_damage_location_page__WEBPACK_IMPORTED_MODULE_0__","imports","ctx_r1","SetDamageLocationPage","swipeBackService","fullscreenService","fullscreen$","isFullscreen$","obsLocationIcon","leaflet__WEBPACK_IMPORTED_MODULE_0__","iconUrl","iconSize","iconAnchor","shadowUrl","shadowSize","fromMarker","icon","_core_helpers_is_empty_helper__WEBPACK_IMPORTED_MODULE_1__","latLng","damageLocationIcon","locationMarkerIconUrl","locationMarker","disableSwipeBack","enableSwipeBack","event","dismiss","setLocationInMapComponent","confirmLocation","viewQuery","_components_set_location_in_map_set_location_in_map_component__WEBPACK_IMPORTED_MODULE_2__","routes","_damage_page__WEBPACK_IMPORTED_MODULE_0__","DamagePageModule","_set_damage_location_set_damage_location_module__WEBPACK_IMPORTED_MODULE_3__","_angular_router__WEBPACK_IMPORTED_MODULE_5__","_components_damage_obs_damage_obs_component__WEBPACK_IMPORTED_MODULE_2__","damageType_r3","ctx_r2","NO_DAMAGE_VISIBLE","DamagePage","kdvService","length","checked","val","geoHazardName","_varsom_regobs_common_core__WEBPACK_IMPORTED_MODULE_8__","kdvSubscription","getKdvRepositoryByKeyObservable","Id","kdvElements","damageTypes","unsubscribe","_base_page__WEBPACK_IMPORTED_MODULE_0__"],"sources":["webpack:///src/app/modules/registration/components/damage-obs/damage-obs.component.html","webpack:///src/app/modules/registration/components/damage-obs/damage-obs.component.ts","webpack:///src/app/modules/registration/pages/base-page-service.ts","webpack:///src/app/modules/registration/pages/base.page.ts","webpack:///src/app/modules/registration/pages/set-damage-location/set-damage-location.module.ts","webpack:///src/app/modules/registration/pages/set-damage-location/set-damage-location.page.html","webpack:///src/app/modules/registration/pages/set-damage-location/set-damage-location.page.ts","webpack:///src/app/modules/registration/pages/water/damage/damage.module.ts","webpack:///src/app/modules/registration/pages/water/damage/damage.page.html","webpack:///src/app/modules/registration/pages/water/damage/damage.page.ts"],"sourcesContent":["<ion-item>\r\n  <ion-checkbox mode=\"md\" slot=\"start\" [(ngModel)]=\"isSelected\" (ionChange)=\"onCheckedChange()\"></ion-checkbox>\r\n  <ion-label>{{ damageTypeName }}</ion-label>\r\n</ion-item>\r\n<ion-list lines=\"none\" class=\"no-border ion-no-margin\" *ngIf=\"isSelected && damageObs\">\r\n  <ion-item detail=\"false\" (click)=\"setDamagePosition()\">\r\n    <ion-label color=\"medium\" position=\"stacked\" class=\"ion-text-uppercase\">{{ 'REGISTRATION.WATER.DAMAGE.WHERE_IS_DAMAGE_LOCATION'\r\n          | translate }}</ion-label>\r\n    <ion-text class=\"ion-align-self-start ion-text-wrap\">\r\n      <ion-icon class=\"add-icon\" color=\"primary\" name=\"location\">\r\n      </ion-icon>\r\n      <ng-container *ngIf=\"damageObs.DamagePosition else noDamagePosition\">\r\n        {{ damageObs.DamagePosition.Latitude | number:'0.3'\r\n        }}&deg;{{'MAP_CENTER_INFO.NORTH_SHORT'|translate}},\r\n        {{ damageObs.DamagePosition.Longitude | number:'0.3'\r\n        }}&deg;{{'MAP_CENTER_INFO.EAST_SHORT'|translate}}\r\n      </ng-container>\r\n    </ion-text>\r\n  </ion-item>\r\n  <ion-item class=\"label-only\">\r\n    <ion-label color=\"medium\" position=\"stacked\" class=\"ion-text-uppercase\">{{'REGISTRATION.WATER.DAMAGE.IMAGE_OF_DAMAGES' |\r\n      translate}}</ion-label>\r\n  </ion-item>\r\n  <app-add-picture-item iconColor=\"primary\" \r\n    [geoHazard]=\"registration.geoHazard\" \r\n    [registrationId]=\"registration.id\" \r\n    [registrationTid]=\"registrationTid\"\r\n    pictureCommentText=\"\" [onBeforeAdd]=\"getSaveFunc()\"\r\n    pictureCommentPlaceholder=\"REGISTRATION.INCIDENT.IMAGE_PLACEHOLDER\">\r\n  </app-add-picture-item>\r\n  <app-text-comment title=\"REGISTRATION.WATER.DAMAGE.COMMENT\" [(value)]=\"damageObs.Comment\"\r\n    placeholder=\"REGISTRATION.WATER.DAMAGE.COMMENT_PLACEHOLDER\"></app-text-comment>\r\n</ion-list>\r\n<ng-template #noDamagePosition>\r\n  {{'REGISTRATION.WATER.DAMAGE.ADD_DAMAGE_LOCATION' | translate }}\r\n</ng-template>","import {\r\n  Component,\r\n  OnInit,\r\n  Input,\r\n  NgZone,\r\n} from '@angular/core';\r\nimport { IRegistration, RegistrationTid } from 'src/app/modules/common-registration/registration.models';\r\nimport { ModalController } from '@ionic/angular';\r\nimport * as L from 'leaflet';\r\nimport { SetDamageLocationPage } from '../../pages/set-damage-location/set-damage-location.page';\r\nimport { ObsLocationEditModel } from '@varsom-regobs-common/regobs-api';\r\nimport { RegistrationService } from '../../services/registration.service';\r\n\r\n@Component({\r\n  selector: 'app-damage-obs',\r\n  templateUrl: './damage-obs.component.html',\r\n  styleUrls: ['./damage-obs.component.scss']\r\n})\r\nexport class DamageObsComponent implements OnInit {\r\n  @Input() damageTypeId: number;\r\n  @Input() damageTypeName: string;\r\n  @Input() registration: IRegistration;\r\n  @Input() registrationTid: RegistrationTid;\r\n\r\n  isSelected: boolean;\r\n\r\n  get damageObs() {\r\n    if (\r\n      this.registration &&\r\n      this.registration.request &&\r\n      this.registration.request.DamageObs\r\n    ) {\r\n      return this.registration.request.DamageObs.find(\r\n        (x) => x.DamageTypeTID === this.damageTypeId\r\n      );\r\n    }\r\n    return undefined;\r\n  }\r\n\r\n  constructor(\r\n    private ngZone: NgZone,\r\n    private modalController: ModalController,\r\n    private registrationService: RegistrationService\r\n  ) {}\r\n\r\n  ngOnInit() {\r\n    if (this.damageObs) {\r\n      this.isSelected = true;\r\n    } else {\r\n      this.isSelected = false;\r\n    }\r\n    if (this.damageObs && this.damageObs.Attachments === undefined) {\r\n      this.damageObs.Attachments = [];\r\n    }\r\n  }\r\n\r\n  toggleDamageType() {\r\n    this.isSelected = !this.isSelected;\r\n  }\r\n\r\n  onCheckedChange() {\r\n    if (this.isSelected) {\r\n      if (!this.damageObs) {\r\n        this.registration.request.DamageObs.push({\r\n          DamageTypeTID: this.damageTypeId,\r\n          Attachments: []\r\n        });\r\n      }\r\n    } else {\r\n      this.registration.request.DamageObs = this.registration.request.DamageObs.filter(\r\n        (x) => x.DamageTypeTID !== this.damageTypeId\r\n      );\r\n    }\r\n    this.save();\r\n  }\r\n\r\n  save() {\r\n    return this.registrationService.saveRegistrationAsync(this.registration);\r\n  }\r\n\r\n  getSaveFunc() {\r\n    return () => this.save();\r\n  }\r\n\r\n  async setDamagePosition() {\r\n    const fromLatLng = this.registration.request.ObsLocation\r\n      ? L.latLng(\r\n          this.registration.request.ObsLocation.Latitude,\r\n          this.registration.request.ObsLocation.Longitude\r\n        )\r\n      : null;\r\n    const modal = await this.modalController.create({\r\n      component: SetDamageLocationPage,\r\n      componentProps: {\r\n        fromLatLng,\r\n        damageObs: this.damageObs,\r\n        geoHazard: this.registration.geoHazard\r\n      }\r\n    });\r\n    modal.present();\r\n    const result = await modal.onDidDismiss();\r\n    if (result.data) {\r\n      const obs: ObsLocationEditModel = result.data;\r\n      this.damageObs.DamagePosition = {\r\n        Latitude: obs.Latitude,\r\n        Longitude: obs.Longitude\r\n      };\r\n      await this.save();\r\n    }\r\n  }\r\n}\r\n","import { Injectable, NgZone } from '@angular/core';\r\nimport { IRegistration, RegistrationTid } from 'src/app/modules/common-registration/registration.models';\r\nimport { getPropertyName, isArrayType } from 'src/app/modules/common-registration/registration.helpers';\r\nimport { NewAttachmentService, RegistrationService as CommonRegistrationService } from 'src/app/modules/common-registration/registration.services';\r\nimport { RegistrationService } from '../services/registration.service';\r\nimport { AlertController } from '@ionic/angular';\r\nimport { TranslateService } from '@ngx-translate/core';\r\nimport { switchMap } from 'rxjs/operators';\r\nimport { forkJoin } from 'rxjs';\r\nimport { LoggingService } from '../../shared/services/logging/logging.service';\r\n\r\nconst DEBUG_TAG = 'BasePageService';\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class BasePageService {\r\n  get Zone() {\r\n    return this.ngZone;\r\n  }\r\n\r\n  get RegistrationService() {\r\n    return this.registrationService;\r\n  }\r\n\r\n  get AlertController() {\r\n    return this.alertController;\r\n  }\r\n\r\n  get TranslateService() {\r\n    return this.translateService;\r\n  }\r\n\r\n  get CommonRegistrationService() {\r\n    return this.commonRegistrationService;\r\n  }\r\n\r\n  constructor(\r\n    private registrationService: RegistrationService,\r\n    private newAttachmentService: NewAttachmentService,\r\n    private commonRegistrationService: CommonRegistrationService,\r\n    private ngZone: NgZone,\r\n    private alertController: AlertController,\r\n    private translateService: TranslateService,\r\n    private loggingService: LoggingService\r\n  ) {}\r\n\r\n  async confirmLeave(registration: IRegistration, registrationTid: RegistrationTid, onReset?: () => void) {\r\n    const leaveText = await this.translateService.get('REGISTRATION.REQUIRED_FIELDS_MISSING').toPromise();\r\n    return this.createResetDialog(leaveText, registration, registrationTid, onReset);\r\n  }\r\n\r\n  async confirmReset(registration: IRegistration, registrationTid: RegistrationTid, onReset?: () => void) {\r\n    const leaveText = await this.translateService.get('REGISTRATION.CONFIRM_RESET').toPromise();\r\n    return this.createResetDialog(leaveText, registration, registrationTid, onReset);\r\n  }\r\n\r\n  private async createResetDialog(message: string, registration: IRegistration, registrationTid: RegistrationTid, onReset?: () => void) {\r\n    const translations = await this.translateService.get(['DIALOGS.CANCEL', 'DIALOGS.YES']).toPromise();\r\n    const alert = await this.alertController.create({\r\n      message,\r\n      buttons: [\r\n        {\r\n          text: translations['DIALOGS.CANCEL'],\r\n          role: 'cancel'\r\n        },\r\n        {\r\n          text: translations['DIALOGS.YES']\r\n        }\r\n      ]\r\n    });\r\n    await alert.present();\r\n    const result = await alert.onDidDismiss();\r\n    const reset: boolean = result.role !== 'cancel';\r\n    if (reset) {\r\n      await this.reset(registration, registrationTid, onReset);\r\n    }\r\n    return reset;\r\n  }\r\n\r\n  async reset(registration: IRegistration, registrationTid: RegistrationTid, onReset?: () => void) {\r\n    this.Zone.run(() => {\r\n      if (registrationTid) {\r\n        registration.request[getPropertyName(registrationTid)] = this.getDefaultValue(registrationTid);\r\n        this.resetImages(registration);\r\n      }\r\n      if (onReset) {\r\n        onReset();\r\n      }\r\n    });\r\n    await this.registrationService.saveRegistrationAsync(registration);\r\n  }\r\n\r\n  createDefaultProps(registration: IRegistration, registrationTid: RegistrationTid) {\r\n    const propName = getPropertyName(registrationTid);\r\n    if (!registration.request[propName]) {\r\n      // Init to new object if null\r\n      registration.request[propName] = this.getDefaultValue(registrationTid);\r\n    }\r\n  }\r\n\r\n  getDefaultValue(registrationTid: RegistrationTid) {\r\n    if (isArrayType(registrationTid)) {\r\n      return [];\r\n    } else {\r\n      return {};\r\n    }\r\n  }\r\n\r\n  resetImages(registration: IRegistration) {\r\n    this.newAttachmentService\r\n      .getAttachments(registration.id)\r\n      .pipe(switchMap((attachments) => forkJoin(attachments.map((a) => this.newAttachmentService.removeAttachment(registration.id, a.id)))))\r\n      .subscribe(\r\n        () => {\r\n          this.loggingService.debug('Reset images complete', DEBUG_TAG);\r\n        },\r\n        (error) => {\r\n          this.loggingService.error(error, DEBUG_TAG, 'Could not reset images');\r\n        }\r\n      );\r\n  }\r\n}\r\n","import { Directive, OnInit } from '@angular/core';\r\nimport { from, of } from 'rxjs';\r\nimport { BasePageService } from './base-page-service';\r\nimport { IRegistration, RegistrationTid, SyncStatus } from 'src/app/modules/common-registration/registration.models';\r\nimport { ActivatedRoute } from '@angular/router';\r\nimport { take, takeUntil, map, switchMap, tap } from 'rxjs/operators';\r\nimport { NgDestoryBase } from '../../../core/helpers/observable-helper';\r\n\r\n@Directive()\r\nexport abstract class BasePage extends NgDestoryBase implements OnInit {\r\n  registration: IRegistration;\r\n  basePageService: BasePageService;\r\n  registrationTid: RegistrationTid;\r\n  activatedRoute: ActivatedRoute;\r\n\r\n  constructor(registrationTid: RegistrationTid, basePageService: BasePageService, activatedRoute: ActivatedRoute) {\r\n    super();\r\n    this.basePageService = basePageService;\r\n    this.activatedRoute = activatedRoute;\r\n    this.registrationTid = registrationTid;\r\n  }\r\n\r\n  ngOnInit() {}\r\n\r\n  ionViewDidEnter() {\r\n    const id = this.activatedRoute.snapshot.params['id'];\r\n    this.basePageService.CommonRegistrationService.getRegistrationByIdShared$(id)\r\n      .pipe(\r\n        take(1),\r\n        map((reg) => {\r\n          this.basePageService.createDefaultProps(reg, this.registrationTid);\r\n          return reg;\r\n        }),\r\n        tap((reg) => {\r\n          this.registration = reg;\r\n        }),\r\n        switchMap(() => this.createInitObservable()),\r\n        takeUntil(this.ngDestroy$)\r\n      )\r\n      .subscribe();\r\n  }\r\n\r\n  onInit?(): void | Promise<any>;\r\n\r\n  onBeforeLeave?(): void | Promise<any>;\r\n\r\n  onReset?(): void;\r\n\r\n  isValid?(): boolean | Promise<boolean>;\r\n\r\n  // NOTE: Remember to add canDeactivate: [CanDeactivateRouteGuard] in page module\r\n  async canLeave() {\r\n    // Check if implementation page has implemented custom isValid logic\r\n    const valid = await Promise.resolve(this.isValid ? this.isValid() : true);\r\n    // Only return alert if page is not empty and invalid\r\n    const isEmpty = await Promise.resolve(this.isEmpty());\r\n    if (!isEmpty && !valid) {\r\n      return this.basePageService.confirmLeave(this.registration, this.registrationTid, () => (this.onReset ? this.onReset() : null));\r\n    }\r\n    return true;\r\n  }\r\n\r\n  private createInitObservable() {\r\n    if (this.onInit) {\r\n      return from(Promise.resolve(this.onInit()));\r\n    }\r\n    return of({});\r\n  }\r\n\r\n  async ionViewWillLeave() {\r\n    if (this.onBeforeLeave) {\r\n      await Promise.resolve(this.onBeforeLeave());\r\n    }\r\n    await this.save(true);\r\n  }\r\n\r\n  save(clean = false) {\r\n    this.registration.syncStatus = SyncStatus.Draft;\r\n    return this.basePageService.RegistrationService.saveRegistrationAsync(this.registration, clean);\r\n  }\r\n\r\n  getSaveFunc() {\r\n    return () => this.save();\r\n  }\r\n\r\n  async isEmpty(): Promise<boolean> {\r\n    return !(await this.basePageService.CommonRegistrationService.hasAnyDataToShowInRegistrationTypes(\r\n      this.registration,\r\n      this.registrationTid\r\n    )\r\n      .pipe(take(1))\r\n      .toPromise());\r\n  }\r\n\r\n  reset() {\r\n    return this.basePageService.confirmReset(this.registration, this.registrationTid, () => (this.onReset ? this.onReset() : null));\r\n  }\r\n\r\n  getResolvedUrl(): string {\r\n    return (\r\n      '/' +\r\n      this.activatedRoute.snapshot.pathFromRoot\r\n        .map((v) => v.url.map((segment) => segment.toString()).join('/'))\r\n        .filter((path) => !!path)\r\n        .join('/')\r\n    );\r\n  }\r\n\r\n  // getConfiguredUrl(): string {\r\n  //     return '/' + this.activatedRoute.snapshot.pathFromRoot\r\n  //         .filter(v => v.routeConfig)\r\n  //         .map(v => v.routeConfig.path)\r\n  //         .join('/');\r\n  // }\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { SetDamageLocationPage } from './set-damage-location.page';\r\nimport { SharedComponentsModule } from '../../shared-components.module';\r\n\r\n@NgModule({\r\n  imports: [SharedComponentsModule],\r\n  declarations: [SetDamageLocationPage],\r\n  entryComponents: [SetDamageLocationPage]\r\n})\r\nexport class SetDamageLocationPageModule {}\r\n","<ion-header *ngIf=\"!(fullscreen$ | async)\">\r\n  <ion-toolbar appHeaderColor mode=\"ios\">\r\n    <ion-buttons slot=\"start\">\r\n      <ion-button (click)=\"cancel()\">{{ 'DIALOGS.CANCEL' | translate }}</ion-button>\r\n    </ion-buttons>\r\n    <ion-title>\r\n      {{'REGISTRATION.SET_DAMAGE_LOCATION.TITLE' | translate}}\r\n    </ion-title>\r\n  </ion-toolbar>\r\n</ion-header>\r\n<ion-content>\r\n  <app-set-location-in-map *ngIf=\"fromMarker\" [geoHazard]=\"geoHazard\" [fromMarker]=\"fromMarker\" [locationMarker]=\"locationMarker\"\r\n    [locationMarkerIconUrl]=\"locationMarkerIconUrl\" (locationSet)=\"onLocationSet($event)\" confirmLocationText=\"REGISTRATION.SET_DAMAGE_LOCATION.CONFIRM_TEXT\"\r\n    fromLocationText=\"REGISTRATION.OBS_LOCATION.TITLE\" [showPreviousUsedLocations]=\"false\" locationTitle=\"REGISTRATION.SET_DAMAGE_LOCATION.TITLE\">\r\n  </app-set-location-in-map>\r\n</ion-content>","import { Component, OnInit, Input, ViewChild } from '@angular/core';\r\nimport { ModalController } from '@ionic/angular';\r\nimport { DamageObsEditModel, ObsLocationEditModel } from '@varsom-regobs-common/regobs-api';\r\nimport * as L from 'leaflet';\r\nimport { IsEmptyHelper } from '../../../../core/helpers/is-empty.helper';\r\nimport { SetLocationInMapComponent } from '../../components/set-location-in-map/set-location-in-map.component';\r\nimport { GeoHazard } from '@varsom-regobs-common/core';\r\nimport { FullscreenService } from '../../../../core/services/fullscreen/fullscreen.service';\r\nimport { Observable } from 'rxjs';\r\nimport { SwipeBackService } from '../../../../core/services/swipe-back/swipe-back.service';\r\n\r\n@Component({\r\n  selector: 'app-set-damage-location',\r\n  templateUrl: './set-damage-location.page.html',\r\n  styleUrls: ['./set-damage-location.page.scss']\r\n})\r\nexport class SetDamageLocationPage implements OnInit {\r\n  @Input() damageObs: DamageObsEditModel;\r\n  @Input() geoHazard: GeoHazard;\r\n  @Input() fromLatLng: L.LatLng;\r\n  fromMarker: L.Marker;\r\n  locationMarker: L.Marker;\r\n  locationMarkerIconUrl = '/assets/icon/map/damage-location.svg';\r\n  fullscreen$: Observable<boolean>;\r\n\r\n  @ViewChild(SetLocationInMapComponent)\r\n  setLocationInMapComponent: SetLocationInMapComponent;\r\n\r\n  constructor(\r\n    private modalController: ModalController,\r\n    private swipeBackService: SwipeBackService,\r\n    private fullscreenService: FullscreenService\r\n  ) {\r\n    this.fullscreen$ = this.fullscreenService.isFullscreen$;\r\n  }\r\n\r\n  async ngOnInit() {\r\n    if (this.fromLatLng) {\r\n      const obsLocationIcon = L.icon({\r\n        iconUrl: '/assets/icon/map/obs-location.svg',\r\n        iconSize: [25, 41],\r\n        iconAnchor: [12, 41],\r\n        shadowUrl: 'leaflet/marker-shadow.png',\r\n        shadowSize: [41, 41]\r\n      });\r\n      this.fromMarker = L.marker(this.fromLatLng, { icon: obsLocationIcon });\r\n    }\r\n    if (\r\n      this.damageObs &&\r\n      !IsEmptyHelper.isEmpty(this.damageObs.DamagePosition)\r\n    ) {\r\n      const latLng = L.latLng(\r\n        this.damageObs.DamagePosition.Latitude,\r\n        this.damageObs.DamagePosition.Longitude\r\n      );\r\n      const damageLocationIcon = L.icon({\r\n        iconUrl: this.locationMarkerIconUrl,\r\n        iconSize: [25, 41],\r\n        iconAnchor: [12, 41],\r\n        shadowUrl: 'leaflet/marker-shadow.png',\r\n        shadowSize: [41, 41]\r\n      });\r\n      this.locationMarker = L.marker(latLng, { icon: damageLocationIcon });\r\n    }\r\n  }\r\n\r\n  ionViewDidEnter() {\r\n    this.swipeBackService.disableSwipeBack();\r\n  }\r\n\r\n  ionViewWillLeave() {\r\n    this.swipeBackService.enableSwipeBack();\r\n  }\r\n\r\n  async onLocationSet(event: ObsLocationEditModel) {\r\n    this.modalController.dismiss(event);\r\n  }\r\n\r\n  cancel() {\r\n    this.modalController.dismiss();\r\n  }\r\n\r\n  ok() {\r\n    this.setLocationInMapComponent.confirmLocation();\r\n  }\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\nimport { DamagePage } from './damage.page';\r\nimport { SharedComponentsModule } from '../../../shared-components.module';\r\nimport { DamageObsComponent } from '../../../components/damage-obs/damage-obs.component';\r\nimport { SetDamageLocationPageModule } from '../../set-damage-location/set-damage-location.module';\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: '',\r\n    component: DamagePage\r\n  }\r\n];\r\n\r\n@NgModule({\r\n  imports: [\r\n    SharedComponentsModule,\r\n    SetDamageLocationPageModule,\r\n    RouterModule.forChild(routes)\r\n  ],\r\n  declarations: [DamagePage, DamageObsComponent]\r\n})\r\nexport class DamagePageModule {}\r\n","<ion-header>\r\n  <ion-toolbar appHeaderColor mode=\"ios\">\r\n    <ion-buttons slot=\"start\">\r\n      <ion-back-button text=\"\" defaultHref=\"/\"></ion-back-button>\r\n    </ion-buttons>\r\n    <ion-title>\r\n      {{'REGISTRATION.WATER.DAMAGE.TITLE' | translate}}\r\n    </ion-title>\r\n  </ion-toolbar>\r\n</ion-header>\r\n<ion-content>\r\n  <app-registration-content-wrapper *ngIf=\"registration\" [registration]=\"registration\"\r\n    [registrationTid]=\"registrationTid\" (reset)=\"reset()\">\r\n    <ion-list lines=\"full\">\r\n      <ion-list-header class=\"ion-text-uppercase\">\r\n        <ion-label>\r\n          {{ 'REGISTRATION.WATER.DAMAGE.CAN_YOU_SEE_DAMAGE' | translate}}\r\n        </ion-label>\r\n      </ion-list-header>\r\n      <ion-radio-group [(ngModel)]=\"isChecked\">\r\n        <ion-item [ngClass]=\"{'selected': checked === true}\" (click)=\"isChecked = true\">\r\n          <ion-label>{{ 'DIALOGS.YES' | translate }}</ion-label>\r\n          <ion-radio mode=\"md\" slot=\"start\" [value]=\"true\"></ion-radio>\r\n        </ion-item>\r\n        <ion-item [ngClass]=\"{'selected': checked === false}\" (click)=\"isChecked = false\">\r\n          <ion-label>{{ 'DIALOGS.NO' | translate }}</ion-label>\r\n          <ion-radio mode=\"md\" slot=\"start\" [value]=\"false\"></ion-radio>\r\n        </ion-item>\r\n      </ion-radio-group>\r\n      <ng-container *ngIf=\"isChecked && damageTypes\">\r\n        <ion-list-header class=\"ion-text-uppercase\">\r\n          <ion-label>\r\n            {{ 'REGISTRATION.WATER.DAMAGE.WHAT_IS_DAMAGED' | translate }}\r\n          </ion-label>\r\n        </ion-list-header>\r\n        <app-damage-obs *ngFor=\"let damageType of damageTypes\" [(registration)]=\"registration\"\r\n          [damageTypeId]=\"damageType.Id\" [damageTypeName]=\"damageType.Name\" [registrationTid]=\"registrationTid\">\r\n        </app-damage-obs>\r\n      </ng-container>\r\n    </ion-list>\r\n  </app-registration-content-wrapper>\r\n</ion-content>","import { Component, NgZone } from '@angular/core';\r\nimport { BasePage } from '../../base.page';\r\nimport { RegistrationTid } from 'src/app/modules/common-registration/registration.models';\r\nimport { KdvService } from '../../../../../core/services/kdv/kdv.service';\r\nimport { GeoHazard } from '@varsom-regobs-common/core';\r\nimport { KdvElement } from '@varsom-regobs-common/regobs-api';\r\nimport { BasePageService } from '../../base-page-service';\r\nimport { ActivatedRoute } from '@angular/router';\r\nimport { Subscription } from 'rxjs';\r\nimport { map } from 'rxjs/operators';\r\n\r\nconst NO_DAMAGE_VISIBLE = 7;\r\n\r\n@Component({\r\n  selector: 'app-damage',\r\n  templateUrl: './damage.page.html',\r\n  styleUrls: ['./damage.page.scss']\r\n})\r\nexport class DamagePage extends BasePage {\r\n  damageTypes: KdvElement[];\r\n  checked: boolean;\r\n\r\n  get isChecked() {\r\n    if (\r\n      !this.registration ||\r\n      !this.registration.request ||\r\n      !this.registration.request.DamageObs ||\r\n      this.registration.request.DamageObs.length === 0\r\n    ) {\r\n      return this.checked;\r\n    }\r\n    return (\r\n      this.registration &&\r\n      this.registration.request.DamageObs.filter(\r\n        (x) => x.DamageTypeTID !== NO_DAMAGE_VISIBLE\r\n      ).length > 0\r\n    );\r\n  }\r\n\r\n  set isChecked(val: boolean) {\r\n    this.checked = val;\r\n    if (val === false) {\r\n      this.registration.request.DamageObs = [\r\n        {\r\n          DamageTypeTID: NO_DAMAGE_VISIBLE\r\n        }\r\n      ];\r\n    } else {\r\n      this.registration.request.DamageObs = this.registration.request.DamageObs.filter(\r\n        (x) => x.DamageTypeTID !== NO_DAMAGE_VISIBLE\r\n      );\r\n    }\r\n  }\r\n\r\n  private kdvSubscription: Subscription;\r\n\r\n  constructor(\r\n    basePageService: BasePageService,\r\n    activatedRoute: ActivatedRoute,\r\n    private kdvService: KdvService,\r\n    private ngZone: NgZone\r\n  ) {\r\n    super(RegistrationTid.DamageObs, basePageService, activatedRoute);\r\n  }\r\n\r\n  onInit() {\r\n    const geoHazardName = GeoHazard[this.registration.geoHazard];\r\n    this.kdvSubscription = this.kdvService\r\n      .getKdvRepositoryByKeyObservable(`${geoHazardName}_DamageTypeKDV`)\r\n      .pipe(map((val) => val.filter((x) => x.Id !== NO_DAMAGE_VISIBLE)))\r\n      .subscribe((kdvElements) => {\r\n        this.ngZone.run(() => {\r\n          this.damageTypes = kdvElements;\r\n        });\r\n      });\r\n  }\r\n\r\n  onBeforeLeave() {\r\n    if (this.kdvSubscription) {\r\n      this.kdvSubscription.unsubscribe();\r\n    }\r\n  }\r\n}\r\n"]}