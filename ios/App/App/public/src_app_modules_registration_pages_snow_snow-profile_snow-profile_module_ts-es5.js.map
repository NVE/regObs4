{"version":3,"mappings":"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","names":["HydrologyHelper","obj","weightInKg","heightInM","tareWeightInKg","cylinderDiameterInM","_number_helper__WEBPACK_IMPORTED_MODULE_0__","r","totalWeight","heightInMeter","volume","Math","PI","density","CompressionTestListModalPageModule","_shared_components_module__WEBPACK_IMPORTED_MODULE_1__","_compression_test_list_compression_test_modal_compression_test_modal_module__WEBPACK_IMPORTED_MODULE_2__","declarations","_compression_test_list_modal_page__WEBPACK_IMPORTED_MODULE_0__","imports","_angular_core__WEBPACK_IMPORTED_MODULE_5__","CompressionTestListModalPage","modalController","registrationService","commonRegistrationService","ngZone","rxjs__WEBPACK_IMPORTED_MODULE_6__","val","reg","request","CompressionTest","getRegistrationByIdShared$","regId","pipe","ngDestroy$","subscribe","run","initialRegistrationClone","clone_deep__WEBPACK_IMPORTED_MODULE_1___default","next","complete","saveRegistrationAsync","dismiss","selectors","inputs","decls","vars","consts","template","ctx","_angular_core__WEBPACK_IMPORTED_MODULE_2__","CompressionTestComponent","modalContoller","tests","filter","t","IncludeInSnowProfile","connectedTests","length","compressionTestListModal","create","component","_compression_test_list_modal_compression_test_list_modal_page__WEBPACK_IMPORTED_MODULE_0__","componentProps","id","present","onDidDismiss","_r2","SnowDensityLayerModalPageModule","_snow_density_layer_modal_page__WEBPACK_IMPORTED_MODULE_0__","SnowDensityLayerModalPage","initialRegistrationState","initLayer","addNew","layer","undefined","calculate","SnowProfile2","SnowDensity","Layers","hasLayers","index","layerLenght","isEmpty","snowDensityLayer","useCylinder","Thickness","Weight","Density","gotoIndex","splice","l","_core_helpers_hydrology_helper__WEBPACK_IMPORTED_MODULE_0__","tareWeight","depth","SnowDensityModalPageModule","_snow_density_layer_modal_snow_density_layer_modal_module__WEBPACK_IMPORTED_MODULE_2__","_snow_density_modal_page__WEBPACK_IMPORTED_MODULE_0__","_angular_core__WEBPACK_IMPORTED_MODULE_9__","SnowDensityModalPage","rxjs__WEBPACK_IMPORTED_MODULE_10__","profile","clone_deep__WEBPACK_IMPORTED_MODULE_4___default","CylinderDiameter","TareWeight","some","recalculateLayers","addOrEditLayer","layerModal","_snow_density_layer_modal_snow_density_layer_modal_page__WEBPACK_IMPORTED_MODULE_0__","event","_core_helpers_array_helper__WEBPACK_IMPORTED_MODULE_1__","detail","from","to","forEach","_core_helpers_hydrology_helper__WEBPACK_IMPORTED_MODULE_2__","_r4","SnowDensityComponent","profiles","densityModal","_snow_density_modal_snow_density_modal_page__WEBPACK_IMPORTED_MODULE_0__","SnowTempLayerModalPageModule","_snow_temp_layer_modal_page__WEBPACK_IMPORTED_MODULE_0__","SnowTempLayerModalPage","clone_deep__WEBPACK_IMPORTED_MODULE_2___default","SnowTemp","_core_helpers_is_empty_helper__WEBPACK_IMPORTED_MODULE_0__","SnowTempModalPageModule","_snow_temp_layer_modal_snow_temp_layer_modal_module__WEBPACK_IMPORTED_MODULE_2__","_snow_temp_modal_page__WEBPACK_IMPORTED_MODULE_0__","_angular_core__WEBPACK_IMPORTED_MODULE_6__","SnowTempModalPage","rxjs__WEBPACK_IMPORTED_MODULE_7__","tempProfile","clone_deep__WEBPACK_IMPORTED_MODULE_3___default","sortLayers","_snow_temp_layer_modal_snow_temp_layer_modal_page__WEBPACK_IMPORTED_MODULE_0__","sort","a","b","Depth","SnowTempComponent","snowTempModal","_snow_temp_modal_snow_temp_modal_page__WEBPACK_IMPORTED_MODULE_0__","StratProfileLayerHistoryModalPageModule","_strat_profile_layer_history_modal_page__WEBPACK_IMPORTED_MODULE_0__","_r3","StratProfileLayerHistoryModalPage","searchService","ObsLocation","$previousUsedLayers","SearchSearch","FromDtObsTime","moment__WEBPACK_IMPORTED_MODULE_0___default","subtract","startOf","toISOString","Radius","Position","Latitude","Longitude","SelectedGeoHazards","_varsom_regobs_common_core__WEBPACK_IMPORTED_MODULE_6__","SelectedRegistrationTypes","Id","src_app_modules_common_registration_registration_models__WEBPACK_IMPORTED_MODULE_1__","result","getLayersFromSearchResult","isLoading","item","StratProfile","layers","map","RegId","date","DtObsTime","x","_r1","StratProfileLayerModalPageModule","_strat_profile_layer_modal_page__WEBPACK_IMPORTED_MODULE_0__","_angular_core__WEBPACK_IMPORTED_MODULE_8__","ctx_r2","basicHardnessValues","basicGrainFormValues","basicWetnessValues","StratProfileLayerModalPage","translateService","text","kdvElement","Name","toLowerCase","_core_helpers_is_empty_helper__WEBPACK_IMPORTED_MODULE_1__","initialRegistationState","get","grainSizeInterfaceOptions","header","showMore","hasAnyAdvancedOptions","updateFilters","HardnessBottomTID","GrainSizeAvgMax","GrainFormSecondaryTID","CriticalLayerTID","Comment","save","setHardnessFilter","setGrainFormFilter","setWetnessFilter","hardnessFilter","n","indexOf","grainFormFilter","wetnessFilter","StratProfileModalPageModule","_strat_profile_layer_modal_strat_profile_layer_modal_module__WEBPACK_IMPORTED_MODULE_2__","_strat_profile_layer_history_modal_strat_profile_layer_history_modal_module__WEBPACK_IMPORTED_MODULE_3__","_strat_profile_modal_page__WEBPACK_IMPORTED_MODULE_0__","_angular_core__WEBPACK_IMPORTED_MODULE_10__","StratProfileModalPage","regobsAuthService","rxjs__WEBPACK_IMPORTED_MODULE_11__","regInitClone","clone_deep__WEBPACK_IMPORTED_MODULE_5___default","getLoggedInUserAsPromise","loggedInUser","isLoggedIn","_strat_profile_layer_history_modal_strat_profile_layer_history_modal_page__WEBPACK_IMPORTED_MODULE_2__","signIn","_strat_profile_layer_modal_strat_profile_layer_modal_page__WEBPACK_IMPORTED_MODULE_0__","sum","reduce","pv","cv","totalThickness","_angular_core__WEBPACK_IMPORTED_MODULE_3__","StratProfileComponent","modal","_strat_profile_modal_strat_profile_modal_page__WEBPACK_IMPORTED_MODULE_1__","routes","path","_snow_profile_page__WEBPACK_IMPORTED_MODULE_0__","SnowProfilePageModule","_components_snow_snow_profile_strat_profile_strat_profile_modal_strat_profile_modal_module__WEBPACK_IMPORTED_MODULE_6__","_components_snow_snow_profile_snow_temp_snow_temp_modal_snow_temp_modal_module__WEBPACK_IMPORTED_MODULE_8__","_components_snow_snow_profile_snow_density_snow_density_modal_snow_density_modal_module__WEBPACK_IMPORTED_MODULE_9__","_components_snow_snow_profile_compression_test_compression_test_list_modal_compression_test_list_modal_module__WEBPACK_IMPORTED_MODULE_10__","_pages_modal_pages_fullscreen_image_modal_fullscreen_image_modal_module__WEBPACK_IMPORTED_MODULE_7__","_angular_router__WEBPACK_IMPORTED_MODULE_12__","_components_snow_snow_profile_compression_test_compression_test_component__WEBPACK_IMPORTED_MODULE_2__","_components_snow_snow_profile_snow_density_snow_density_component__WEBPACK_IMPORTED_MODULE_3__","_components_snow_snow_profile_snow_temp_snow_temp_component__WEBPACK_IMPORTED_MODULE_4__","_components_snow_snow_profile_strat_profile_strat_profile_component__WEBPACK_IMPORTED_MODULE_5__","_angular_core__WEBPACK_IMPORTED_MODULE_17__","ctx_r0","DEBUG_TAG","SnowProfilePage","basePageService","activatedRoute","httpClient","loadingController","toastController","userSettingService","loggingService","isEmptyResult","registration","ct","Promise","resolve","message","backdropDismiss","loader","userSetting$","toPromise","userSetting","format","size","subscription","getPlotFromApiWithFallback","openImageModal","err","showPreviewError","unsubscribe","getPlotFromApi","error","debug","_core_helpers_data_url_helper__WEBPACK_IMPORTED_MODULE_4__","rootUrl","_settings__WEBPACK_IMPORTED_MODULE_6__","appMode","post","language","responseType","mode","duration","toast","src","_pages_modal_pages_fullscreen_image_modal_fullscreen_image_modal_page__WEBPACK_IMPORTED_MODULE_3__","imgSrc","_base_page__WEBPACK_IMPORTED_MODULE_2__","features","FullscreenImageModalPageModule","_angular_common__WEBPACK_IMPORTED_MODULE_2__","_ionic_angular__WEBPACK_IMPORTED_MODULE_3__","_angular_forms__WEBPACK_IMPORTED_MODULE_4__","_fullscreen_image_modal_page__WEBPACK_IMPORTED_MODULE_0__"],"sources":["webpack:///src/app/core/helpers/hydrology-helper.ts","webpack:///src/app/modules/registration/components/snow/snow-profile/compression-test/compression-test-list-modal/compression-test-list-modal.module.ts","webpack:///src/app/modules/registration/components/snow/snow-profile/compression-test/compression-test-list-modal/compression-test-list-modal.page.html","webpack:///src/app/modules/registration/components/snow/snow-profile/compression-test/compression-test-list-modal/compression-test-list-modal.page.ts","webpack:///src/app/modules/registration/components/snow/snow-profile/compression-test/compression-test.component.html","webpack:///src/app/modules/registration/components/snow/snow-profile/compression-test/compression-test.component.ts","webpack:///src/app/modules/registration/components/snow/snow-profile/snow-density/snow-density-layer-modal/snow-density-layer-modal.module.ts","webpack:///src/app/modules/registration/components/snow/snow-profile/snow-density/snow-density-layer-modal/snow-density-layer-modal.page.html","webpack:///src/app/modules/registration/components/snow/snow-profile/snow-density/snow-density-layer-modal/snow-density-layer-modal.page.ts","webpack:///src/app/modules/registration/components/snow/snow-profile/snow-density/snow-density-modal/snow-density-modal.module.ts","webpack:///src/app/modules/registration/components/snow/snow-profile/snow-density/snow-density-modal/snow-density-modal.page.html","webpack:///src/app/modules/registration/components/snow/snow-profile/snow-density/snow-density-modal/snow-density-modal.page.ts","webpack:///src/app/modules/registration/components/snow/snow-profile/snow-density/snow-density.component.html","webpack:///src/app/modules/registration/components/snow/snow-profile/snow-density/snow-density.component.ts","webpack:///src/app/modules/registration/components/snow/snow-profile/snow-temp/snow-temp-layer-modal/snow-temp-layer-modal.module.ts","webpack:///src/app/modules/registration/components/snow/snow-profile/snow-temp/snow-temp-layer-modal/snow-temp-layer-modal.page.html","webpack:///src/app/modules/registration/components/snow/snow-profile/snow-temp/snow-temp-layer-modal/snow-temp-layer-modal.page.ts","webpack:///src/app/modules/registration/components/snow/snow-profile/snow-temp/snow-temp-modal/snow-temp-modal.module.ts","webpack:///src/app/modules/registration/components/snow/snow-profile/snow-temp/snow-temp-modal/snow-temp-modal.page.html","webpack:///src/app/modules/registration/components/snow/snow-profile/snow-temp/snow-temp-modal/snow-temp-modal.page.ts","webpack:///src/app/modules/registration/components/snow/snow-profile/snow-temp/snow-temp.component.html","webpack:///src/app/modules/registration/components/snow/snow-profile/snow-temp/snow-temp.component.ts","webpack:///src/app/modules/registration/components/snow/snow-profile/strat-profile/strat-profile-layer-history-modal/strat-profile-layer-history-modal.module.ts","webpack:///src/app/modules/registration/components/snow/snow-profile/strat-profile/strat-profile-layer-history-modal/strat-profile-layer-history-modal.page.html","webpack:///src/app/modules/registration/components/snow/snow-profile/strat-profile/strat-profile-layer-history-modal/strat-profile-layer-history-modal.page.ts","webpack:///src/app/modules/registration/components/snow/snow-profile/strat-profile/strat-profile-layer-modal/strat-profile-layer-modal.module.ts","webpack:///src/app/modules/registration/components/snow/snow-profile/strat-profile/strat-profile-layer-modal/strat-profile-layer-modal.page.html","webpack:///src/app/modules/registration/components/snow/snow-profile/strat-profile/strat-profile-layer-modal/strat-profile-layer-modal.page.ts","webpack:///src/app/modules/registration/components/snow/snow-profile/strat-profile/strat-profile-modal/strat-profile-modal.module.ts","webpack:///src/app/modules/registration/components/snow/snow-profile/strat-profile/strat-profile-modal/strat-profile-modal.page.html","webpack:///src/app/modules/registration/components/snow/snow-profile/strat-profile/strat-profile-modal/strat-profile-modal.page.ts","webpack:///src/app/modules/registration/components/snow/snow-profile/strat-profile/strat-profile.component.html","webpack:///src/app/modules/registration/components/snow/snow-profile/strat-profile/strat-profile.component.ts","webpack:///src/app/modules/registration/pages/snow/snow-profile/snow-profile.module.ts","webpack:///src/app/modules/registration/pages/snow/snow-profile/snow-profile.page.html","webpack:///src/app/modules/registration/pages/snow/snow-profile/snow-profile.page.ts","webpack:///src/app/pages/modal-pages/fullscreen-image-modal/fullscreen-image-modal.module.ts"],"sourcesContent":["import { NumberHelper } from './number-helper';\r\n\r\nexport class HydrologyHelper {\r\n  static isEmpty(obj: Object | Array<Object | Array<Object>>) {}\r\n\r\n  static calculateDensity(\r\n    weightInKg: number,\r\n    heightInM: number,\r\n    tareWeightInKg: number,\r\n    cylinderDiameterInM: number\r\n  ) {\r\n    if (\r\n      !NumberHelper.isNumeric(cylinderDiameterInM) ||\r\n      cylinderDiameterInM <= 0\r\n    ) {\r\n      return 0;\r\n    }\r\n    const r = cylinderDiameterInM / 2.0;\r\n    const totalWeight = (weightInKg || 0) - (tareWeightInKg || 0);\r\n    if (totalWeight <= 0) {\r\n      return 0;\r\n    }\r\n    const heightInMeter = heightInM || 0;\r\n    if (heightInMeter <= 0) {\r\n      return 0;\r\n    }\r\n    const volume = Math.PI * r * r * heightInMeter;\r\n    return totalWeight / volume;\r\n  }\r\n\r\n  static calculateWaterEquivalent(density: number, heightInMeter: number) {\r\n    if (\r\n      NumberHelper.isNumeric(density) &&\r\n      NumberHelper.isNumeric(heightInMeter) &&\r\n      density > 0 &&\r\n      heightInMeter > 0\r\n    ) {\r\n      return (density / 1000) * (heightInMeter * 1000);\r\n    }\r\n    return 0;\r\n  }\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { CompressionTestListModalPage } from './compression-test-list-modal.page';\r\nimport { SharedComponentsModule } from '../../../../../shared-components.module';\r\nimport { CompressionTestModalPageModule } from '../../../compression-test-list/compression-test-modal/compression-test-modal.module';\r\n\r\n@NgModule({\r\n  imports: [SharedComponentsModule, CompressionTestModalPageModule],\r\n  declarations: [CompressionTestListModalPage],\r\n  entryComponents: [CompressionTestListModalPage]\r\n})\r\nexport class CompressionTestListModalPageModule {}\r\n","<ion-header>\r\n  <ion-toolbar appHeaderColor mode=\"ios\">\r\n    <ion-buttons slot=\"start\">\r\n      <ion-button (click)=\"cancel()\">{{ 'DIALOGS.CANCEL' | translate }}</ion-button>\r\n    </ion-buttons>\r\n    <ion-title>\r\n      {{ 'REGISTRATION.SNOW.SNOW_PROFILE.COMPRESSION_TEST.TITLE' | translate }}\r\n    </ion-title>\r\n  </ion-toolbar>\r\n</ion-header>\r\n<ion-content>\r\n  <form (ngSubmit)=\"ok()\">\r\n    <ng-container *ngIf=\"reg && reg.request && reg.request.CompressionTest\">\r\n      <app-compression-test-list [(tests)]=\"reg.request.CompressionTest\" (testsChange)=\"save()\"\r\n        [includeInSnowProfileAsDefault]=\"true\">\r\n      </app-compression-test-list>\r\n    </ng-container>\r\n    <ion-grid class=\"ion-no-padding\">\r\n      <ion-row>\r\n        <ion-col size=\"6\" offset=\"3\">\r\n          <ion-button type=\"submit\" expand=\"block\" fill=\"solid\" color=\"primary\">\r\n            {{'DIALOGS.OK' | translate}}\r\n          </ion-button>\r\n        </ion-col>\r\n      </ion-row>\r\n    </ion-grid>\r\n  </form>\r\n</ion-content>","import { Component, OnInit, Input, NgZone, OnDestroy } from '@angular/core';\r\nimport { CompressionTestEditModel } from '@varsom-regobs-common/regobs-api';\r\nimport { ModalController } from '@ionic/angular';\r\nimport { RegistrationService } from '../../../../../services/registration.service';\r\nimport { Subject } from 'rxjs';\r\nimport { takeUntil } from 'rxjs/operators';\r\nimport cloneDeep from 'clone-deep';\r\nimport { IRegistration } from 'src/app/modules/common-registration/registration.models';\r\nimport { RegistrationService as CommonRegistrationService } from 'src/app/modules/common-registration/registration.services';\r\n\r\n@Component({\r\n  selector: 'app-compression-test-list-modal',\r\n  templateUrl: './compression-test-list-modal.page.html',\r\n  styleUrls: ['./compression-test-list-modal.page.scss']\r\n})\r\nexport class CompressionTestListModalPage implements OnInit, OnDestroy {\r\n  @Input() regId: string;\r\n\r\n  private ngDestroy$ = new Subject<void>();\r\n  private initialRegistrationClone: IRegistration;\r\n  reg: IRegistration;\r\n\r\n  set tests(val: CompressionTestEditModel[]) {\r\n    this.reg.request.CompressionTest = val;\r\n  }\r\n\r\n  constructor(\r\n    private modalController: ModalController,\r\n    private registrationService: RegistrationService,\r\n    private commonRegistrationService: CommonRegistrationService,\r\n    private ngZone: NgZone\r\n  ) {}\r\n\r\n  ngOnInit() {\r\n    this.commonRegistrationService\r\n      .getRegistrationByIdShared$(this.regId)\r\n      .pipe(takeUntil(this.ngDestroy$))\r\n      .subscribe((reg) => {\r\n        this.ngZone.run(async () => {\r\n          if (!this.initialRegistrationClone) {\r\n            this.initialRegistrationClone = cloneDeep(reg);\r\n          }\r\n          this.reg = reg;\r\n          if (!this.reg.request.CompressionTest) {\r\n            this.reg.request.CompressionTest = [];\r\n          }\r\n        });\r\n      });\r\n  }\r\n\r\n  ngOnDestroy(): void {\r\n    this.ngDestroy$.next();\r\n    this.ngDestroy$.complete();\r\n  }\r\n\r\n  async save() {\r\n    await this.registrationService.saveRegistrationAsync(this.reg);\r\n  }\r\n\r\n  ok() {\r\n    this.modalController.dismiss();\r\n  }\r\n\r\n  async cancel() {\r\n    await this.registrationService.saveRegistrationAsync(\r\n      this.initialRegistrationClone\r\n    );\r\n    this.modalController.dismiss();\r\n  }\r\n}\r\n","<ion-item tabindex=\"0\" class=\"summary-item\" (click)=\"openModal()\" (keyup.enter)=\"openModal()\">\r\n  <ion-label class=\"ion-padding-vertical ion-padding-end\">\r\n    <h2>{{ 'REGISTRATION.SNOW.SNOW_PROFILE.COMPRESSION_TEST.TITLE' | translate}}</h2>\r\n    <p>\r\n      <ion-text>\r\n        <ng-container *ngIf=\"(tests && tests.length > 0) else empty\">\r\n          {{ connectedTests.length  }} / {{ tests.length  }}\r\n        </ng-container>\r\n        {{'REGISTRATION.SNOW.SNOW_PROFILE.COMPRESSION_TEST.MULTIPLE_TESTS' | translate}}\r\n        {{'REGISTRATION.SNOW.SNOW_PROFILE.COMPRESSION_TEST.ATTACHED' | translate}}\r\n      </ion-text>\r\n    </p>\r\n  </ion-label>\r\n  <ion-icon *ngIf=\"!isEmpty\" slot=\"end\" color=\"success\" name=\"checkmark-circle\"></ion-icon>\r\n</ion-item>\r\n<ng-template #empty>\r\n  {{'REGISTRATION.SNOW.SNOW_PROFILE.COMPRESSION_TEST.EMPTY' | translate}}\r\n</ng-template>","import { Component, Input } from '@angular/core';\r\nimport { CompressionTestListModalPage } from './compression-test-list-modal/compression-test-list-modal.page';\r\nimport { ModalController } from '@ionic/angular';\r\nimport { IRegistration } from 'src/app/modules/common-registration/registration.models';\r\nimport { RegistrationService } from '../../../../services/registration.service';\r\nimport { CompressionTestEditModel } from '@varsom-regobs-common/regobs-api';\r\n\r\n@Component({\r\n  selector: 'app-compression-test',\r\n  templateUrl: './compression-test.component.html',\r\n  styleUrls: ['./compression-test.component.scss']\r\n})\r\nexport class CompressionTestComponent {\r\n  @Input() reg: IRegistration;\r\n  private compressionTestListModal: HTMLIonModalElement;\r\n\r\n  get connectedTests(): CompressionTestEditModel[] {\r\n    return this.tests.filter((t) => t.IncludeInSnowProfile === true);\r\n  }\r\n\r\n  get tests(): CompressionTestEditModel[] {\r\n    return this.reg.request.CompressionTest || [];\r\n  }\r\n\r\n  get isEmpty(): boolean {\r\n    return this.connectedTests.length === 0;\r\n  }\r\n\r\n  constructor(\r\n    private modalContoller: ModalController,\r\n    private registrationService: RegistrationService\r\n  ) {}\r\n\r\n  async openModal(): Promise<void> {\r\n    if (!this.compressionTestListModal) {\r\n      await this.registrationService.saveRegistrationAsync(this.reg); // Save registration before open modal page\r\n      this.compressionTestListModal = await this.modalContoller.create({\r\n        component: CompressionTestListModalPage,\r\n        componentProps: {\r\n          regId: this.reg.id\r\n        }\r\n      });\r\n      this.compressionTestListModal.present();\r\n      await this.compressionTestListModal.onDidDismiss();\r\n      this.compressionTestListModal = null;\r\n    }\r\n  }\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { SnowDensityLayerModalPage } from './snow-density-layer-modal.page';\r\nimport { SharedComponentsModule } from '../../../../../shared-components.module';\r\n\r\n@NgModule({\r\n  imports: [SharedComponentsModule],\r\n  declarations: [SnowDensityLayerModalPage],\r\n  entryComponents: [SnowDensityLayerModalPage]\r\n})\r\nexport class SnowDensityLayerModalPageModule {}\r\n","<ion-header>\r\n  <ion-toolbar appHeaderColor mode=\"ios\">\r\n    <ion-buttons slot=\"start\">\r\n      <ion-button (click)=\"cancel()\">{{ 'DIALOGS.CANCEL' | translate }}</ion-button>\r\n    </ion-buttons>\r\n    <ion-title>\r\n      {{ 'REGISTRATION.SNOW.SNOW_PROFILE.SNOW_DENSITY.TITLE' | translate }}\r\n    </ion-title>\r\n  </ion-toolbar>\r\n</ion-header>\r\n<ion-content>\r\n  <form (ngSubmit)=\"ok()\">\r\n    <ion-list lines=\"full\">\r\n      <ion-list-header class=\"ion-text-uppercase\">\r\n        <ion-label>\r\n          {{ 'REGISTRATION.SNOW.SNOW_PROFILE.SNOW_DENSITY.TITLE' | translate}}\r\n        </ion-label>\r\n      </ion-list-header>\r\n      <ng-container *ngIf=\"useCylinder else noCylinder\">\r\n        <app-numeric-input [(value)]=\"layer.Thickness\" title=\"REGISTRATION.SNOW.SNOW_PROFILE.SNOW_DENSITY.HEIGHT\"\r\n          [max]=\"999\" [min]=\"0\" suffix=\"cm\" [decimalPlaces]=\"2\" (valueChange)=\"calculate()\" [convertRatio]=\"100\">\r\n        </app-numeric-input>\r\n        <app-numeric-input [(value)]=\"layer.Weight\" title=\"REGISTRATION.SNOW.SNOW_PROFILE.SNOW_DENSITY.WEIGHT\"\r\n          [max]=\"9999\" [min]=\"0\" [convertRatio]=\"1000\" suffix=\"g\" [decimalPlaces]=\"2\" (valueChange)=\"calculate()\">\r\n        </app-numeric-input>\r\n        <ion-item>\r\n          <ion-label position=\"stacked\" color=\"medium\" class=\"ion-text-uppercase\">\r\n            {{ 'REGISTRATION.SNOW.SNOW_PROFILE.SNOW_DENSITY.TITLE' | translate}}\r\n          </ion-label>\r\n          <ion-text class=\"ion-align-self-start\">\r\n            <ng-container *ngIf=\"layer.Density\">{{ layer.Density | number:'1.0-2' }} kg/m³</ng-container>\r\n          </ion-text>\r\n        </ion-item>\r\n        <ion-item>\r\n          <ion-label position=\"stacked\" color=\"medium\" class=\"ion-text-uppercase\">\r\n            {{'REGISTRATION.SNOW.SNOW_PROFILE.SNOW_DENSITY.WATER_EQUIVALENT' | translate}}\r\n          </ion-label>\r\n          <ion-text class=\"ion-align-self-start\">\r\n            <ng-container *ngIf=\"layer.Density && layer.Thickness\">\r\n              {{ getWaterEquivalent(layer.Density, layer.Thickness) | number:'1.0-2' }} mm</ng-container>\r\n          </ion-text>\r\n        </ion-item>\r\n      </ng-container>\r\n    </ion-list>\r\n    <ion-grid class=\"ion-no-padding\">\r\n      <ion-row>\r\n        <ion-col size=\"6\">\r\n          <ion-button [disabled]=\"index === 0\" expand=\"block\" fill=\"outline\" color=\"primary\" (click)=\"ok(-1)\">\r\n            <ion-icon slot=\"start\" name=\"arrow-back\"></ion-icon>\r\n            <ion-text>{{ 'DIALOGS.PREVIOUS' | translate }}</ion-text>\r\n          </ion-button>\r\n        </ion-col>\r\n        <ion-col size=\"6\">\r\n          <ion-button [disabled]=\"!canGoNext\" expand=\"block\" fill=\"outline\" color=\"primary\" (click)=\"ok(1)\">\r\n            <ion-icon slot=\"end\" name=\"arrow-forward\"></ion-icon>\r\n            <ion-text>{{ 'DIALOGS.NEXT' | translate }}</ion-text>\r\n          </ion-button>\r\n        </ion-col>\r\n      </ion-row>\r\n      <ion-row>\r\n        <ion-col size=\"12\">\r\n          <ion-button type=\"submit\" expand=\"block\" fill=\"solid\" color=\"primary\">\r\n            {{ 'DIALOGS.OK_BACK' | translate }}\r\n          </ion-button>\r\n        </ion-col>\r\n      </ion-row>\r\n      <ion-row *ngIf=\"!addNew\">\r\n        <ion-col size=\"6\" offset=\"3\">\r\n          <ion-button (click)=\"delete()\" size=\"small\" fill=\"clear\" expand=\"block\">\r\n            <ion-icon slot=\"start\" name=\"trash\"></ion-icon>\r\n            {{ 'DIALOGS.DELETE' | translate }}\r\n          </ion-button>\r\n        </ion-col>\r\n      </ion-row>\r\n    </ion-grid>\r\n  </form>\r\n</ion-content>\r\n<ng-template #noCylinder>\r\n  <app-numeric-input [(value)]=\"layer.Thickness\" title=\"REGISTRATION.SNOW.SNOW_PROFILE.SNOW_DENSITY.HEIGHT\" [max]=\"999\"\r\n    [min]=\"0\" suffix=\"cm\" [decimalPlaces]=\"2\" (valueChange)=\"calculate()\" [convertRatio]=\"100\">\r\n  </app-numeric-input>\r\n  <app-numeric-input [(value)]=\"layer.Density\" title=\"REGISTRATION.SNOW.SNOW_PROFILE.SNOW_DENSITY.DENSITY\" [max]=\"9999\"\r\n    [min]=\"0\" suffix=\"kg/m³\" [decimalPlaces]=\"3\"></app-numeric-input>\r\n</ng-template>","import { Component, OnInit, Input } from '@angular/core';\r\nimport { ModalController } from '@ionic/angular';\r\nimport { SnowDensityLayerModel } from '@varsom-regobs-common/regobs-api';\r\nimport { HydrologyHelper } from '../../../../../../../core/helpers/hydrology-helper';\r\nimport { IRegistration } from 'src/app/modules/common-registration/registration.models';\r\nimport cloneDeep from 'clone-deep';\r\nimport { RegistrationService } from '../../../../../services/registration.service';\r\n\r\n@Component({\r\n  selector: 'app-snow-density-layer-modal',\r\n  templateUrl: './snow-density-layer-modal.page.html',\r\n  styleUrls: ['./snow-density-layer-modal.page.scss']\r\n})\r\nexport class SnowDensityLayerModalPage implements OnInit {\r\n  @Input() reg: IRegistration;\r\n  @Input() layer: SnowDensityLayerModel;\r\n  @Input() useCylinder = true;\r\n  @Input() cylinderDiameterInM: number;\r\n  @Input() tareWeight: number;\r\n  @Input() index: number;\r\n  addNew: boolean;\r\n  private initialRegistrationState: IRegistration;\r\n\r\n  constructor(\r\n    private modalController: ModalController,\r\n    private registrationService: RegistrationService\r\n  ) {}\r\n\r\n  ngOnInit() {\r\n    this.initialRegistrationState = cloneDeep(this.reg);\r\n    this.initLayer();\r\n  }\r\n\r\n  private initLayer() {\r\n    this.addNew = this.layer === undefined;\r\n    if (this.addNew) {\r\n      this.layer = {};\r\n    }\r\n    this.calculate();\r\n  }\r\n\r\n  get hasLayers() {\r\n    return (\r\n      this.reg &&\r\n      this.reg.request &&\r\n      this.reg.request.SnowProfile2 &&\r\n      this.reg.request.SnowProfile2.SnowDensity &&\r\n      this.reg.request.SnowProfile2.SnowDensity[0] &&\r\n      this.reg.request.SnowProfile2.SnowDensity[0].Layers &&\r\n      this.reg.request.SnowProfile2.SnowDensity[0].Layers.length > 0\r\n    );\r\n  }\r\n\r\n  get layerLenght() {\r\n    return this.hasLayers\r\n      ? this.reg.request.SnowProfile2.SnowDensity[0].Layers.length\r\n      : 0;\r\n  }\r\n\r\n  get canGoNext() {\r\n    return (\r\n      (this.hasLayers && this.index < this.layerLenght) ||\r\n      (this.index === this.layerLenght &&\r\n        this.addNew &&\r\n        !this.isEmpty(this.layer))\r\n    );\r\n  }\r\n\r\n  private isEmpty(snowDensityLayer: SnowDensityLayerModel) {\r\n    return this.useCylinder\r\n      ? snowDensityLayer.Thickness === undefined &&\r\n          snowDensityLayer.Weight === undefined\r\n      : snowDensityLayer.Density === undefined;\r\n  }\r\n\r\n  async ok(gotoIndex?: number) {\r\n    if (!this.reg.request.SnowProfile2) {\r\n      this.reg.request.SnowProfile2 = {};\r\n    }\r\n    if (!this.reg.request.SnowProfile2.SnowDensity) {\r\n      this.reg.request.SnowProfile2.SnowDensity = [];\r\n    }\r\n    if (!this.reg.request.SnowProfile2.SnowDensity[0].Layers) {\r\n      this.reg.request.SnowProfile2.SnowDensity[0].Layers = [];\r\n    }\r\n    if (this.addNew && !this.isEmpty(this.layer)) {\r\n      this.reg.request.SnowProfile2.SnowDensity[0].Layers.splice(\r\n        this.index,\r\n        0,\r\n        this.layer\r\n      );\r\n    }\r\n    await this.registrationService.saveRegistrationAsync(this.reg);\r\n\r\n    if (gotoIndex !== undefined) {\r\n      this.index = this.index + gotoIndex;\r\n      this.layer = this.reg.request.SnowProfile2.SnowDensity[0].Layers[\r\n        this.index\r\n      ];\r\n      this.initLayer();\r\n    } else {\r\n      this.modalController.dismiss();\r\n    }\r\n  }\r\n\r\n  async cancel() {\r\n    await this.registrationService.saveRegistrationAsync(\r\n      this.initialRegistrationState\r\n    );\r\n    this.modalController.dismiss();\r\n  }\r\n\r\n  async delete() {\r\n    if (\r\n      this.reg &&\r\n      this.reg.request &&\r\n      this.reg.request.SnowProfile2 &&\r\n      this.reg.request.SnowProfile2.SnowDensity &&\r\n      this.reg.request.SnowProfile2.SnowDensity.length > 0 &&\r\n      this.reg.request.SnowProfile2.SnowDensity[0].Layers &&\r\n      this.reg.request.SnowProfile2.SnowDensity[0].Layers.length > 0\r\n    ) {\r\n      this.reg.request.SnowProfile2.SnowDensity[0].Layers = this.reg.request.SnowProfile2.SnowDensity[0].Layers.filter(\r\n        (l) => l !== this.layer\r\n      );\r\n      await this.registrationService.saveRegistrationAsync(this.reg);\r\n    }\r\n    this.modalController.dismiss();\r\n  }\r\n\r\n  calculate() {\r\n    if (this.useCylinder) {\r\n      this.layer.Density = HydrologyHelper.calculateDensity(\r\n        this.layer.Weight,\r\n        this.layer.Thickness,\r\n        this.tareWeight,\r\n        this.cylinderDiameterInM\r\n      );\r\n    }\r\n  }\r\n\r\n  getWaterEquivalent(density: number, depth: number) {\r\n    return HydrologyHelper.calculateWaterEquivalent(density, depth);\r\n  }\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { SnowDensityModalPage } from './snow-density-modal.page';\r\nimport { SharedComponentsModule } from '../../../../../shared-components.module';\r\nimport { SnowDensityLayerModalPageModule } from '../snow-density-layer-modal/snow-density-layer-modal.module';\r\n\r\n@NgModule({\r\n  imports: [SharedComponentsModule, SnowDensityLayerModalPageModule],\r\n  declarations: [SnowDensityModalPage],\r\n  entryComponents: [SnowDensityModalPage]\r\n})\r\nexport class SnowDensityModalPageModule {}\r\n","<ion-header>\r\n  <ion-toolbar appHeaderColor mode=\"ios\">\r\n    <ion-buttons slot=\"start\">\r\n      <ion-button (click)=\"cancel()\">{{ 'DIALOGS.CANCEL' | translate }}</ion-button>\r\n    </ion-buttons>\r\n    <ion-title>\r\n      {{ 'REGISTRATION.SNOW.SNOW_PROFILE.SNOW_DENSITY.TITLE' | translate }}\r\n    </ion-title>\r\n  </ion-toolbar>\r\n</ion-header>\r\n<ion-content>\r\n  <form (ngSubmit)=\"ok()\">\r\n    <ion-list lines=\"full\">\r\n      <ion-list-header class=\"ion-text-uppercase\">\r\n        <ion-label>\r\n          {{ 'REGISTRATION.SNOW.SNOW_PROFILE.SNOW_DENSITY.METHOD' | translate}}\r\n        </ion-label>\r\n      </ion-list-header>\r\n      <ion-item>\r\n        <ion-label>\r\n          {{'REGISTRATION.SNOW.SNOW_PROFILE.SNOW_DENSITY.CYLINDER_METHOD' | translate}}\r\n        </ion-label>\r\n        <ion-toggle slot=\"end\" [(ngModel)]=\"useCylinder\" name=\"useCylinder\"></ion-toggle>\r\n      </ion-item>\r\n      <ng-container *ngIf=\"useCylinder\">\r\n        <ion-list-header class=\"ion-text-uppercase\">\r\n          <ion-label>\r\n            {{ 'REGISTRATION.SNOW.SNOW_PROFILE.SNOW_DENSITY.CYLINDER' | translate }}\r\n          </ion-label>\r\n        </ion-list-header>\r\n        <app-numeric-input [(value)]=\"profile.CylinderDiameter\"\r\n          title=\"REGISTRATION.SNOW.SNOW_PROFILE.SNOW_DENSITY.CYLINDER_DIAMETER\" [max]=\"999\" [min]=\"0\" suffix=\"cm\"\r\n          [decimalPlaces]=\"2\" (valueChange)=\"recalculateLayersAndSave()\" [convertRatio]=\"100\"></app-numeric-input>\r\n        <app-numeric-input [(value)]=\"profile.TareWeight\" (valueChange)=\"recalculateLayersAndSave()\"\r\n          title=\"REGISTRATION.SNOW.SNOW_PROFILE.SNOW_DENSITY.TARE_WEIGHT\" [max]=\"999\" [min]=\"0\" suffix=\"g\"\r\n          [decimalPlaces]=\"2\" [convertRatio]=\"1000\"></app-numeric-input>\r\n      </ng-container>\r\n      <ion-list-header class=\"ion-text-uppercase\">\r\n        <ion-label>\r\n          {{ 'REGISTRATION.SNOW.SNOW_PROFILE.SNOW_DENSITY.LAYER' | translate }}\r\n        </ion-label>\r\n      </ion-list-header>\r\n      <ng-container *ngIf=\"hasLayers else noLayers\">\r\n        <ion-item tabindex=\"0\" (click)=\"addLayerTop()\" (keyup.enter)=\"addLayerTop()\">\r\n          <ion-icon color=\"primary\" name=\"add-circle-outline\" slot=\"start\"></ion-icon>\r\n          <ion-label>{{'REGISTRATION.SNOW.SNOW_PROFILE.STRAT_PROFILE.ADD_LAYER_TOP' | translate}}</ion-label>\r\n        </ion-item>\r\n        <ion-reorder-group disabled=\"false\" (ionItemReorder)=\"onLayerReorder($event)\">\r\n          <ion-item tabindex=\"0\" (click)=\"addOrEditLayer(i, layer)\" (keyup.enter)=\"addOrEditLayer(i, layer)\"\r\n            *ngFor=\"let layer of profile.Layers; let i = index\">\r\n            <ion-label>\r\n              <ion-text *ngIf=\"layer.Thickness !== undefined\">\r\n                {{layer.Thickness | metersToCm }}cm\r\n              </ion-text>\r\n              <ion-text *ngIf=\"layer.Weight !== undefined\">\r\n                {{layer.Weight * 1000 }}g\r\n              </ion-text>\r\n              <ion-text *ngIf=\"layer.Density !== undefined\">\r\n                {{ layer.Density | number:'1.0-2' }}kg/m³\r\n              </ion-text>\r\n              <ion-text *ngIf=\"useCylinder && layer.Density !== undefined && layer.Thickness !== undefined\">\r\n                ({{ getWaterEquivalent(layer.Density, layer.Thickness) | number:'1.0-2' }}mm)\r\n              </ion-text>\r\n            </ion-label>\r\n            <ion-reorder slot=\"end\"></ion-reorder>\r\n          </ion-item>\r\n        </ion-reorder-group>\r\n        <ion-item tabindex=\"0\" (click)=\"addLayerBottom()\" (keyup.enter)=\"addLayerBottom()\">\r\n          <ion-icon color=\"primary\" name=\"add-circle-outline\" slot=\"start\"></ion-icon>\r\n          <ion-label>{{'REGISTRATION.SNOW.SNOW_PROFILE.STRAT_PROFILE.ADD_LAYER_BOTTOM' | translate}}</ion-label>\r\n        </ion-item>\r\n      </ng-container>\r\n    </ion-list>\r\n    <ion-grid class=\"ion-no-padding\">\r\n      <ion-row>\r\n        <ion-col size=\"6\" offset=\"3\">\r\n          <ion-button type=\"submit\" expand=\"block\" fill=\"solid\" color=\"primary\">\r\n            {{'DIALOGS.OK' | translate}}\r\n          </ion-button>\r\n        </ion-col>\r\n      </ion-row>\r\n    </ion-grid>\r\n  </form>\r\n</ion-content>\r\n<ng-template #noLayers>\r\n  <ion-item tabindex=\"0\" (click)=\"addLayerBottom()\" (keyup.enter)=\"addLayerBottom()\">\r\n    <ion-icon color=\"primary\" name=\"add-circle-outline\" slot=\"start\"></ion-icon>\r\n    <ion-label>{{'REGISTRATION.SNOW.SNOW_PROFILE.STRAT_PROFILE.ADD_LAYER' | translate}}</ion-label>\r\n  </ion-item>\r\n</ng-template>","import { Component, OnInit, Input, NgZone, OnDestroy } from '@angular/core';\r\nimport { ModalController } from '@ionic/angular';\r\nimport { SnowDensityLayerModel } from '@varsom-regobs-common/regobs-api';\r\nimport { SnowDensityLayerModalPage } from '../snow-density-layer-modal/snow-density-layer-modal.page';\r\nimport { ItemReorderEventDetail } from '@ionic/core';\r\nimport { ArrayHelper } from '../../../../../../../core/helpers/array-helper';\r\nimport { HydrologyHelper } from '../../../../../../../core/helpers/hydrology-helper';\r\nimport { RegistrationService } from '../../../../../services/registration.service';\r\nimport { takeUntil } from 'rxjs/operators';\r\nimport { Subject } from 'rxjs';\r\nimport { IRegistration } from 'src/app/modules/common-registration/registration.models';\r\nimport cloneDeep from 'clone-deep';\r\nimport { RegistrationService as CommonRegistrationService } from 'src/app/modules/common-registration/registration.services';\r\n\r\n@Component({\r\n  selector: 'app-snow-density-modal',\r\n  templateUrl: './snow-density-modal.page.html',\r\n  styleUrls: ['./snow-density-modal.page.scss']\r\n})\r\nexport class SnowDensityModalPage implements OnInit, OnDestroy {\r\n  @Input() regId: string;\r\n  useCylinder: boolean;\r\n  private layerModal: HTMLIonModalElement;\r\n  private ngDestroy$ = new Subject<void>();\r\n  private reg: IRegistration;\r\n  private initialRegistrationClone: IRegistration;\r\n\r\n  get profile() {\r\n    if (\r\n      this.reg &&\r\n      this.reg.request &&\r\n      this.reg.request.SnowProfile2 &&\r\n      this.reg.request.SnowProfile2.SnowDensity &&\r\n      this.reg.request.SnowProfile2.SnowDensity.length > 0\r\n    ) {\r\n      return this.reg.request.SnowProfile2.SnowDensity[0];\r\n    }\r\n    return {};\r\n  }\r\n\r\n  get hasLayers() {\r\n    return (\r\n      this.profile && this.profile.Layers && this.profile.Layers.length > 0\r\n    );\r\n  }\r\n\r\n  constructor(\r\n    private modalController: ModalController,\r\n    private registrationService: RegistrationService,\r\n    private commonRegistrationService: CommonRegistrationService,\r\n    private ngZone: NgZone\r\n  ) {}\r\n\r\n  async ngOnInit() {\r\n    this.commonRegistrationService\r\n      .getRegistrationByIdShared$(this.regId)\r\n      .pipe(takeUntil(this.ngDestroy$))\r\n      .subscribe((reg) => {\r\n        this.ngZone.run(async () => {\r\n          if (!this.initialRegistrationClone) {\r\n            this.initialRegistrationClone = cloneDeep(reg);\r\n          }\r\n          this.reg = reg;\r\n          if (!this.reg.request.SnowProfile2) {\r\n            this.reg.request.SnowProfile2 = {};\r\n          }\r\n          if (!this.reg.request.SnowProfile2.SnowDensity) {\r\n            this.reg.request.SnowProfile2.SnowDensity = [];\r\n          }\r\n          if (!this.reg.request.SnowProfile2.SnowDensity[0]) {\r\n            this.reg.request.SnowProfile2.SnowDensity[0] = {};\r\n          }\r\n          if (!this.reg.request.SnowProfile2.SnowDensity[0].Layers) {\r\n            this.reg.request.SnowProfile2.SnowDensity[0].Layers = [];\r\n          }\r\n          if (this.useCylinder === undefined) {\r\n            this.useCylinder =\r\n              !!this.reg.request.SnowProfile2.SnowDensity[0].CylinderDiameter ||\r\n              !!this.reg.request.SnowProfile2.SnowDensity[0].TareWeight ||\r\n              this.reg.request.SnowProfile2.SnowDensity[0].Layers.length ===\r\n                0 ||\r\n              this.reg.request.SnowProfile2.SnowDensity[0].Layers.some(\r\n                (l) => !!l.Weight\r\n              );\r\n          }\r\n          this.recalculateLayers();\r\n        });\r\n      });\r\n  }\r\n\r\n  ngOnDestroy(): void {\r\n    this.ngDestroy$.next();\r\n    this.ngDestroy$.complete();\r\n  }\r\n\r\n  ok() {\r\n    this.modalController.dismiss(this.profile);\r\n  }\r\n\r\n  async cancel() {\r\n    await this.registrationService.saveRegistrationAsync(\r\n      this.initialRegistrationClone\r\n    );\r\n    this.modalController.dismiss();\r\n  }\r\n\r\n  addLayerTop() {\r\n    this.addOrEditLayer(0, undefined);\r\n  }\r\n\r\n  addLayerBottom() {\r\n    this.addOrEditLayer(\r\n      this.hasLayers ? this.profile.Layers.length : 0,\r\n      undefined\r\n    );\r\n  }\r\n\r\n  async addOrEditLayer(index: number, layer: SnowDensityLayerModel) {\r\n    if (!this.layerModal) {\r\n      this.layerModal = await this.modalController.create({\r\n        component: SnowDensityLayerModalPage,\r\n        componentProps: {\r\n          reg: this.reg,\r\n          layer: layer,\r\n          useCylinder: this.useCylinder,\r\n          cylinderDiameterInM: this.profile.CylinderDiameter,\r\n          tareWeight: this.profile.TareWeight,\r\n          index\r\n        }\r\n      });\r\n      this.layerModal.present();\r\n      await this.layerModal.onDidDismiss();\r\n      this.layerModal = null;\r\n      this.recalculateLayers();\r\n    }\r\n  }\r\n\r\n  onLayerReorder(event: CustomEvent<ItemReorderEventDetail>) {\r\n    this.profile.Layers = ArrayHelper.reorderList(\r\n      this.profile.Layers,\r\n      event.detail.from,\r\n      event.detail.to\r\n    );\r\n    event.detail.complete();\r\n  }\r\n\r\n  recalculateLayers() {\r\n    if (this.useCylinder && this.hasLayers) {\r\n      this.profile.Layers.forEach((layer: SnowDensityLayerModel) => {\r\n        layer.Density = HydrologyHelper.calculateDensity(\r\n          layer.Weight,\r\n          layer.Thickness,\r\n          this.profile.TareWeight,\r\n          this.profile.CylinderDiameter\r\n        );\r\n      });\r\n    }\r\n  }\r\n\r\n  async recalculateLayersAndSave() {\r\n    this.recalculateLayers();\r\n    await this.registrationService.saveRegistrationAsync(this.reg);\r\n  }\r\n\r\n  getWaterEquivalent(density: number, depth: number) {\r\n    return HydrologyHelper.calculateWaterEquivalent(density, depth);\r\n  }\r\n}\r\n","<ion-item tabindex=\"0\" class=\"summary-item\" (click)=\"openModal()\" (keyup.enter)=\"openModal()\">\r\n  <ion-label class=\"ion-padding-vertical ion-padding-end\">\r\n    <h2>{{ 'REGISTRATION.SNOW.SNOW_PROFILE.SNOW_DENSITY.TITLE' | translate}}</h2>\r\n    <p>\r\n      <ion-text *ngIf=\"!isEmpty else empty\">{{profiles[0].Layers ? profiles[0].Layers.length : 0 }}\r\n        <ng-container *ngIf=\"profiles[0].Layers.length === 1 else multiple\">\r\n          {{'REGISTRATION.SNOW.SNOW_PROFILE.SNOW_DENSITY.ONE_LAYER' | translate}}\r\n        </ng-container>\r\n      </ion-text>\r\n    </p>\r\n  </ion-label>\r\n  <ion-icon *ngIf=\"!isEmpty\" slot=\"end\" color=\"success\" name=\"checkmark-circle\"></ion-icon>\r\n</ion-item>\r\n<ng-template #empty>\r\n  {{'REGISTRATION.SNOW.SNOW_PROFILE.SNOW_DENSITY.EMPTY' | translate}}\r\n</ng-template>\r\n<ng-template #multiple>\r\n  {{'REGISTRATION.SNOW.SNOW_PROFILE.SNOW_DENSITY.MULTIPLE_LAYERS' | translate}}\r\n</ng-template>","import { Component, Input } from '@angular/core';\r\nimport { SnowDensityModel } from '@varsom-regobs-common/regobs-api';\r\nimport { ModalController } from '@ionic/angular';\r\nimport { SnowDensityModalPage } from './snow-density-modal/snow-density-modal.page';\r\nimport { IRegistration } from 'src/app/modules/common-registration/registration.models';\r\nimport { RegistrationService } from '../../../../services/registration.service';\r\nimport { isEmpty } from '@varsom-regobs-common/core';\r\n\r\n@Component({\r\n  selector: 'app-snow-density',\r\n  templateUrl: './snow-density.component.html',\r\n  styleUrls: ['./snow-density.component.scss']\r\n})\r\nexport class SnowDensityComponent {\r\n  @Input() reg: IRegistration;\r\n  private densityModal: HTMLIonModalElement;\r\n\r\n  get profiles(): SnowDensityModel[] {\r\n    if (\r\n      this.reg &&\r\n      this.reg.request &&\r\n      this.reg.request.SnowProfile2 &&\r\n      this.reg.request.SnowProfile2.SnowDensity &&\r\n      this.reg.request.SnowProfile2.SnowDensity.length > 0\r\n    ) {\r\n      return this.reg.request.SnowProfile2.SnowDensity;\r\n    }\r\n    return [];\r\n  }\r\n\r\n  get isEmpty(): boolean {\r\n    return isEmpty(this.profiles);\r\n  }\r\n\r\n  constructor(\r\n    private modalContoller: ModalController,\r\n    private registrationService: RegistrationService\r\n  ) {}\r\n\r\n  async openModal(): Promise<void> {\r\n    if (!this.densityModal) {\r\n      await this.registrationService.saveRegistrationAsync(this.reg); // Save registration before open modal page\r\n      this.densityModal = await this.modalContoller.create({\r\n        component: SnowDensityModalPage,\r\n        componentProps: {\r\n          regId: this.reg.id\r\n        }\r\n      });\r\n      this.densityModal.present();\r\n      await this.densityModal.onDidDismiss();\r\n      this.densityModal = null;\r\n    }\r\n  }\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { SnowTempLayerModalPage } from './snow-temp-layer-modal.page';\r\nimport { SharedComponentsModule } from '../../../../../shared-components.module';\r\n\r\n@NgModule({\r\n  imports: [SharedComponentsModule],\r\n  declarations: [SnowTempLayerModalPage],\r\n  entryComponents: [SnowTempLayerModalPage]\r\n})\r\nexport class SnowTempLayerModalPageModule {}\r\n","<ion-header>\r\n  <ion-toolbar appHeaderColor mode=\"ios\">\r\n    <ion-buttons slot=\"start\">\r\n      <ion-button (click)=\"cancel()\">{{ 'DIALOGS.CANCEL' | translate }}</ion-button>\r\n    </ion-buttons>\r\n    <ion-title>\r\n      {{ 'REGISTRATION.SNOW.SNOW_PROFILE.SNOW_TEMP.POINT' | translate }}\r\n    </ion-title>\r\n  </ion-toolbar>\r\n</ion-header>\r\n<ion-content>\r\n  <form (ngSubmit)=\"ok()\">\r\n    <ion-list lines=\"full\">\r\n      <ion-list-header class=\"ion-text-uppercase\">\r\n        <ion-label>\r\n          {{ 'REGISTRATION.SNOW.SNOW_PROFILE.SNOW_TEMP.POINT' | translate}}\r\n        </ion-label>\r\n      </ion-list-header>\r\n      <app-numeric-input [(value)]=\"layer.Depth\" title=\"REGISTRATION.SNOW.SNOW_PROFILE.SNOW_TEMP.DEPTH\" [max]=\"999\"\r\n        [min]=\"0\" suffix=\"cm\" [decimalPlaces]=\"2\" [convertRatio]=\"100\"></app-numeric-input>\r\n      <app-numeric-input [(value)]=\"layer.SnowTemp\" title=\"REGISTRATION.SNOW.SNOW_PROFILE.SNOW_TEMP.TEMPERATURE\"\r\n        [max]=\"0\" [min]=\"-70\" suffix=\"°C\" [decimalPlaces]=\"2\"></app-numeric-input>\r\n    </ion-list>\r\n    <ion-grid class=\"ion-no-padding\">\r\n      <ion-row>\r\n        <ion-col size=\"6\">\r\n          <ion-button [disabled]=\"index === 0\" expand=\"block\" fill=\"outline\" color=\"primary\" (click)=\"ok(-1)\">\r\n            <ion-icon slot=\"start\" name=\"arrow-back\"></ion-icon>\r\n            <ion-text>{{ 'DIALOGS.PREVIOUS' | translate }}</ion-text>\r\n          </ion-button>\r\n        </ion-col>\r\n        <ion-col size=\"6\">\r\n          <ion-button [disabled]=\"!canGoNext\" expand=\"block\" fill=\"outline\" color=\"primary\" (click)=\"ok(1)\">\r\n            <ion-icon slot=\"end\" name=\"arrow-forward\"></ion-icon>\r\n            <ion-text>{{ 'DIALOGS.NEXT' | translate }}</ion-text>\r\n          </ion-button>\r\n        </ion-col>\r\n      </ion-row>\r\n      <ion-row>\r\n        <ion-col size=\"12\">\r\n          <ion-button type=\"submit\" expand=\"block\" fill=\"solid\" color=\"primary\">\r\n            {{ 'DIALOGS.OK_BACK' | translate }}\r\n          </ion-button>\r\n        </ion-col>\r\n      </ion-row>\r\n      <ion-row *ngIf=\"!addNew\">\r\n        <ion-col size=\"6\" offset=\"3\">\r\n          <ion-button (click)=\"delete()\" size=\"small\" fill=\"clear\" expand=\"block\">\r\n            <ion-icon slot=\"start\" name=\"trash\"></ion-icon>\r\n            {{ 'DIALOGS.DELETE' | translate }}\r\n          </ion-button>\r\n        </ion-col>\r\n      </ion-row>\r\n    </ion-grid>\r\n  </form>\r\n</ion-content>","import { Component, OnInit, Input } from '@angular/core';\r\nimport { SnowTempObsModel } from '@varsom-regobs-common/regobs-api';\r\nimport { ModalController } from '@ionic/angular';\r\nimport { IRegistration } from 'src/app/modules/common-registration/registration.models';\r\nimport { IsEmptyHelper } from '../../../../../../../core/helpers/is-empty.helper';\r\nimport { RegistrationService } from '../../../../../services/registration.service';\r\nimport cloneDeep from 'clone-deep';\r\n\r\n@Component({\r\n  selector: 'app-snow-temp-layer-modal',\r\n  templateUrl: './snow-temp-layer-modal.page.html',\r\n  styleUrls: ['./snow-temp-layer-modal.page.scss']\r\n})\r\nexport class SnowTempLayerModalPage implements OnInit {\r\n  @Input() layer: SnowTempObsModel;\r\n  @Input() index: number;\r\n  @Input() reg: IRegistration;\r\n  addNew: boolean;\r\n\r\n  private initialRegistrationState: IRegistration;\r\n\r\n  constructor(\r\n    private modalController: ModalController,\r\n    private registrationService: RegistrationService\r\n  ) {}\r\n\r\n  ngOnInit() {\r\n    this.initialRegistrationState = cloneDeep(this.reg);\r\n    this.initLayer();\r\n  }\r\n\r\n  private initLayer() {\r\n    this.addNew = this.layer === undefined;\r\n    if (this.addNew) {\r\n      this.layer = {};\r\n    }\r\n  }\r\n\r\n  get hasLayers() {\r\n    return (\r\n      this.reg &&\r\n      this.reg.request &&\r\n      this.reg.request.SnowProfile2 &&\r\n      this.reg.request.SnowProfile2.SnowTemp &&\r\n      this.reg.request.SnowProfile2.SnowTemp.Layers &&\r\n      this.reg.request.SnowProfile2.SnowTemp.Layers.length > 0\r\n    );\r\n  }\r\n\r\n  get layerLenght() {\r\n    return this.hasLayers\r\n      ? this.reg.request.SnowProfile2.SnowTemp.Layers.length\r\n      : 0;\r\n  }\r\n\r\n  get canGoNext() {\r\n    return (\r\n      (this.hasLayers && this.index < this.layerLenght) ||\r\n      (this.index === this.layerLenght &&\r\n        this.addNew &&\r\n        !IsEmptyHelper.isEmpty(this.layer))\r\n    );\r\n  }\r\n\r\n  async ok(gotoIndex?: number) {\r\n    if (!this.reg.request.SnowProfile2) {\r\n      this.reg.request.SnowProfile2 = {};\r\n    }\r\n    if (!this.reg.request.SnowProfile2.SnowTemp) {\r\n      this.reg.request.SnowProfile2.SnowTemp = {};\r\n    }\r\n    if (!this.reg.request.SnowProfile2.SnowTemp.Layers) {\r\n      this.reg.request.SnowProfile2.SnowTemp.Layers = [];\r\n    }\r\n    if (this.addNew && !IsEmptyHelper.isEmpty(this.layer)) {\r\n      this.reg.request.SnowProfile2.SnowTemp.Layers.splice(\r\n        this.index,\r\n        0,\r\n        this.layer\r\n      );\r\n    }\r\n    await this.registrationService.saveRegistrationAsync(this.reg);\r\n\r\n    if (gotoIndex !== undefined) {\r\n      this.index = this.index + gotoIndex;\r\n      this.layer = this.reg.request.SnowProfile2.SnowTemp.Layers[this.index];\r\n      this.initLayer();\r\n    } else {\r\n      this.modalController.dismiss();\r\n    }\r\n  }\r\n\r\n  async cancel() {\r\n    await this.registrationService.saveRegistrationAsync(\r\n      this.initialRegistrationState\r\n    );\r\n    this.modalController.dismiss();\r\n  }\r\n\r\n  async delete() {\r\n    if (\r\n      this.reg &&\r\n      this.reg.request &&\r\n      this.reg.request.SnowProfile2 &&\r\n      this.reg.request.SnowProfile2.SnowTemp &&\r\n      this.reg.request.SnowProfile2.SnowTemp.Layers &&\r\n      this.reg.request.SnowProfile2.SnowTemp.Layers.length > 0\r\n    ) {\r\n      this.reg.request.SnowProfile2.SnowTemp.Layers = this.reg.request.SnowProfile2.SnowTemp.Layers.filter(\r\n        (l) => l !== this.layer\r\n      );\r\n      await this.registrationService.saveRegistrationAsync(this.reg);\r\n    }\r\n    this.modalController.dismiss({ delete: true });\r\n  }\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { SnowTempModalPage } from './snow-temp-modal.page';\r\nimport { SharedComponentsModule } from '../../../../../shared-components.module';\r\nimport { SnowTempLayerModalPageModule } from '../snow-temp-layer-modal/snow-temp-layer-modal.module';\r\n\r\n@NgModule({\r\n  imports: [SharedComponentsModule, SnowTempLayerModalPageModule],\r\n  declarations: [SnowTempModalPage],\r\n  entryComponents: [SnowTempModalPage]\r\n})\r\nexport class SnowTempModalPageModule {}\r\n","<ion-header>\r\n  <ion-toolbar appHeaderColor mode=\"ios\">\r\n    <ion-buttons slot=\"start\">\r\n      <ion-button (click)=\"cancel()\">{{ 'DIALOGS.CANCEL' | translate }}</ion-button>\r\n    </ion-buttons>\r\n    <ion-title>\r\n      {{ 'REGISTRATION.SNOW.SNOW_PROFILE.SNOW_TEMP.TITLE' | translate }}\r\n    </ion-title>\r\n  </ion-toolbar>\r\n</ion-header>\r\n<ion-content>\r\n  <form (ngSubmit)=\"ok()\">\r\n    <ion-list lines=\"full\">\r\n      <ion-list-header class=\"ion-text-uppercase\">\r\n        <ion-label>\r\n          {{ 'REGISTRATION.SNOW.SNOW_PROFILE.SNOW_TEMP.TITLE' | translate}}\r\n        </ion-label>\r\n      </ion-list-header>\r\n      <ion-item tabindex=\"0\" (click)=\"addOrEditLayer(i, layer)\" (keyup.enter)=\"addOrEditLayer(i, layer)\"\r\n        *ngFor=\"let layer of tempProfile.Layers; let i = index\">\r\n        <ion-label>\r\n          <ng-container *ngIf=\"layer.Depth !== undefined\">\r\n            {{layer.Depth | metersToCm }}cm\r\n          </ng-container>\r\n          <ng-container *ngIf=\"layer.SnowTemp !== undefined\">\r\n            {{layer.SnowTemp}}°C\r\n          </ng-container>\r\n        </ion-label>\r\n      </ion-item>\r\n      <ion-item tabindex=\"0\" (click)=\"addLayerBottom()\" (keyup.enter)=\"addLayerBottom()\">\r\n        <ion-icon color=\"primary\" name=\"add-circle-outline\" slot=\"start\"></ion-icon>\r\n        <ion-label>{{'REGISTRATION.SNOW.SNOW_PROFILE.SNOW_TEMP.ADD_LAYER_BOTTOM' | translate}}</ion-label>\r\n      </ion-item>\r\n    </ion-list>\r\n    <ion-grid class=\"ion-no-padding\">\r\n      <ion-row>\r\n        <ion-col size=\"6\" offset=\"3\">\r\n          <ion-button expand=\"block\" fill=\"solid\" color=\"primary\" type=\"submit\">\r\n            {{'DIALOGS.OK' | translate}}\r\n          </ion-button>\r\n        </ion-col>\r\n      </ion-row>\r\n    </ion-grid>\r\n  </form>\r\n</ion-content>","import { Component, OnInit, Input, OnDestroy, NgZone } from '@angular/core';\r\nimport {\r\n  SnowTempObsModel,\r\n} from '@varsom-regobs-common/regobs-api';\r\nimport { ModalController } from '@ionic/angular';\r\nimport { SnowTempLayerModalPage } from '../snow-temp-layer-modal/snow-temp-layer-modal.page';\r\nimport { IRegistration } from 'src/app/modules/common-registration/registration.models';\r\nimport { RegistrationService } from '../../../../../services/registration.service';\r\nimport { RegistrationService as CommonRegistrationService } from 'src/app/modules/common-registration/registration.services';\r\nimport cloneDeep from 'clone-deep';\r\nimport { Subject } from 'rxjs';\r\nimport { takeUntil } from 'rxjs/operators';\r\n\r\n@Component({\r\n  selector: 'app-snow-temp-modal',\r\n  templateUrl: './snow-temp-modal.page.html',\r\n  styleUrls: ['./snow-temp-modal.page.scss']\r\n})\r\nexport class SnowTempModalPage implements OnInit, OnDestroy {\r\n  @Input() regId: string;\r\n  private layerModal: HTMLIonModalElement;\r\n  private initialRegistrationClone: IRegistration;\r\n  private reg: IRegistration;\r\n\r\n  private ngDestroy$ = new Subject<void>();\r\n\r\n  get tempProfile() {\r\n    if (\r\n      this.reg &&\r\n      this.reg.request &&\r\n      this.reg.request.SnowProfile2 &&\r\n      this.reg.request.SnowProfile2.SnowTemp\r\n    ) {\r\n      return this.reg.request.SnowProfile2.SnowTemp;\r\n    }\r\n\r\n    return {};\r\n  }\r\n\r\n  get hasLayers() {\r\n    return (\r\n      this.tempProfile &&\r\n      this.tempProfile.Layers &&\r\n      this.tempProfile.Layers.length > 0\r\n    );\r\n  }\r\n\r\n  constructor(\r\n    private modalController: ModalController,\r\n    private registrationService: RegistrationService,\r\n    private commonRegistrationService: CommonRegistrationService,\r\n    private ngZone: NgZone\r\n  ) {}\r\n\r\n  ngOnInit() {\r\n    this.commonRegistrationService\r\n      .getRegistrationByIdShared$(this.regId)\r\n      .pipe(takeUntil(this.ngDestroy$))\r\n      .subscribe((reg) => {\r\n        this.ngZone.run(() => {\r\n          if (!this.initialRegistrationClone) {\r\n            this.initialRegistrationClone = cloneDeep(reg);\r\n          }\r\n          this.reg = reg;\r\n          if (!this.reg.request.SnowProfile2) {\r\n            this.reg.request.SnowProfile2 = {};\r\n          }\r\n          if (!this.reg.request.SnowProfile2.SnowTemp) {\r\n            this.reg.request.SnowProfile2.SnowTemp = {};\r\n          }\r\n          if (!this.reg.request.SnowProfile2.SnowTemp.Layers) {\r\n            this.reg.request.SnowProfile2.SnowTemp.Layers = [];\r\n          }\r\n          this.sortLayers();\r\n        });\r\n      });\r\n    this.initialRegistrationClone = cloneDeep(this.reg);\r\n  }\r\n\r\n  ngOnDestroy(): void {\r\n    this.ngDestroy$.next();\r\n    this.ngDestroy$.complete();\r\n  }\r\n\r\n  ok() {\r\n    this.modalController.dismiss(this.tempProfile);\r\n  }\r\n\r\n  async cancel() {\r\n    await this.registrationService.saveRegistrationAsync(\r\n      this.initialRegistrationClone\r\n    );\r\n    this.modalController.dismiss();\r\n  }\r\n\r\n  addLayerBottom() {\r\n    this.addOrEditLayer(\r\n      this.hasLayers ? this.tempProfile.Layers.length : 0,\r\n      undefined\r\n    );\r\n  }\r\n\r\n  async addOrEditLayer(index: number, layer: SnowTempObsModel) {\r\n    if (!this.layerModal) {\r\n      this.layerModal = await this.modalController.create({\r\n        component: SnowTempLayerModalPage,\r\n        componentProps: {\r\n          reg: this.reg,\r\n          layer,\r\n          index\r\n        }\r\n      });\r\n      this.layerModal.present();\r\n      await this.layerModal.onDidDismiss();\r\n      this.layerModal = null;\r\n      this.sortLayers();\r\n    }\r\n  }\r\n\r\n  private sortLayers() {\r\n    if (this.tempProfile && this.tempProfile.Layers) {\r\n      this.tempProfile.Layers = this.tempProfile.Layers.sort(\r\n        (a, b) => a.Depth - b.Depth\r\n      );\r\n    }\r\n  }\r\n}\r\n","<ion-item tabindex=\"0\" class=\"summary-item\" (click)=\"openModal()\" (keyup.enter)=\"openModal()\">\r\n  <ion-label class=\"ion-padding-vertical ion-padding-end\">\r\n    <h2>{{ 'REGISTRATION.SNOW.SNOW_PROFILE.SNOW_TEMP.TITLE' | translate}}</h2>\r\n    <p>\r\n      <ion-text *ngIf=\"!isEmpty else empty\">\r\n        {{tempProfile.Layers ? tempProfile.Layers.length : 0 }}\r\n        <ng-container *ngIf=\"tempProfile.Layers.length === 1 else multiple\">\r\n          {{'REGISTRATION.SNOW.SNOW_PROFILE.SNOW_TEMP.ONE_LAYER' | translate}}\r\n        </ng-container>\r\n      </ion-text>\r\n    </p>\r\n  </ion-label>\r\n  <ion-icon *ngIf=\"!isEmpty\" slot=\"end\" color=\"success\" name=\"checkmark-circle\"></ion-icon>\r\n</ion-item>\r\n<ng-template #empty>\r\n  {{'REGISTRATION.SNOW.SNOW_PROFILE.SNOW_TEMP.EMPTY' | translate}}\r\n</ng-template>\r\n<ng-template #multiple>\r\n  {{'REGISTRATION.SNOW.SNOW_PROFILE.SNOW_TEMP.MULTIPLE_LAYERS' | translate}}\r\n</ng-template>","import { Component, OnInit, Input } from '@angular/core';\r\nimport { IsEmptyHelper } from '../../../../../../core/helpers/is-empty.helper';\r\nimport { ModalController } from '@ionic/angular';\r\nimport { SnowTempModalPage } from './snow-temp-modal/snow-temp-modal.page';\r\nimport { IRegistration } from 'src/app/modules/common-registration/registration.models';\r\nimport { RegistrationService } from '../../../../services/registration.service';\r\nimport { isEmpty } from '@varsom-regobs-common/core';\r\n\r\n@Component({\r\n  selector: 'app-snow-temp',\r\n  templateUrl: './snow-temp.component.html',\r\n  styleUrls: ['./snow-temp.component.scss']\r\n})\r\nexport class SnowTempComponent implements OnInit {\r\n  @Input() reg: IRegistration;\r\n  private snowTempModal: HTMLIonModalElement;\r\n\r\n  get tempProfile() {\r\n    if (\r\n      this.reg &&\r\n      this.reg.request &&\r\n      this.reg.request.SnowProfile2 &&\r\n      this.reg.request.SnowProfile2.SnowTemp\r\n    ) {\r\n      return this.reg.request.SnowProfile2.SnowTemp;\r\n    }\r\n    return {};\r\n  }\r\n\r\n  get isEmpty() {\r\n    return isEmpty(this.tempProfile);\r\n  }\r\n\r\n  constructor(\r\n    private modalContoller: ModalController,\r\n    private registrationService: RegistrationService\r\n  ) {}\r\n\r\n  ngOnInit() {}\r\n\r\n  async openModal() {\r\n    if (!this.snowTempModal) {\r\n      await this.registrationService.saveRegistrationAsync(this.reg); // Save registration before open modal page\r\n      this.snowTempModal = await this.modalContoller.create({\r\n        component: SnowTempModalPage,\r\n        componentProps: {\r\n          regId: this.reg.id\r\n        }\r\n      });\r\n      this.snowTempModal.present();\r\n      await this.snowTempModal.onDidDismiss();\r\n      this.snowTempModal = null;\r\n    }\r\n  }\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { StratProfileLayerHistoryModalPage } from './strat-profile-layer-history-modal.page';\r\nimport { SharedComponentsModule } from '../../../../../shared-components.module';\r\n\r\n@NgModule({\r\n  imports: [SharedComponentsModule],\r\n  declarations: [StratProfileLayerHistoryModalPage],\r\n  entryComponents: [StratProfileLayerHistoryModalPage]\r\n})\r\nexport class StratProfileLayerHistoryModalPageModule {}\r\n","<ion-header>\r\n  <ion-toolbar appHeaderColor mode=\"ios\">\r\n    <ion-buttons slot=\"start\">\r\n      <ion-button (click)=\"cancel()\">{{ 'DIALOGS.CANCEL' | translate }}</ion-button>\r\n    </ion-buttons>\r\n    <ion-title>\r\n      {{ 'REGISTRATION.SNOW.SNOW_PROFILE.STRAT_PROFILE.FROM_OTHER_PROFILE' | translate }}\r\n    </ion-title>\r\n  </ion-toolbar>\r\n</ion-header>\r\n<ion-content>\r\n  <ion-list lines=\"full\" class=\"ion-no-margin\">\r\n    <ng-container *ngIf=\"($previousUsedLayers | async) as previousUsedLayers else loading\">\r\n      <ng-container *ngIf=\"previousUsedLayers.length > 0 else empty\">\r\n        <ion-item [detail]=\"true\" *ngFor=\"let item of previousUsedLayers\" tabindex=\"0\" (click)=\"selectLayer(item)\"\r\n          (keyup.enter)=\"selectLayer(item)\">\r\n          <ion-label>\r\n            {{ item.date | formatDate | async }} - ({{ item.layers.length }}\r\n            {{'REGISTRATION.SNOW.SNOW_PROFILE.STRAT_PROFILE.LAYER' | translate}})\r\n          </ion-label>\r\n        </ion-item>\r\n      </ng-container>\r\n    </ng-container>\r\n  </ion-list>\r\n</ion-content>\r\n<ng-template #loading>\r\n  <ion-item [detail]=\"true\">\r\n    <ion-label>\r\n      <ion-skeleton-text animated style=\"width: 40%\"></ion-skeleton-text> - <ion-skeleton-text animated\r\n        style=\"width: 20%\"></ion-skeleton-text>\r\n    </ion-label>\r\n  </ion-item>\r\n  <ion-item [detail]=\"true\">\r\n    <ion-label>\r\n      <ion-skeleton-text animated style=\"width: 30%\"></ion-skeleton-text> - <ion-skeleton-text animated\r\n        style=\"width: 20%\"></ion-skeleton-text>\r\n    </ion-label>\r\n  </ion-item>\r\n  <ion-item [detail]=\"true\">\r\n    <ion-label>\r\n      <ion-skeleton-text animated style=\"width: 60%\"></ion-skeleton-text> - <ion-skeleton-text animated\r\n        style=\"width: 20%\"></ion-skeleton-text>\r\n    </ion-label>\r\n  </ion-item>\r\n</ng-template>\r\n<ng-template #empty>\r\n  <ion-list-header class=\"ion-text-uppercase\">\r\n    <ion-label>\r\n      {{ 'REGISTRATION.SNOW.SNOW_PROFILE.STRAT_PROFILE.NO_PROFILES_FOUND' | translate }}\r\n    </ion-label>\r\n  </ion-list-header>\r\n</ng-template>","import { Component, OnInit, Input } from '@angular/core';\r\nimport { ModalController } from '@ionic/angular';\r\nimport { map, tap } from 'rxjs/operators';\r\nimport {\r\n  RegistrationViewModel,\r\n  StratProfileLayerViewModel,\r\n  SearchService\r\n} from '@varsom-regobs-common/regobs-api';\r\nimport { Observable, pipe } from 'rxjs';\r\nimport moment from 'moment';\r\nimport { GeoHazard } from '@varsom-regobs-common/core';\r\nimport { RegistrationTid, IRegistration } from 'src/app/modules/common-registration/registration.models';\r\nimport { RegistrationService } from '../../../../../services/registration.service';\r\n\r\n@Component({\r\n  selector: 'app-strat-profile-layer-history-modal',\r\n  templateUrl: './strat-profile-layer-history-modal.page.html',\r\n  styleUrls: ['./strat-profile-layer-history-modal.page.scss']\r\n})\r\nexport class StratProfileLayerHistoryModalPage implements OnInit {\r\n  @Input() reg: IRegistration;\r\n\r\n  isLoading = true;\r\n\r\n  $previousUsedLayers: Observable<\r\n    { id: number; date: string; layers: StratProfileLayerViewModel[] }[]\r\n  >;\r\n\r\n  constructor(\r\n    private modalController: ModalController,\r\n    private registrationService: RegistrationService,\r\n    private searchService: SearchService\r\n  ) {}\r\n\r\n  ngOnInit() {\r\n    if (this.reg && this.reg.request && this.reg.request.ObsLocation) {\r\n      this.$previousUsedLayers = this.searchService\r\n        .SearchSearch({\r\n          // ObserverGuid: this.observerGuid, TODO: Call \"my obervations\" in api instead\r\n          FromDtObsTime: moment().subtract(14, 'days').startOf('day').toISOString(),\r\n          Radius: {\r\n            Position: {\r\n              Latitude: this.reg.request.ObsLocation.Latitude,\r\n              Longitude: this.reg.request.ObsLocation.Longitude\r\n            },\r\n            Radius: 100000\r\n          },\r\n          SelectedGeoHazards: [GeoHazard.Snow],\r\n          SelectedRegistrationTypes: [\r\n            {\r\n              Id: RegistrationTid.SnowProfile2\r\n            }\r\n          ]\r\n        })\r\n        .pipe(\r\n          map((result) => this.getLayersFromSearchResult(result)),\r\n          tap(() => {\r\n            this.isLoading = false;\r\n          })\r\n        );\r\n    }\r\n  }\r\n\r\n  cancel() {\r\n    this.modalController.dismiss();\r\n  }\r\n\r\n  async selectLayer(item: {\r\n    id: number;\r\n    date: string;\r\n    layers: StratProfileLayerViewModel[];\r\n  }) {\r\n    if (!this.reg.request.SnowProfile2) {\r\n      this.reg.request.SnowProfile2 = {};\r\n    }\r\n\r\n    if (!this.reg.request.SnowProfile2.StratProfile) {\r\n      this.reg.request.SnowProfile2.StratProfile = {};\r\n    }\r\n    this.reg.request.SnowProfile2.StratProfile.Layers = item.layers;\r\n    await this.registrationService.saveRegistrationAsync(this.reg);\r\n    this.modalController.dismiss();\r\n  }\r\n\r\n  private getLayersFromSearchResult(\r\n    result: RegistrationViewModel[]\r\n  ): { id: number; date: string; layers: StratProfileLayerViewModel[] }[] {\r\n    return result\r\n      .map((reg) => {\r\n        if (\r\n          reg.SnowProfile2 !== undefined &&\r\n          reg.SnowProfile2.StratProfile !== undefined &&\r\n          reg.SnowProfile2.StratProfile !== null &&\r\n          reg.SnowProfile2.StratProfile.Layers !== undefined &&\r\n          reg.SnowProfile2.StratProfile.Layers !== null &&\r\n          reg.SnowProfile2.StratProfile.Layers.length > 0\r\n        ) {\r\n          return {\r\n            id: reg.RegId,\r\n            date: reg.DtObsTime,\r\n            layers: reg.SnowProfile2.StratProfile.Layers\r\n          };\r\n        }\r\n        return null;\r\n      })\r\n      .filter((x) => x !== null);\r\n  }\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { StratProfileLayerModalPage } from './strat-profile-layer-modal.page';\r\nimport { SharedComponentsModule } from '../../../../../shared-components.module';\r\n\r\n@NgModule({\r\n  imports: [SharedComponentsModule],\r\n  declarations: [StratProfileLayerModalPage],\r\n  entryComponents: [StratProfileLayerModalPage]\r\n})\r\nexport class StratProfileLayerModalPageModule {}\r\n","<ion-header>\r\n  <ion-toolbar appHeaderColor mode=\"ios\">\r\n    <ion-buttons slot=\"start\">\r\n      <ion-button (click)=\"cancel()\">{{ 'DIALOGS.CANCEL' | translate }}</ion-button>\r\n    </ion-buttons>\r\n    <ion-title>\r\n      {{ 'REGISTRATION.SNOW.SNOW_PROFILE.STRAT_PROFILE.TITLE' | translate }}\r\n    </ion-title>\r\n  </ion-toolbar>\r\n</ion-header>\r\n<ion-content>\r\n  <form (ngSubmit)=\"ok()\">\r\n    <ion-list lines=\"full\" class=\"ion-no-margin\">\r\n      <ion-list-header class=\"ion-text-uppercase\">\r\n        <ion-label>\r\n          {{ 'REGISTRATION.SNOW.SNOW_PROFILE.STRAT_PROFILE.LAYER' | translate}}\r\n        </ion-label>\r\n      </ion-list-header>\r\n      <app-numeric-input [(value)]=\"layer.Thickness\" title=\"REGISTRATION.SNOW.SNOW_PROFILE.STRAT_PROFILE.THICKNESS\"\r\n        [min]=\"0\" suffix=\"cm\" [decimalPlaces]=\"2\" [convertRatio]=\"100\">\r\n      </app-numeric-input>\r\n      <app-kdv-select title=\"REGISTRATION.SNOW.SNOW_PROFILE.STRAT_PROFILE.HARDNESS\" kdvKey=\"Snow_HardnessKDV\"\r\n        [(value)]=\"layer.HardnessTID\" [filter]=\"hardnessFilter\"></app-kdv-select>\r\n      <app-kdv-select title=\"REGISTRATION.SNOW.SNOW_PROFILE.STRAT_PROFILE.GRAIN_FORM\" kdvKey=\"Snow_GrainFormKDV\"\r\n        [(value)]=\"layer.GrainFormPrimaryTID\" [filter]=\"grainFormFilter\" [getIconFunc]=\"getIconFunc\">\r\n      </app-kdv-select>\r\n      <ion-item>\r\n        <ion-label color=\"medium\" position=\"stacked\" class=\"ion-text-uppercase\">\r\n          {{ 'REGISTRATION.SNOW.SNOW_PROFILE.STRAT_PROFILE.SIZE' | translate }}</ion-label>\r\n        <app-select [(selectedValue)]=\"layer.GrainSizeAvg\" [options]=\"grainSizeOptions\"\r\n          title=\"REGISTRATION.SNOW.SNOW_PROFILE.STRAT_PROFILE.SIZE\">\r\n        </app-select>\r\n      </ion-item>\r\n      <app-kdv-select title=\"REGISTRATION.SNOW.SNOW_PROFILE.STRAT_PROFILE.WETNESS\" kdvKey=\"Snow_WetnessKDV\"\r\n        [(value)]=\"layer.WetnessTID\" [filter]=\"wetnessFilter\">\r\n      </app-kdv-select>\r\n    </ion-list>\r\n    <ion-button (click)=\"toggleShowMore()\" fill=\"clear\" expand=\"full\">\r\n      <ion-icon slot=\"start\" [name]=\"showMore ? 'chevron-up' : 'chevron-down'\"></ion-icon>\r\n      <ng-container *ngIf=\"showMore\">{{ 'REGISTRATION.SNOW.SNOW_PROFILE.STRAT_PROFILE.SHOW_LESS' | translate  }}\r\n      </ng-container>\r\n      <ng-container *ngIf=\"!showMore\">{{ 'REGISTRATION.SNOW.SNOW_PROFILE.STRAT_PROFILE.SHOW_MORE' | translate  }}\r\n      </ng-container>\r\n    </ion-button>\r\n    <ion-list lines=\"full\" *ngIf=\"showMore\">\r\n      <app-kdv-select title=\"REGISTRATION.SNOW.SNOW_PROFILE.STRAT_PROFILE.HARDNESS_BOTTOM\" kdvKey=\"Snow_HardnessKDV\"\r\n        [(value)]=\"layer.HardnessBottomTID\">\r\n      </app-kdv-select>\r\n      <app-kdv-select title=\"REGISTRATION.SNOW.SNOW_PROFILE.STRAT_PROFILE.GRAIN_FROM_SECONDARY\"\r\n        kdvKey=\"Snow_GrainFormKDV\" [(value)]=\"layer.GrainFormSecondaryTID\" [getIconFunc]=\"getIconFunc\">\r\n      </app-kdv-select>\r\n      <ion-item>\r\n        <ion-label color=\"medium\" position=\"stacked\" class=\"ion-text-uppercase\">\r\n          {{ 'REGISTRATION.SNOW.SNOW_PROFILE.STRAT_PROFILE.MAX_GRAIN_SIZE' | translate }}</ion-label>\r\n        <app-select [(selectedValue)]=\"layer.GrainSizeAvgMax\" [options]=\"grainSizeOptions\"\r\n          title=\"REGISTRATION.SNOW.SNOW_PROFILE.STRAT_PROFILE.MAX_GRAIN_SIZE\">\r\n        </app-select>\r\n      </ion-item>\r\n      <app-kdv-select title=\"REGISTRATION.SNOW.SNOW_PROFILE.STRAT_PROFILE.CRITICAL_LAYER\" kdvKey=\"Snow_CriticalLayerKDV\"\r\n        [(value)]=\"layer.CriticalLayerTID\">\r\n      </app-kdv-select>\r\n      <app-text-comment title=\"DIALOGS.COMMENT\" [(value)]=\"layer.Comment\"></app-text-comment>\r\n    </ion-list>\r\n    <ion-grid class=\"ion-no-padding\">\r\n      <ion-row>\r\n        <ion-col size=\"6\">\r\n          <ion-button [disabled]=\"index === 0\" expand=\"block\" fill=\"outline\" color=\"primary\" (click)=\"ok(-1)\">\r\n            <ion-icon slot=\"start\" name=\"arrow-back\"></ion-icon>\r\n            <ion-text>{{ 'DIALOGS.PREVIOUS' | translate }}\r\n              {{ 'REGISTRATION.SNOW.SNOW_PROFILE.STRAT_PROFILE.LAYER' | translate | lowercase }} </ion-text>\r\n          </ion-button>\r\n        </ion-col>\r\n        <ion-col size=\"6\">\r\n          <ion-button [disabled]=\"!canGoNext\" expand=\"block\" fill=\"outline\" color=\"primary\" (click)=\"ok(1)\">\r\n            <ion-icon slot=\"end\" name=\"arrow-forward\"></ion-icon>\r\n            <ion-text>{{ 'DIALOGS.NEXT' | translate }}\r\n              {{ 'REGISTRATION.SNOW.SNOW_PROFILE.STRAT_PROFILE.LAYER' | translate | lowercase }}</ion-text>\r\n          </ion-button>\r\n        </ion-col>\r\n      </ion-row>\r\n      <ion-row>\r\n        <ion-col size=\"12\">\r\n          <ion-button type=\"submit\" expand=\"block\" fill=\"solid\" color=\"primary\">\r\n            {{ 'DIALOGS.OK_BACK' | translate }}\r\n          </ion-button>\r\n        </ion-col>\r\n      </ion-row>\r\n      <ion-row *ngIf=\"!addNew\">\r\n        <ion-col size=\"6\" offset=\"3\">\r\n          <ion-button (click)=\"delete()\" size=\"small\" fill=\"clear\" expand=\"block\">\r\n            <ion-icon slot=\"start\" name=\"trash\"></ion-icon>\r\n            {{ 'DIALOGS.DELETE' | translate }}\r\n          </ion-button>\r\n        </ion-col>\r\n      </ion-row>\r\n    </ion-grid>\r\n  </form>\r\n</ion-content>","import { Component, OnInit, Input } from '@angular/core';\r\nimport { ModalController } from '@ionic/angular';\r\nimport {\r\n  StratProfileLayerEditModel,\r\n  KdvElement\r\n} from '@varsom-regobs-common/regobs-api';\r\nimport { TranslateService } from '@ngx-translate/core';\r\nimport { SelectOption } from '../../../../../../shared/components/input/select/select-option.model';\r\nimport { IRegistration } from 'src/app/modules/common-registration/registration.models';\r\nimport { RegistrationService } from '../../../../../services/registration.service';\r\nimport { IsEmptyHelper } from '../../../../../../../core/helpers/is-empty.helper';\r\nimport cloneDeep from 'clone-deep';\r\n\r\nconst basicHardnessValues = [2, 6, 10, 14, 18, 21];\r\nconst basicGrainFormValues = [1, 14, 17, 22, 26, 32, 36, 40, 41];\r\nconst basicWetnessValues = [1, 3, 5, 7, 9];\r\n\r\n@Component({\r\n  selector: 'app-strat-profile-layer-modal',\r\n  templateUrl: './strat-profile-layer-modal.page.html',\r\n  styleUrls: ['./strat-profile-layer-modal.page.scss']\r\n})\r\nexport class StratProfileLayerModalPage implements OnInit {\r\n  @Input() layer: StratProfileLayerEditModel;\r\n  @Input() reg: IRegistration;\r\n  @Input() index: number;\r\n\r\n  addNew: boolean;\r\n  private initialRegistationState: IRegistration;\r\n\r\n  grainSizeInterfaceOptions: any;\r\n  showMore = false;\r\n  hardnessFilter: (id: number) => boolean;\r\n  grainFormFilter: (id: number) => boolean;\r\n  wetnessFilter: (id: number) => boolean;\r\n\r\n  get hasLayers() {\r\n    return (\r\n      this.reg &&\r\n      this.reg.request &&\r\n      this.reg.request.SnowProfile2 &&\r\n      this.reg.request.SnowProfile2.StratProfile &&\r\n      this.reg.request.SnowProfile2.StratProfile.Layers &&\r\n      this.reg.request.SnowProfile2.StratProfile.Layers.length > 0\r\n    );\r\n  }\r\n\r\n  get layerLenght() {\r\n    return this.hasLayers\r\n      ? this.reg.request.SnowProfile2.StratProfile.Layers.length\r\n      : 0;\r\n  }\r\n\r\n  get canGoNext() {\r\n    return (\r\n      (this.hasLayers && this.index < this.layerLenght) ||\r\n      (this.index === this.layerLenght &&\r\n        this.addNew &&\r\n        !IsEmptyHelper.isEmpty(this.layer))\r\n    );\r\n  }\r\n\r\n  grainSizeOptions: SelectOption[] = [\r\n    { id: 0.001, text: '.1' },\r\n    { id: 0.003, text: '.3' },\r\n    { id: 0.005, text: '.5' },\r\n    { id: 0.007, text: '.7' },\r\n    { id: 0.01, text: '1' },\r\n    { id: 0.015, text: '1.5' },\r\n    { id: 0.02, text: '2' },\r\n    { id: 0.025, text: '2.5' },\r\n    { id: 0.03, text: '3' },\r\n    { id: 0.035, text: '3.5' },\r\n    { id: 0.04, text: '4' },\r\n    { id: 0.045, text: '4.5' },\r\n    { id: 0.05, text: '5' },\r\n    { id: 0.055, text: '5.5' },\r\n    { id: 0.06, text: '6' },\r\n    { id: 0.08, text: '8' },\r\n    { id: 0.1, text: '10' }\r\n  ];\r\n\r\n  getIconFunc = (kdvElement: KdvElement) =>\r\n    `md-grainform-${((kdvElement || {}).Name || '').toLowerCase()}`;\r\n\r\n  constructor(\r\n    private modalController: ModalController,\r\n    private translateService: TranslateService,\r\n    private registrationService: RegistrationService\r\n  ) {}\r\n\r\n  ngOnInit() {\r\n    this.initialRegistationState = cloneDeep(this.reg);\r\n    this.initLayer();\r\n    this.translateService\r\n      .get('REGISTRATION.SNOW.SNOW_PROFILE.STRAT_PROFILE.SIZE')\r\n      .subscribe((val) => {\r\n        this.grainSizeInterfaceOptions = {\r\n          header: val\r\n        };\r\n      });\r\n  }\r\n\r\n  private initLayer() {\r\n    this.addNew = this.layer === undefined;\r\n    if (this.addNew) {\r\n      this.layer = {};\r\n    }\r\n    this.showMore = this.hasAnyAdvancedOptions();\r\n    this.updateFilters();\r\n  }\r\n\r\n  private hasAnyAdvancedOptions() {\r\n    return (\r\n      this.layer.HardnessBottomTID > 0 ||\r\n      this.layer.GrainSizeAvgMax > 0 ||\r\n      this.layer.GrainFormSecondaryTID > 0 ||\r\n      this.layer.CriticalLayerTID > 0 ||\r\n      !!this.layer.Comment\r\n    );\r\n  }\r\n\r\n  async save() {\r\n    await this.registrationService.saveRegistrationAsync(this.reg);\r\n  }\r\n\r\n  async ok(gotoIndex?: number) {\r\n    if (!this.reg.request.SnowProfile2) {\r\n      this.reg.request.SnowProfile2 = {};\r\n    }\r\n    if (!this.reg.request.SnowProfile2.StratProfile) {\r\n      this.reg.request.SnowProfile2.StratProfile = {};\r\n    }\r\n    if (!this.reg.request.SnowProfile2.StratProfile.Layers) {\r\n      this.reg.request.SnowProfile2.StratProfile.Layers = [];\r\n    }\r\n    if (this.addNew && !IsEmptyHelper.isEmpty(this.layer)) {\r\n      this.reg.request.SnowProfile2.StratProfile.Layers.splice(\r\n        this.index,\r\n        0,\r\n        this.layer\r\n      );\r\n    }\r\n    await this.save();\r\n\r\n    if (gotoIndex !== undefined) {\r\n      this.index = this.index + gotoIndex;\r\n      this.layer = this.reg.request.SnowProfile2.StratProfile.Layers[\r\n        this.index\r\n      ];\r\n      this.initLayer();\r\n    } else {\r\n      this.modalController.dismiss();\r\n    }\r\n  }\r\n\r\n  async cancel() {\r\n    await this.registrationService.saveRegistrationAsync(\r\n      this.initialRegistationState\r\n    );\r\n    this.modalController.dismiss();\r\n  }\r\n\r\n  async delete() {\r\n    if (\r\n      this.reg &&\r\n      this.reg.request &&\r\n      this.reg.request.SnowProfile2 &&\r\n      this.reg.request.SnowProfile2.StratProfile &&\r\n      this.reg.request.SnowProfile2.StratProfile.Layers &&\r\n      this.reg.request.SnowProfile2.StratProfile.Layers.length > 0\r\n    ) {\r\n      this.reg.request.SnowProfile2.StratProfile.Layers = this.reg.request.SnowProfile2.StratProfile.Layers.filter(\r\n        (l) => l !== this.layer\r\n      );\r\n      await this.save();\r\n    }\r\n    this.modalController.dismiss();\r\n  }\r\n\r\n  toggleShowMore() {\r\n    this.showMore = !this.showMore;\r\n    this.updateFilters();\r\n  }\r\n\r\n  private updateFilters() {\r\n    this.setHardnessFilter();\r\n    this.setGrainFormFilter();\r\n    this.setWetnessFilter();\r\n  }\r\n\r\n  private setHardnessFilter() {\r\n    this.hardnessFilter = this.showMore\r\n      ? undefined\r\n      : (n) => basicHardnessValues.indexOf(n) >= 0;\r\n  }\r\n\r\n  private setGrainFormFilter() {\r\n    this.grainFormFilter = this.showMore\r\n      ? undefined\r\n      : (n) => basicGrainFormValues.indexOf(n) >= 0;\r\n  }\r\n\r\n  private setWetnessFilter() {\r\n    this.wetnessFilter = this.showMore\r\n      ? undefined\r\n      : (n) => basicWetnessValues.indexOf(n) >= 0;\r\n  }\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { StratProfileModalPage } from './strat-profile-modal.page';\r\nimport { SharedComponentsModule } from '../../../../../shared-components.module';\r\nimport { StratProfileLayerModalPageModule } from '../strat-profile-layer-modal/strat-profile-layer-modal.module';\r\nimport { StratProfileLayerHistoryModalPageModule } from '../strat-profile-layer-history-modal/strat-profile-layer-history-modal.module';\r\n\r\n@NgModule({\r\n  imports: [\r\n    SharedComponentsModule,\r\n    StratProfileLayerModalPageModule,\r\n    StratProfileLayerHistoryModalPageModule\r\n  ],\r\n  declarations: [StratProfileModalPage],\r\n  entryComponents: [StratProfileModalPage]\r\n})\r\nexport class StratProfileModalPageModule {}\r\n","<ion-header>\r\n  <ion-toolbar appHeaderColor mode=\"ios\">\r\n    <ion-buttons slot=\"start\">\r\n      <ion-button (click)=\"cancel()\">{{ 'DIALOGS.CANCEL' | translate }}</ion-button>\r\n    </ion-buttons>\r\n    <ion-title>\r\n      {{ 'REGISTRATION.SNOW.SNOW_PROFILE.STRAT_PROFILE.TITLE' | translate }}\r\n    </ion-title>\r\n  </ion-toolbar>\r\n</ion-header>\r\n\r\n<ion-content>\r\n  <form (ngSubmit)=\"ok()\">\r\n    <ion-list lines=\"full\">\r\n      <ion-list-header class=\"ion-text-uppercase\">\r\n        <ion-label>\r\n          {{ 'REGISTRATION.SNOW.SNOW_PROFILE.STRAT_PROFILE.FROM_OTHER_PROFILE' | translate}}\r\n        </ion-label>\r\n      </ion-list-header>\r\n      <ion-item tabindex=\"0\" (click)=\"getPrevousUsedLayers()\" (keyup.enter)=\"getPrevousUsedLayers()\">\r\n        <ion-icon color=\"dark\" name=\"cloud-download\" slot=\"start\"></ion-icon>\r\n        <ion-label>{{'REGISTRATION.SNOW.SNOW_PROFILE.STRAT_PROFILE.OTHER_PROFILE_ITEM_TEXT' | translate }}</ion-label>\r\n      </ion-item>\r\n      <ion-item-divider>\r\n        <ion-label class=\"ion-text-wrap\">\r\n          {{'REGISTRATION.SNOW.SNOW_PROFILE.STRAT_PROFILE.OTHER_PROFILE_DESCRIPTION' | translate }}\r\n        </ion-label>\r\n      </ion-item-divider>\r\n      <ion-list-header class=\"ion-text-uppercase\">\r\n        <ion-label>\r\n          {{ 'REGISTRATION.SNOW.SNOW_PROFILE.STRAT_PROFILE.TITLE' | translate}}\r\n        </ion-label>\r\n      </ion-list-header>\r\n      <ng-container *ngIf=\"hasLayers else noLayers\">\r\n        <ion-item tabindex=\"0\" (click)=\"addLayerTop()\" (keyup.enter)=\"addLayerTop()\">\r\n          <ion-icon color=\"primary\" name=\"add-circle-outline\" slot=\"start\"></ion-icon>\r\n          <ion-label>{{'REGISTRATION.SNOW.SNOW_PROFILE.STRAT_PROFILE.ADD_LAYER_TOP' | translate}}</ion-label>\r\n        </ion-item>\r\n        <ion-reorder-group disabled=\"false\" (ionItemReorder)=\"onLayerReorder($event)\">\r\n          <ion-item tabindex=\"0\" (click)=\"addOrEditLayer(i, layer)\" (keyup.enter)=\"addOrEditLayer(i, layer)\"\r\n            *ngFor=\"let layer of profile.Layers; let i = index\">\r\n            <ion-label [color]=\"layer.CriticalLayerTID > 0 ? 'danger' : 'dark'\">\r\n              <ng-container *ngIf=\"layer.Thickness !== undefined\">\r\n                {{layer.Thickness | metersToCm}}cm\r\n              </ng-container>\r\n              <ng-container *ngIf=\"layer.HardnessTID !== undefined\">\r\n                {{layer.HardnessTID | kdvDescription: 'Snow_HardnessKDV' | async}}\r\n              </ng-container>\r\n              <ng-container *ngIf=\"layer.GrainFormPrimaryTID !== undefined\">\r\n                {{layer.GrainFormPrimaryTID | kdvDescription: 'Snow_GrainFormKDV' | async}}\r\n              </ng-container>\r\n              <ng-container *ngIf=\"layer.GrainSizeAvg !== undefined\">\r\n                {{layer.GrainSizeAvg * 100 | number:'1.0-2' }}mm\r\n              </ng-container>\r\n              <ng-container *ngIf=\"layer.WetnessTID !== undefined\">\r\n                {{layer.WetnessTID | kdvDescription: 'Snow_WetnessKDV' | async }}\r\n              </ng-container>\r\n            </ion-label>\r\n            <ion-reorder slot=\"end\"></ion-reorder>\r\n          </ion-item>\r\n        </ion-reorder-group>\r\n        <ion-item tabindex=\"0\" (click)=\"addLayerBottom()\" (keyup.enter)=\"addLayerBottom()\">\r\n          <ion-icon color=\"primary\" name=\"add-circle-outline\" slot=\"start\"></ion-icon>\r\n          <ion-label>{{'REGISTRATION.SNOW.SNOW_PROFILE.STRAT_PROFILE.ADD_LAYER_BOTTOM' | translate}}</ion-label>\r\n        </ion-item>\r\n      </ng-container>\r\n      <ng-container *ngIf=\"hasLayers\">\r\n        <ion-list-header class=\"ion-text-uppercase\">\r\n          <ion-label>\r\n            {{ 'REGISTRATION.SUMMARY' | translate}}\r\n          </ion-label>\r\n        </ion-list-header>\r\n        <ion-item>\r\n          <ion-label color=\"medium\" position=\"stacked\" class=\"ion-text-uppercase\">{{'REGISTRATION.SNOW.SNOW_PROFILE.STRAT_PROFILE.TOTAL_THICKNESS'\r\n            | translate}}</ion-label>\r\n          <ion-text class=\"ion-align-self-start ion-text-wrap ion-margin-bottom\">\r\n            <p class=\"ion-no-margin\" *ngIf=\"totalThickness !== undefined\">{{ totalThickness | metersToCm }} cm</p>\r\n          </ion-text>\r\n        </ion-item>\r\n      </ng-container>\r\n    </ion-list>\r\n    <ion-grid class=\"ion-no-padding\">\r\n      <ion-row>\r\n        <ion-col size=\"6\" offset=\"3\">\r\n          <ion-button type=\"submit\" expand=\"block\" fill=\"solid\" color=\"primary\">\r\n            {{'DIALOGS.OK' | translate}}\r\n          </ion-button>\r\n        </ion-col>\r\n      </ion-row>\r\n    </ion-grid>\r\n  </form>\r\n</ion-content>\r\n<ng-template #noLayers>\r\n  <ion-item tabindex=\"0\" (click)=\"addLayerBottom()\" (keyup.enter)=\"addLayerBottom()\">\r\n    <ion-icon color=\"primary\" name=\"add-circle-outline\" slot=\"start\"></ion-icon>\r\n    <ion-label>{{'REGISTRATION.SNOW.SNOW_PROFILE.STRAT_PROFILE.ADD_LAYER' | translate}}</ion-label>\r\n  </ion-item>\r\n</ng-template>","import { Component, OnInit, Input, OnDestroy, NgZone } from '@angular/core';\r\nimport { ModalController } from '@ionic/angular';\r\nimport {\r\n  StratProfileEditModel,\r\n  StratProfileLayerEditModel\r\n} from '@varsom-regobs-common/regobs-api';\r\nimport { StratProfileLayerModalPage } from '../strat-profile-layer-modal/strat-profile-layer-modal.page';\r\nimport { ItemReorderEventDetail } from '@ionic/core';\r\nimport { ArrayHelper } from '../../../../../../../core/helpers/array-helper';\r\nimport { StratProfileLayerHistoryModalPage } from '../strat-profile-layer-history-modal/strat-profile-layer-history-modal.page';\r\nimport { IRegistration } from 'src/app/modules/common-registration/registration.models';\r\nimport { RegistrationService as CommonRegistrationService } from 'src/app/modules/common-registration/registration.services';\r\nimport { RegistrationService } from '../../../../../services/registration.service';\r\nimport { Subject } from 'rxjs';\r\nimport { takeUntil } from 'rxjs/operators';\r\nimport cloneDeep from 'clone-deep';\r\nimport { RegobsAuthService } from '../../../../../../auth/services/regobs-auth.service';\r\n\r\n@Component({\r\n  selector: 'app-strat-profile-modal',\r\n  templateUrl: './strat-profile-modal.page.html',\r\n  styleUrls: ['./strat-profile-modal.page.scss']\r\n})\r\nexport class StratProfileModalPage implements OnInit, OnDestroy {\r\n  @Input() regId: string;\r\n\r\n  reg: IRegistration;\r\n\r\n  private regInitClone: IRegistration;\r\n  totalThickness: number;\r\n\r\n  private ngDestroy$ = new Subject<void>();\r\n\r\n  private layerModal: HTMLIonModalElement;\r\n\r\n  get hasLayers(): boolean {\r\n    return this.profile.Layers && this.profile.Layers.length > 0;\r\n  }\r\n\r\n  get profile(): StratProfileEditModel {\r\n    if (\r\n      this.reg &&\r\n      this.reg.request &&\r\n      this.reg.request.SnowProfile2 &&\r\n      this.reg.request.SnowProfile2.StratProfile\r\n    ) {\r\n      return this.reg.request.SnowProfile2.StratProfile;\r\n    }\r\n    return {};\r\n  }\r\n\r\n  constructor(\r\n    private modalController: ModalController,\r\n    private regobsAuthService: RegobsAuthService,\r\n    private ngZone: NgZone,\r\n    private registrationService: RegistrationService,\r\n    private commonRegistrationService: CommonRegistrationService,\r\n  ) {}\r\n\r\n  ngOnInit(): void {\r\n    this.commonRegistrationService\r\n      .getRegistrationByIdShared$(this.regId)\r\n      .pipe(takeUntil(this.ngDestroy$))\r\n      .subscribe((reg) => {\r\n        this.ngZone.run(() => {\r\n          if (!this.regInitClone) {\r\n            this.regInitClone = cloneDeep(reg);\r\n          }\r\n          this.reg = reg;\r\n          this.calculate();\r\n        });\r\n      });\r\n  }\r\n\r\n  ngOnDestroy(): void {\r\n    this.ngDestroy$.next();\r\n    this.ngDestroy$.complete();\r\n  }\r\n\r\n  async ok(): Promise<void> {\r\n    await this.registrationService.saveRegistrationAsync(this.reg);\r\n    this.modalController.dismiss();\r\n  }\r\n\r\n  async cancel(): Promise<void> {\r\n    await this.registrationService.saveRegistrationAsync(this.regInitClone); // Reset to inital state\r\n    this.modalController.dismiss();\r\n  }\r\n\r\n  addLayerTop(): void {\r\n    this.addOrEditLayer(0, undefined);\r\n  }\r\n\r\n  addLayerBottom(): void {\r\n    this.addOrEditLayer(\r\n      this.hasLayers\r\n        ? this.reg.request.SnowProfile2.StratProfile.Layers.length\r\n        : 0,\r\n      undefined\r\n    );\r\n  }\r\n\r\n  onLayerReorder(event: CustomEvent<ItemReorderEventDetail>): void {\r\n    this.reg.request.SnowProfile2.StratProfile.Layers = ArrayHelper.reorderList(\r\n      this.reg.request.SnowProfile2.StratProfile.Layers,\r\n      event.detail.from,\r\n      event.detail.to\r\n    );\r\n    event.detail.complete();\r\n    this.registrationService.saveRegistrationAsync(this.reg);\r\n  }\r\n\r\n  async getPrevousUsedLayers(): Promise<void> {\r\n    const loggedInUser = await this.regobsAuthService.getLoggedInUserAsPromise();\r\n    if (loggedInUser && loggedInUser.isLoggedIn) {\r\n      if (!this.layerModal) {\r\n        this.layerModal = await this.modalController.create({\r\n          component: StratProfileLayerHistoryModalPage,\r\n          componentProps: {\r\n            reg: this.reg\r\n          }\r\n        });\r\n        this.layerModal.present();\r\n        await this.layerModal.onDidDismiss();\r\n        this.layerModal = null;\r\n        this.calculate();\r\n      }\r\n    } else {\r\n      this.regobsAuthService.signIn();\r\n    }\r\n  }\r\n\r\n  async addOrEditLayer(index: number, layer: StratProfileLayerEditModel): Promise<void> {\r\n    if (!this.layerModal) {\r\n      this.layerModal = await this.modalController.create({\r\n        component: StratProfileLayerModalPage,\r\n        componentProps: {\r\n          reg: this.reg,\r\n          layer,\r\n          index\r\n        }\r\n      });\r\n      this.layerModal.present();\r\n      await this.layerModal.onDidDismiss();\r\n      this.layerModal = null;\r\n    }\r\n  }\r\n\r\n  private calculate(): void {\r\n    const layers = this.profile.Layers || [];\r\n    const sum = layers\r\n      .filter((x) => x.Thickness !== undefined)\r\n      .map((layer) => layer.Thickness)\r\n      .reduce((pv, cv) => pv + cv, 0);\r\n    this.totalThickness = sum;\r\n  }\r\n}\r\n","<ion-item tabindex=\"0\" class=\"summary-item\" (click)=\"openModal()\" (keyup.enter)=\"openModal()\">\r\n  <ion-label class=\"ion-padding-vertical ion-padding-end\">\r\n    <h2>{{ 'REGISTRATION.SNOW.SNOW_PROFILE.STRAT_PROFILE.TITLE' | translate}}</h2>\r\n    <p>\r\n      <ion-text *ngIf=\"!isEmpty else empty\">{{profile.Layers ? profile.Layers.length : 0 }}\r\n        <ng-container *ngIf=\"profile.Layers.length === 1 else multiple\">\r\n          {{'REGISTRATION.SNOW.SNOW_PROFILE.STRAT_PROFILE.ONE_LAYER' | translate}}\r\n        </ng-container>\r\n      </ion-text>\r\n    </p>\r\n  </ion-label>\r\n  <ion-icon *ngIf=\"!isEmpty\" slot=\"end\" color=\"success\" name=\"checkmark-circle\"></ion-icon>\r\n</ion-item>\r\n<ng-template #empty>\r\n  {{'REGISTRATION.SNOW.SNOW_PROFILE.STRAT_PROFILE.EMPTY' | translate}}\r\n</ng-template>\r\n<ng-template #multiple>\r\n  {{'REGISTRATION.SNOW.SNOW_PROFILE.STRAT_PROFILE.MULTIPLE_LAYERS' | translate}}\r\n</ng-template>","import { Component, OnInit, Input } from '@angular/core';\r\nimport { IsEmptyHelper } from '../../../../../../core/helpers/is-empty.helper';\r\nimport { ModalController } from '@ionic/angular';\r\nimport { StratProfileModalPage } from './strat-profile-modal/strat-profile-modal.page';\r\nimport { IRegistration } from 'src/app/modules/common-registration/registration.models';\r\nimport { RegistrationService } from '../../../../services/registration.service';\r\nimport { StratProfileEditModel } from '@varsom-regobs-common/regobs-api';\r\n\r\n@Component({\r\n  selector: 'app-strat-profile',\r\n  templateUrl: './strat-profile.component.html',\r\n  styleUrls: ['./strat-profile.component.scss']\r\n})\r\nexport class StratProfileComponent implements OnInit {\r\n  @Input() reg: IRegistration;\r\n\r\n  private modal: HTMLIonModalElement;\r\n\r\n  get profile(): StratProfileEditModel {\r\n    if (\r\n      this.reg &&\r\n      this.reg.request &&\r\n      this.reg.request.SnowProfile2 &&\r\n      this.reg.request.SnowProfile2.StratProfile\r\n    ) {\r\n      return this.reg.request.SnowProfile2.StratProfile;\r\n    }\r\n    return {};\r\n  }\r\n\r\n  get isEmpty() {\r\n    return IsEmptyHelper.isEmpty(this.profile);\r\n  }\r\n\r\n  constructor(\r\n    private modalContoller: ModalController,\r\n    private registrationService: RegistrationService\r\n  ) {}\r\n\r\n  ngOnInit() {}\r\n\r\n  async openModal() {\r\n    if (!this.modal) {\r\n      await this.registrationService.saveRegistrationAsync(this.reg); // Save registration before open modal page\r\n      this.modal = await this.modalContoller.create({\r\n        component: StratProfileModalPage,\r\n        componentProps: {\r\n          regId: this.reg.id\r\n        }\r\n      });\r\n      this.modal.present();\r\n      await this.modal.onDidDismiss();\r\n      this.modal = null;\r\n    }\r\n  }\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\nimport { SnowProfilePage } from './snow-profile.page';\r\nimport { SharedComponentsModule } from '../../../shared-components.module';\r\nimport { CompressionTestComponent } from '../../../components/snow/snow-profile/compression-test/compression-test.component';\r\nimport { SnowDensityComponent } from '../../../components/snow/snow-profile/snow-density/snow-density.component';\r\nimport { SnowTempComponent } from '../../../components/snow/snow-profile/snow-temp/snow-temp.component';\r\nimport { StratProfileComponent } from '../../../components/snow/snow-profile/strat-profile/strat-profile.component';\r\n// tslint:disable-next-line:max-line-length\r\nimport { StratProfileModalPageModule } from '../../../components/snow/snow-profile/strat-profile/strat-profile-modal/strat-profile-modal.module';\r\nimport { FullscreenImageModalPageModule } from '../../../../../pages/modal-pages/fullscreen-image-modal/fullscreen-image-modal.module';\r\nimport { SnowTempModalPageModule } from '../../../components/snow/snow-profile/snow-temp/snow-temp-modal/snow-temp-modal.module';\r\n// tslint:disable-next-line:max-line-length\r\nimport { SnowDensityModalPageModule } from '../../../components/snow/snow-profile/snow-density/snow-density-modal/snow-density-modal.module';\r\n// tslint:disable-next-line:max-line-length\r\nimport { CompressionTestListModalPageModule } from '../../../components/snow/snow-profile/compression-test/compression-test-list-modal/compression-test-list-modal.module';\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: '',\r\n    component: SnowProfilePage\r\n  }\r\n];\r\n\r\n@NgModule({\r\n  imports: [\r\n    SharedComponentsModule,\r\n    StratProfileModalPageModule,\r\n    SnowTempModalPageModule,\r\n    SnowDensityModalPageModule,\r\n    CompressionTestListModalPageModule,\r\n    FullscreenImageModalPageModule,\r\n    RouterModule.forChild(routes)\r\n  ],\r\n  declarations: [\r\n    SnowProfilePage,\r\n    CompressionTestComponent,\r\n    SnowDensityComponent,\r\n    SnowTempComponent,\r\n    StratProfileComponent\r\n  ]\r\n})\r\nexport class SnowProfilePageModule {}\r\n","<ion-header>\r\n  <ion-toolbar appHeaderColor mode=\"ios\">\r\n    <ion-buttons slot=\"start\">\r\n      <ion-back-button text=\"\" defaultHref=\"/\"></ion-back-button>\r\n    </ion-buttons>\r\n    <ion-title>\r\n      {{'REGISTRATION.SNOW.SNOW_PROFILE.TITLE' | translate}}\r\n    </ion-title>\r\n  </ion-toolbar>\r\n</ion-header>\r\n\r\n<ion-content>\r\n  <app-registration-content-wrapper *ngIf=\"registration && registration.request.SnowProfile2\"\r\n    [registration]=\"registration\" [registrationTid]=\"registrationTid\" (reset)=\"reset()\">\r\n    <ion-list lines=\"full\">\r\n      <ion-list-header class=\"ion-text-uppercase\">\r\n        <ion-label>\r\n          {{ 'REGISTRATION.SNOW.SNOW_PROFILE.SUPERIOR' | translate}}\r\n        </ion-label>\r\n      </ion-list-header>\r\n      <app-yes-no-select [(value)]=\"registration.request.SnowProfile2.IsProfileToGround\"\r\n        title=\"REGISTRATION.SNOW.SNOW_PROFILE.IS_PROFILE_TO_GROUND\">\r\n      </app-yes-no-select>\r\n      <!-- TODO: Ta inn dette når vi er på siste versjon av API'et\r\n        ion-item>\r\n        <ion-label color=\"medium\" position=\"stacked\" class=\"ion-text-uppercase\">\r\n          {{ 'REGISTRATION.SNOW.SNOW_PROFILE.VALID_EXPOSITION' | translate}}</ion-label>\r\n        <app-select [(selectedValue)]=\"registration.request.SnowProfile2.Exposition\"\r\n          [options]=\"expositionOptions\" title=\"REGISTRATION.SNOW.SNOW_PROFILE.VALID_EXPOSITION\"></app-select>\r\n      </ion-item>\r\n      <app-numeric-input [(value)]=\"registration.request.SnowProfile2.SlopeAngle\"\r\n      title=\"REGISTRATION.SNOW.SNOW_PROFILE.SLOPE_ANGLE\" [min]=\"0\" [max]=\"59\" suffix=\"°\"\r\n      placeholder=\"REGISTRATION.SNOW.SNOW_PROFILE.SLOPE_ANGLE_PLACEHOLDER\" [decimalPlaces]=\"0\"></app-numeric-input-->\r\n      <app-text-comment title=\"DIALOGS.COMMENT\" [(value)]=\"registration.request.SnowProfile2.Comment\">\r\n      </app-text-comment>\r\n      <ion-list-header class=\"ion-text-uppercase\">\r\n        <ion-label>\r\n          {{'REGISTRATION.SNOW.SNOW_PROFILE.SUBFORMS' | translate}}\r\n        </ion-label>\r\n      </ion-list-header>\r\n      <app-strat-profile [reg]=\"registration\"></app-strat-profile>\r\n      <app-snow-temp [reg]=\"registration\"></app-snow-temp>\r\n      <app-snow-density [reg]=\"registration\"></app-snow-density>\r\n      <app-compression-test [reg]=\"registration\">\r\n      </app-compression-test>\r\n      <ion-list-header class=\"ion-text-uppercase\">\r\n        <ion-label>\r\n          {{'REGISTRATION.SNOW.SNOW_PROFILE.PREVIEW' | translate}}\r\n        </ion-label>\r\n      </ion-list-header>\r\n      <ion-item [disabled]=\"isEmpty()\" (click)=\"openPreview()\">\r\n        <ion-icon name=\"eye\" color=\"dark\" slot=\"start\"></ion-icon>\r\n        <ion-label>{{'REGISTRATION.SNOW.SNOW_PROFILE.PREVIEW_ITEM' | translate }}</ion-label>\r\n      </ion-item>\r\n      <ion-list-header class=\"ion-text-uppercase\">\r\n        <ion-label>\r\n          {{'REGISTRATION.IMAGES' | translate}}\r\n        </ion-label>\r\n      </ion-list-header>\r\n      <app-add-picture-item [geoHazard]=\"registration.geoHazard\" [registrationId]=\"registration.id\"\r\n        [registrationTid]=\"registrationTid\" [onBeforeAdd]=\"getSaveFunc()\">\r\n      </app-add-picture-item>\r\n    </ion-list>\r\n  </app-registration-content-wrapper>\r\n</ion-content>","import { Component, OnInit } from '@angular/core';\r\nimport { BasePageService } from '../../base-page-service';\r\nimport { ActivatedRoute } from '@angular/router';\r\nimport { RegistrationTid } from 'src/app/modules/common-registration/registration.models';\r\nimport { BasePage } from '../../base.page';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport {\r\n  ModalController,\r\n  LoadingController,\r\n  ToastController\r\n} from '@ionic/angular';\r\nimport { FullscreenImageModalPage } from '../../../../../pages/modal-pages/fullscreen-image-modal/fullscreen-image-modal.page';\r\nimport { DataUrlHelper } from '../../../../../core/helpers/data-url.helper';\r\nimport { IsEmptyHelper } from '../../../../../core/helpers/is-empty.helper';\r\nimport { TranslateService } from '@ngx-translate/core';\r\nimport { UserSettingService } from '../../../../../core/services/user-setting/user-setting.service';\r\nimport { settings } from '../../../../../../settings';\r\nimport { from, of } from 'rxjs';\r\nimport { catchError, switchMap, take } from 'rxjs/operators';\r\nimport { UserSetting } from '../../../../../core/models/user-settings.model';\r\nimport { LoggingService } from '../../../../shared/services/logging/logging.service';\r\nimport { isEmpty } from '@varsom-regobs-common/core';\r\nimport { SelectOption } from 'src/app/modules/shared/components/input/select/select-option.model';\r\n\r\nconst DEBUG_TAG = 'SnowProfilePage';\r\n\r\n@Component({\r\n  selector: 'app-snow-profile',\r\n  templateUrl: './snow-profile.page.html',\r\n  styleUrls: ['./snow-profile.page.scss']\r\n})\r\nexport class SnowProfilePage extends BasePage {\r\n  expositionOptions: SelectOption[] = [\r\n    { id: 0, text: 'REGISTRATION.SNOW.SNOW_PROFILE.NORTH' },\r\n    { id: 1, text: 'REGISTRATION.SNOW.SNOW_PROFILE.NORTH_EAST' },\r\n    { id: 2, text: 'REGISTRATION.SNOW.SNOW_PROFILE.EAST' },\r\n    { id: 3, text: 'REGISTRATION.SNOW.SNOW_PROFILE.SOUTH_EAST' },\r\n    { id: 4, text: 'REGISTRATION.SNOW.SNOW_PROFILE.SOUTH' },\r\n    { id: 5, text: 'REGISTRATION.SNOW.SNOW_PROFILE.SOUTH_WEST' },\r\n    { id: 6, text: 'REGISTRATION.SNOW.SNOW_PROFILE.WEST' },\r\n    { id: 7, text: 'REGISTRATION.SNOW.SNOW_PROFILE.NORTH_WEST' }\r\n  ];\r\n\r\n  constructor(\r\n    basePageService: BasePageService,\r\n    activatedRoute: ActivatedRoute,\r\n    private httpClient: HttpClient,\r\n    private modalController: ModalController,\r\n    private loadingController: LoadingController,\r\n    private toastController: ToastController,\r\n    private translateService: TranslateService,\r\n    private userSettingService: UserSettingService,\r\n    private loggingService: LoggingService\r\n  ) {\r\n    super(RegistrationTid.SnowProfile2, basePageService, activatedRoute);\r\n  }\r\n\r\n  onInit() {}\r\n\r\n  isEmpty() {\r\n    const isEmptyResult =\r\n     isEmpty(this.registration.request.SnowProfile2) &&\r\n      !(this.registration.request.CompressionTest || []).some(\r\n        (ct) => ct.IncludeInSnowProfile === true\r\n      );\r\n    return Promise.resolve(isEmptyResult);\r\n  }\r\n\r\n  async openPreview() {\r\n    this.translateService\r\n      .get('REGISTRATION.SNOW.SNOW_PROFILE.GENERATING_PREVIEW')\r\n      .subscribe(async (message) => {\r\n        const loader = await this.loadingController.create({\r\n          message,\r\n          backdropDismiss: true // enable cancel\r\n        });\r\n        await loader.present();\r\n        const userSetting = await this.userSettingService.userSetting$\r\n          .pipe(take(1))\r\n          .toPromise();\r\n        const format = 5; // Mobile profile plot\r\n        const size = 400;\r\n        const subscription = this.getPlotFromApiWithFallback(\r\n          userSetting,\r\n          format,\r\n          size\r\n        ).subscribe(\r\n          (result) => {\r\n            this.openImageModal(result);\r\n            this.loadingController.dismiss();\r\n          },\r\n          (err) => {\r\n            this.loadingController.dismiss();\r\n            this.showPreviewError();\r\n          }\r\n        );\r\n        await loader.onDidDismiss();\r\n        subscription.unsubscribe();\r\n      });\r\n  }\r\n\r\n  private getPlotFromApiWithFallback(\r\n    userSetting: UserSetting,\r\n    format: number,\r\n    size: number\r\n  ) {\r\n    return this.getPlotFromApi(userSetting, format, size).pipe(\r\n      catchError((error) => {\r\n        this.loggingService.debug('Could not generate plot', DEBUG_TAG);\r\n        if (format === 5) {\r\n          this.loggingService.debug('Fallback to BareSimpleProfile', DEBUG_TAG);\r\n          return this.getPlotFromApi(userSetting, 4, size); // fallback to BareSimpleProfile when mobile plot failed\r\n        }\r\n        return of(null);\r\n      }),\r\n      switchMap((result) => from(DataUrlHelper.toDataUrl(result, 'image/png')))\r\n    );\r\n  }\r\n\r\n  private getPlotFromApi(\r\n    userSetting: UserSetting,\r\n    format: number,\r\n    size: number\r\n  ) {\r\n    const rootUrl = settings.services.regObs.apiUrl[userSetting.appMode];\r\n    return this.httpClient.post(\r\n      `${rootUrl}/Registration/PlotPreviewPng?format=${format}` +\r\n        `&height=${size}&width=${size}&langKey=${userSetting.language}`,\r\n      this.registration.request,\r\n      {\r\n        responseType: 'blob'\r\n      }\r\n    );\r\n  }\r\n\r\n  private hasAnyTempLayers() {\r\n    return (\r\n      this.registration.request.SnowProfile2 &&\r\n      this.registration.request.SnowProfile2.SnowTemp &&\r\n      this.registration.request.SnowProfile2.SnowTemp.Layers &&\r\n      this.registration.request.SnowProfile2.SnowTemp.Layers.some(\r\n        (x) => x.SnowTemp < 0\r\n      )\r\n    );\r\n  }\r\n\r\n  private async showPreviewError() {\r\n    this.translateService\r\n      .get('REGISTRATION.SNOW.SNOW_PROFILE.PREVIEW_ERROR')\r\n      .subscribe(async (message) => {\r\n        const toast = await this.toastController.create({\r\n          message: message,\r\n          mode: 'md',\r\n          duration: 2000\r\n        });\r\n        toast.present();\r\n      });\r\n  }\r\n\r\n  private async openImageModal(src: string) {\r\n    const modal = await this.modalController.create({\r\n      component: FullscreenImageModalPage,\r\n      componentProps: {\r\n        imgSrc: src\r\n      }\r\n    });\r\n    modal.present();\r\n  }\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { FormsModule } from '@angular/forms';\r\nimport { IonicModule } from '@ionic/angular';\r\nimport { FullscreenImageModalPage } from './fullscreen-image-modal.page';\r\n\r\n@NgModule({\r\n  imports: [CommonModule, IonicModule, FormsModule],\r\n  declarations: [FullscreenImageModalPage],\r\n  entryComponents: [FullscreenImageModalPage]\r\n})\r\nexport class FullscreenImageModalPageModule {}\r\n"]}