{"version":3,"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAWA,UAAMA,SAAS,GAAG,iBAAlB;;UAIaC;AAqBX,kCACUC,mBADV,EAEUC,oBAFV,EAGUC,yBAHV,EAIUC,MAJV,EAKUC,eALV,EAMUC,gBANV,EAOUC,cAPV,EAOwC;AAAA;;AAN9B;AACA;AACA;AACA;AACA;AACA;AACA;AACN;;;;eA5BJ,eAAQ;AACN,mBAAO,KAAKH,MAAZ;AACD;;;eAED,eAAuB;AACrB,mBAAO,KAAKH,mBAAZ;AACD;;;eAED,eAAmB;AACjB,mBAAO,KAAKI,eAAZ;AACD;;;eAED,eAAoB;AAClB,mBAAO,KAAKC,gBAAZ;AACD;;;eAED,eAA6B;AAC3B,mBAAO,KAAKH,yBAAZ;AACD;;;iBAYK,sBAAaK,YAAb,EAA0CC,eAA1C,EAA4EC,OAA5E,EAAgG;;;;;;;;AAClF,6BAAM,KAAKJ,gBAAL,CAAsBK,GAAtB,CAA0B,sCAA1B,EAAkEC,SAAlE,EAAN;;;AAAZC;uDACC,KAAKC,iBAAL,CAAuBD,SAAvB,EAAkCL,YAAlC,EAAgDC,eAAhD,EAAiEC,OAAjE;;;;;;;;;AACR;;;iBAEK,sBAAaF,YAAb,EAA0CC,eAA1C,EAA4EC,OAA5E,EAAgG;;;;;;;;AAClF,6BAAM,KAAKJ,gBAAL,CAAsBK,GAAtB,CAA0B,4BAA1B,EAAwDC,SAAxD,EAAN;;;AAAZC;wDACC,KAAKC,iBAAL,CAAuBD,SAAvB,EAAkCL,YAAlC,EAAgDC,eAAhD,EAAiEC,OAAjE;;;;;;;;;AACR;;;iBAEa,2BAAkBK,OAAlB,EAAmCP,YAAnC,EAAgEC,eAAhE,EAAkGC,OAAlG,EAAsH;;;;;;;;AAC7G,6BAAM,KAAKJ,gBAAL,CAAsBK,GAAtB,CAA0B,CAAC,gBAAD,EAAmB,aAAnB,CAA1B,EAA6DC,SAA7D,EAAN;;;AAAfI;;AACQ,6BAAM,KAAKX,eAAL,CAAqBY,MAArB,CAA4B;AAC9CF,+BAAO,EAAPA,OAD8C;AAE9CG,+BAAO,EAAE,CACP;AACEC,8BAAI,EAAEH,YAAY,CAAC,gBAAD,CADpB;AAEEI,8BAAI,EAAE;AAFR,yBADO,EAKP;AACED,8BAAI,EAAEH,YAAY,CAAC,aAAD;AADpB,yBALO;AAFqC,uBAA5B,CAAN;;;AAARK;;AAYN,6BAAMA,KAAK,CAACC,OAAN,EAAN;;;;AACe,6BAAMD,KAAK,CAACE,YAAN,EAAN;;;AAATC;AACAC,8BAAiBD,MAAM,CAACJ,IAAP,KAAgB;;2BACnCK;;;;;;AACF,6BAAM,KAAKA,KAAL,CAAWjB,YAAX,EAAyBC,eAAzB,EAA0CC,OAA1C,CAAN;;;wDAEKe;;;;;;;;;AACR;;;iBAEK,eAAMjB,YAAN,EAAmCC,eAAnC,EAAqEC,OAArE,EAAyF;;;;;;;;AAC7F,2BAAKgB,IAAL,CAAUC,GAAV,CAAc,YAAK;AACjB,4BAAIlB,eAAJ,EAAqB;AACnBD,sCAAY,CAACoB,OAAb,CAAqB,2GAAgBnB,eAAhB,CAArB,IAAyD,KAAI,CAACoB,eAAL,CAAqBpB,eAArB,CAAzD;;AACA,+BAAI,CAACqB,WAAL,CAAiBtB,YAAjB;AACD;;AACD,4BAAIE,OAAJ,EAAa;AACXA,iCAAO;AACR;AACF,uBARD;;AASA,6BAAM,KAAKT,mBAAL,CAAyB8B,qBAAzB,CAA+CvB,YAA/C,CAAN;;;;;;;;;AACD;;;iBAED,4BAAmBA,YAAnB,EAAgDC,eAAhD,EAAgF;AAC9E,gBAAMuB,QAAQ,GAAG,2GAAgBvB,eAAhB,CAAjB;;AACA,gBAAI,CAACD,YAAY,CAACoB,OAAb,CAAqBI,QAArB,CAAL,EAAqC;AACnC;AACAxB,0BAAY,CAACoB,OAAb,CAAqBI,QAArB,IAAiC,KAAKH,eAAL,CAAqBpB,eAArB,CAAjC;AACD;AACF;;;iBAED,yBAAgBA,eAAhB,EAAgD;AAC9C,gBAAI,uGAAYA,eAAZ,CAAJ,EAAkC;AAChC,qBAAO,EAAP;AACD,aAFD,MAEO;AACL,qBAAO,EAAP;AACD;AACF;;;iBAED,qBAAYD,YAAZ,EAAuC;AAAA;;AACrC,iBAAKN,oBAAL,CACG+B,cADH,CACkBzB,YAAY,CAAC0B,EAD/B,EAEGC,IAFH,CAEQ,2DAAU,UAACC,WAAD;AAAA,qBAAiB,gDAASA,WAAW,CAACC,GAAZ,CAAgB,UAACC,CAAD;AAAA,uBAAO,MAAI,CAACpC,oBAAL,CAA0BqC,gBAA1B,CAA2C/B,YAAY,CAAC0B,EAAxD,EAA4DI,CAAC,CAACJ,EAA9D,CAAP;AAAA,eAAhB,CAAT,CAAjB;AAAA,aAAV,CAFR,EAGGM,SAHH,CAII,YAAK;AACH,oBAAI,CAACjC,cAAL,CAAoBkC,KAApB,CAA0B,uBAA1B,EAAmD1C,SAAnD;AACD,aANL,EAOI,UAAC2C,KAAD,EAAU;AACR,oBAAI,CAACnC,cAAL,CAAoBmC,KAApB,CAA0BA,KAA1B,EAAiC3C,SAAjC,EAA4C,wBAA5C;AACD,aATL;AAWD;;;;;;;yBAzGUC,kBAAe2C;AAAA;;;eAAf3C;AAAe4C,iBAAf5C,gBAAe;AAAA6C,oBAFd;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;UCJQC;;;;;AAMpB,2BAAYrC,eAAZ,EAA8CsC,eAA9C,EAAgFC,cAAhF,EAA8G;AAAA;;AAAA;;AAC5G;AACA,iBAAKD,eAAL,GAAuBA,eAAvB;AACA,iBAAKC,cAAL,GAAsBA,cAAtB;AACA,iBAAKvC,eAAL,GAAuBA,eAAvB;AAJ4G;AAK7G;;;;iBAED,oBAAQ,CAAK;;;iBAEb,2BAAe;AAAA;;AACb,gBAAMyB,EAAE,GAAG,KAAKc,cAAL,CAAoBC,QAApB,CAA6BC,MAA7B,CAAoC,IAApC,CAAX;AACA,iBAAKH,eAAL,CAAqBI,yBAArB,CAA+CC,0BAA/C,CAA0ElB,EAA1E,EACGC,IADH,CAEI,sDAAK,CAAL,CAFJ,EAGI,qDAAI,UAACkB,GAAD,EAAQ;AACV,oBAAI,CAACN,eAAL,CAAqBO,kBAArB,CAAwCD,GAAxC,EAA6C,MAAI,CAAC5C,eAAlD;;AACA,qBAAO4C,GAAP;AACD,aAHD,CAHJ,EAOI,qDAAI,UAACA,GAAD,EAAQ;AACV,oBAAI,CAAC7C,YAAL,GAAoB6C,GAApB;AACD,aAFD,CAPJ,EAUI,2DAAU;AAAA,qBAAM,MAAI,CAACE,oBAAL,EAAN;AAAA,aAAV,CAVJ,EAWI,2DAAU,KAAKC,UAAf,CAXJ,EAaGhB,SAbH;AAcD,YAUD;;;;iBACM,oBAAQ;;;;;;;;;;AAEE,6BAAMiB,OAAO,CAACC,OAAR,CAAgB,KAAKC,OAAL,GAAe,KAAKA,OAAL,EAAf,GAAgC,IAAhD,CAAN;;;AAARC;;AAEU,6BAAMH,OAAO,CAACC,OAAR,CAAgB,KAAKG,OAAL,EAAhB,CAAN;;;AAAVA;;4BACF,CAACA,OAAD,IAAY,CAACD;;;;;wDACR,KAAKb,eAAL,CAAqBe,YAArB,CAAkC,KAAKtD,YAAvC,EAAqD,KAAKC,eAA1D,EAA2E;AAAA,+BAAO,MAAI,CAACC,OAAL,GAAe,MAAI,CAACA,OAAL,EAAf,GAAgC,IAAvC;AAAA,uBAA3E;;;wDAEF;;;;;;;;;AACR;;;iBAEO,gCAAoB;AAC1B,gBAAI,KAAKqD,MAAT,EAAiB;AACf,qBAAO,4CAAKN,OAAO,CAACC,OAAR,CAAgB,KAAKK,MAAL,EAAhB,CAAL,CAAP;AACD;;AACD,mBAAO,2CAAG,EAAH,CAAP;AACD;;;iBAEK,4BAAgB;;;;;;2BAChB,KAAKC;;;;;;AACP,6BAAMP,OAAO,CAACC,OAAR,CAAgB,KAAKM,aAAL,EAAhB,CAAN;;;;AAEF,6BAAM,KAAKC,IAAL,CAAU,IAAV,CAAN;;;;;;;;;AACD;;;iBAED,gBAAkB;AAAA,gBAAbC,KAAa,uEAAL,KAAK;AAChB,iBAAK1D,YAAL,CAAkB2D,UAAlB,GAA+BC,qGAA/B;AACA,mBAAO,KAAKrB,eAAL,CAAqBsB,mBAArB,CAAyCtC,qBAAzC,CAA+D,KAAKvB,YAApE,EAAkF0D,KAAlF,CAAP;AACD;;;iBAED,uBAAW;AAAA;;AACT,mBAAO;AAAA,qBAAM,MAAI,CAACD,IAAL,EAAN;AAAA,aAAP;AACD;;;iBAEK,mBAAO;;;;;;;AACF,6BAAM,KAAKlB,eAAL,CAAqBI,yBAArB,CAA+CmB,mCAA/C,CACb,KAAK9D,YADQ,EAEb,KAAKC,eAFQ,EAIZ0B,IAJY,CAIP,sDAAK,CAAL,CAJO,EAKZvB,SALY,EAAN;;;;;;;;;;;;AAMV;;;iBAED,iBAAK;AAAA;;AACH,mBAAO,KAAKmC,eAAL,CAAqBwB,YAArB,CAAkC,KAAK/D,YAAvC,EAAqD,KAAKC,eAA1D,EAA2E;AAAA,qBAAO,MAAI,CAACC,OAAL,GAAe,MAAI,CAACA,OAAL,EAAf,GAAgC,IAAvC;AAAA,aAA3E,CAAP;AACD;;;iBAED,0BAAc;AACZ,mBACE,MACA,KAAKsC,cAAL,CAAoBC,QAApB,CAA6BuB,YAA7B,CACGnC,GADH,CACO,UAACoC,CAAD;AAAA,qBAAOA,CAAC,CAACC,GAAF,CAAMrC,GAAN,CAAU,UAACsC,OAAD;AAAA,uBAAaA,OAAO,CAACC,QAAR,EAAb;AAAA,eAAV,EAA2CC,IAA3C,CAAgD,GAAhD,CAAP;AAAA,aADP,EAEGC,MAFH,CAEU,UAACC,IAAD;AAAA,qBAAU,CAAC,CAACA,IAAZ;AAAA,aAFV,EAGGF,IAHH,CAGQ,GAHR,CAFF;AAOD;;;;QAjGoCG;;;yBAAjBlC,WAAQmC;AAAA;;;cAARnC;AAAQoC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;UCCjBC;AAEX,uDAAoBC,aAApB,EAAgD;AAAA;;AAA5B;AAAgC;;;;iBAE9C,uBACJC,SADI,EAEJC,CAFI,EAGJC,EAHI,EAIJC,SAJI,EAI2B;;;;;;AAE/B,0BACEA,SAAS,IACTA,SAAS,CAACd,GAAV,CAAce,OAAd,CAAsB,kBAAtB,KAA6C,CAD7C,IAEAJ,SAAS,CAAC7E,YAHZ,EAIE;AACA,6BAAK4E,aAAL,CAAmBM,YAAnB,qCAC+BL,SAAS,CAAC7E,YAAV,CAAuB0B,EADtD;AAGD;;wDACM;;;;;;;;;AACR;;;;;;;yBApBUiD,uCAAoCQ;AAAA;;;eAApCR;AAAoCvC,iBAApCuC,qCAAoC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACJjD,UAAMS,MAAM,GAAW,CACrB;AACEb,YAAI,EAAE,EADR;AAEEM,iBAAS,EAAEQ,uDAFb;AAGEC,qBAAa,EAAE,CAACC,uGAAD;AAHjB,OADqB,CAAvB;;UAaaC;;;;;yBAAAA;AAAiB;;;cAAjBA;;;mBAFA,CAACD,uGAAD;AAAsCE,kBAFxC,CAACC,+DAAD,EAAeC,mEAAsBP,MAAtB,CAAf,CAEwC;;;;4HAEtCI,oBAAiB;AAAAI,yBAHbP,uDAGa;AAHFI,oBADhBC,+DACgB,EADFC,yDACE;AAGE;AAJJ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;UCFbE;;;;;AAKX,8BACEtD,eADF,EAEEC,cAFF,EAGUoC,aAHV,EAGsC;AAAA;;AAAA;;AAEpC,sCAAM,IAAN,EAAYrC,eAAZ,EAA6BC,cAA7B;AAFQ;;AAGR,iBAAKsD,QAAL;;AAHoC;AAIrC;;;;iBAED,kBAAM;AACJ,gBAAI,KAAK9F,YAAL,IAAqB,KAAKA,YAAL,CAAkBoB,OAAlB,CAA0B2E,SAAnD,EAA8D;AAC5D,mBAAKC,SAAL,GAAiB,KAAKhG,YAAL,CAAkBoB,OAAlB,CAA0B2E,SAA3C;AACD;AACF;;;iBACD,oBAAQ;AACN,gBAAME,GAAG,GAAGC,gDAASC,WAAT,CAAqB,IAArB,CAAZ;AACA,iBAAKC,OAAL,GAAe,KAAKC,gBAAL,EAAf;AACA,iBAAKL,SAAL,GAAiBC,GAAjB;AACD;;;iBAED,4BAAgB;AACd;AACA;AACA,mBAAOC,gDAASI,OAAT,CAAiB,EAAjB,EAAqBH,WAArB,CAAiC,IAAjC,CAAP;AACD;;;iBAED,mBAAO;AACL,gBAAI,KAAKnG,YAAT,EAAuB;AACrB,mBAAKA,YAAL,CAAkBoB,OAAlB,CAA0B2E,SAA1B,GACE,KAAKC,SAAL,IAAkBE,gDAASC,WAAT,CAAqB,IAArB,CADpB;AAEA,mBAAKvB,aAAL,CAAmB2B,YAAnB,CACE,uBAAuB,KAAKvG,YAAL,CAAkB0B,EAD3C;AAGD;AACF;;;;QAvC8B8E;;;yBAApBX,cAAWY;AAAA;;;cAAXZ;AAAWa;AAAAhC;AAAAiC;AAAAC;AAAAC;AAAAC;AAAA;ACbxBL;;AACEA;;AACEA;;AACEA;;AACFA;;AACAA;;AACEA;;;;AACFA;;AACFA;;AACFA;;AACAA;;AACEA;;AACEA;;AACEA;;AACEA;;;;AACFA;;AACFA;;AACAA;;AACEA;;AAEsCA;AAAA;AAAA;;;;;;;;AACtCA;;AACAA;;AAAqDA;AAAA,qBAASM,cAAT;AAAmB,aAAnB;;AACnDN;;AAA+CA;;;;AAEjDA;;AACFA;;AACFA;;AACAA;;AACEA;;AACEA;AAAA,qBAASM,aAAT;AAAkB,aAAlB;;AAAoBN;;;;AACTA;;AACfA;;AACFA;;;;AA3BMA;;AAAAA;;AAQEA;;AAAAA;;AAI2BA;;AAAAA;;AAC3BA;;AAAwCA;;AACJA,+FAAuB,KAAvB,EAAuBM,WAAvB;;AAGWN;;AAAAA;;AAMvCA;;AAAAA;;AACUA;;AAAAA;;;;;;;;;","names":["DEBUG_TAG","BasePageService","registrationService","newAttachmentService","commonRegistrationService","ngZone","alertController","translateService","loggingService","registration","registrationTid","onReset","get","toPromise","leaveText","createResetDialog","message","translations","create","buttons","text","role","alert","present","onDidDismiss","result","reset","Zone","run","request","getDefaultValue","resetImages","saveRegistrationAsync","propName","getAttachments","id","pipe","attachments","map","a","removeAttachment","subscribe","debug","error","_angular_core__WEBPACK_IMPORTED_MODULE_7__","factory","providedIn","BasePage","basePageService","activatedRoute","snapshot","params","CommonRegistrationService","getRegistrationByIdShared$","reg","createDefaultProps","createInitObservable","ngDestroy$","Promise","resolve","isValid","valid","isEmpty","confirmLeave","onInit","onBeforeLeave","save","clean","syncStatus","src_app_modules_common_registration_registration_models__WEBPACK_IMPORTED_MODULE_1__","RegistrationService","hasAnyDataToShowInRegistrationTypes","confirmReset","pathFromRoot","v","url","segment","toString","join","filter","path","_core_helpers_observable_helper__WEBPACK_IMPORTED_MODULE_2__","_angular_core__WEBPACK_IMPORTED_MODULE_11__","features","CanDeactivateToObsLocationRouteGuard","navController","component","_","__","nextState","indexOf","navigateBack","_angular_core__WEBPACK_IMPORTED_MODULE_1__","routes","_set_time_page__WEBPACK_IMPORTED_MODULE_0__","canDeactivate","_can_deactivate_to_obs_location_guard__WEBPACK_IMPORTED_MODULE_2__","SetTimePageModule","imports","_shared_shared_module__WEBPACK_IMPORTED_MODULE_1__","_angular_router__WEBPACK_IMPORTED_MODULE_4__","declarations","SetTimePage","setToNow","DtObsTime","localDate","now","moment__WEBPACK_IMPORTED_MODULE_0___default","toISOString","maxDate","getMaxDateForNow","minutes","navigateRoot","_base_page__WEBPACK_IMPORTED_MODULE_1__","_angular_core__WEBPACK_IMPORTED_MODULE_4__","selectors","decls","vars","consts","template","ctx"],"sources":["webpack:///src/app/modules/registration/pages/base-page-service.ts","webpack:///src/app/modules/registration/pages/base.page.ts","webpack:///src/app/modules/registration/pages/set-time/can-deactivate-to-obs-location.guard.ts","webpack:///src/app/modules/registration/pages/set-time/set-time.module.ts","webpack:///src/app/modules/registration/pages/set-time/set-time.page.ts","webpack:///src/app/modules/registration/pages/set-time/set-time.page.html"],"sourcesContent":["import { Injectable, NgZone } from '@angular/core';\r\nimport { IRegistration, RegistrationTid } from 'src/app/modules/common-registration/registration.models';\r\nimport { getPropertyName, isArrayType } from 'src/app/modules/common-registration/registration.helpers';\r\nimport { NewAttachmentService, RegistrationService as CommonRegistrationService } from 'src/app/modules/common-registration/registration.services';\r\nimport { RegistrationService } from '../services/registration.service';\r\nimport { AlertController } from '@ionic/angular';\r\nimport { TranslateService } from '@ngx-translate/core';\r\nimport { switchMap } from 'rxjs/operators';\r\nimport { forkJoin } from 'rxjs';\r\nimport { LoggingService } from '../../shared/services/logging/logging.service';\r\n\r\nconst DEBUG_TAG = 'BasePageService';\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class BasePageService {\r\n  get Zone() {\r\n    return this.ngZone;\r\n  }\r\n\r\n  get RegistrationService() {\r\n    return this.registrationService;\r\n  }\r\n\r\n  get AlertController() {\r\n    return this.alertController;\r\n  }\r\n\r\n  get TranslateService() {\r\n    return this.translateService;\r\n  }\r\n\r\n  get CommonRegistrationService() {\r\n    return this.commonRegistrationService;\r\n  }\r\n\r\n  constructor(\r\n    private registrationService: RegistrationService,\r\n    private newAttachmentService: NewAttachmentService,\r\n    private commonRegistrationService: CommonRegistrationService,\r\n    private ngZone: NgZone,\r\n    private alertController: AlertController,\r\n    private translateService: TranslateService,\r\n    private loggingService: LoggingService\r\n  ) {}\r\n\r\n  async confirmLeave(registration: IRegistration, registrationTid: RegistrationTid, onReset?: () => void) {\r\n    const leaveText = await this.translateService.get('REGISTRATION.REQUIRED_FIELDS_MISSING').toPromise();\r\n    return this.createResetDialog(leaveText, registration, registrationTid, onReset);\r\n  }\r\n\r\n  async confirmReset(registration: IRegistration, registrationTid: RegistrationTid, onReset?: () => void) {\r\n    const leaveText = await this.translateService.get('REGISTRATION.CONFIRM_RESET').toPromise();\r\n    return this.createResetDialog(leaveText, registration, registrationTid, onReset);\r\n  }\r\n\r\n  private async createResetDialog(message: string, registration: IRegistration, registrationTid: RegistrationTid, onReset?: () => void) {\r\n    const translations = await this.translateService.get(['DIALOGS.CANCEL', 'DIALOGS.YES']).toPromise();\r\n    const alert = await this.alertController.create({\r\n      message,\r\n      buttons: [\r\n        {\r\n          text: translations['DIALOGS.CANCEL'],\r\n          role: 'cancel'\r\n        },\r\n        {\r\n          text: translations['DIALOGS.YES']\r\n        }\r\n      ]\r\n    });\r\n    await alert.present();\r\n    const result = await alert.onDidDismiss();\r\n    const reset: boolean = result.role !== 'cancel';\r\n    if (reset) {\r\n      await this.reset(registration, registrationTid, onReset);\r\n    }\r\n    return reset;\r\n  }\r\n\r\n  async reset(registration: IRegistration, registrationTid: RegistrationTid, onReset?: () => void) {\r\n    this.Zone.run(() => {\r\n      if (registrationTid) {\r\n        registration.request[getPropertyName(registrationTid)] = this.getDefaultValue(registrationTid);\r\n        this.resetImages(registration);\r\n      }\r\n      if (onReset) {\r\n        onReset();\r\n      }\r\n    });\r\n    await this.registrationService.saveRegistrationAsync(registration);\r\n  }\r\n\r\n  createDefaultProps(registration: IRegistration, registrationTid: RegistrationTid) {\r\n    const propName = getPropertyName(registrationTid);\r\n    if (!registration.request[propName]) {\r\n      // Init to new object if null\r\n      registration.request[propName] = this.getDefaultValue(registrationTid);\r\n    }\r\n  }\r\n\r\n  getDefaultValue(registrationTid: RegistrationTid) {\r\n    if (isArrayType(registrationTid)) {\r\n      return [];\r\n    } else {\r\n      return {};\r\n    }\r\n  }\r\n\r\n  resetImages(registration: IRegistration) {\r\n    this.newAttachmentService\r\n      .getAttachments(registration.id)\r\n      .pipe(switchMap((attachments) => forkJoin(attachments.map((a) => this.newAttachmentService.removeAttachment(registration.id, a.id)))))\r\n      .subscribe(\r\n        () => {\r\n          this.loggingService.debug('Reset images complete', DEBUG_TAG);\r\n        },\r\n        (error) => {\r\n          this.loggingService.error(error, DEBUG_TAG, 'Could not reset images');\r\n        }\r\n      );\r\n  }\r\n}\r\n","import { Directive, OnInit } from '@angular/core';\r\nimport { from, of } from 'rxjs';\r\nimport { BasePageService } from './base-page-service';\r\nimport { IRegistration, RegistrationTid, SyncStatus } from 'src/app/modules/common-registration/registration.models';\r\nimport { ActivatedRoute } from '@angular/router';\r\nimport { take, takeUntil, map, switchMap, tap } from 'rxjs/operators';\r\nimport { NgDestoryBase } from '../../../core/helpers/observable-helper';\r\n\r\n@Directive()\r\nexport abstract class BasePage extends NgDestoryBase implements OnInit {\r\n  registration: IRegistration;\r\n  basePageService: BasePageService;\r\n  registrationTid: RegistrationTid;\r\n  activatedRoute: ActivatedRoute;\r\n\r\n  constructor(registrationTid: RegistrationTid, basePageService: BasePageService, activatedRoute: ActivatedRoute) {\r\n    super();\r\n    this.basePageService = basePageService;\r\n    this.activatedRoute = activatedRoute;\r\n    this.registrationTid = registrationTid;\r\n  }\r\n\r\n  ngOnInit() {}\r\n\r\n  ionViewDidEnter() {\r\n    const id = this.activatedRoute.snapshot.params['id'];\r\n    this.basePageService.CommonRegistrationService.getRegistrationByIdShared$(id)\r\n      .pipe(\r\n        take(1),\r\n        map((reg) => {\r\n          this.basePageService.createDefaultProps(reg, this.registrationTid);\r\n          return reg;\r\n        }),\r\n        tap((reg) => {\r\n          this.registration = reg;\r\n        }),\r\n        switchMap(() => this.createInitObservable()),\r\n        takeUntil(this.ngDestroy$)\r\n      )\r\n      .subscribe();\r\n  }\r\n\r\n  onInit?(): void | Promise<any>;\r\n\r\n  onBeforeLeave?(): void | Promise<any>;\r\n\r\n  onReset?(): void;\r\n\r\n  isValid?(): boolean | Promise<boolean>;\r\n\r\n  // NOTE: Remember to add canDeactivate: [CanDeactivateRouteGuard] in page module\r\n  async canLeave() {\r\n    // Check if implementation page has implemented custom isValid logic\r\n    const valid = await Promise.resolve(this.isValid ? this.isValid() : true);\r\n    // Only return alert if page is not empty and invalid\r\n    const isEmpty = await Promise.resolve(this.isEmpty());\r\n    if (!isEmpty && !valid) {\r\n      return this.basePageService.confirmLeave(this.registration, this.registrationTid, () => (this.onReset ? this.onReset() : null));\r\n    }\r\n    return true;\r\n  }\r\n\r\n  private createInitObservable() {\r\n    if (this.onInit) {\r\n      return from(Promise.resolve(this.onInit()));\r\n    }\r\n    return of({});\r\n  }\r\n\r\n  async ionViewWillLeave() {\r\n    if (this.onBeforeLeave) {\r\n      await Promise.resolve(this.onBeforeLeave());\r\n    }\r\n    await this.save(true);\r\n  }\r\n\r\n  save(clean = false) {\r\n    this.registration.syncStatus = SyncStatus.Draft;\r\n    return this.basePageService.RegistrationService.saveRegistrationAsync(this.registration, clean);\r\n  }\r\n\r\n  getSaveFunc() {\r\n    return () => this.save();\r\n  }\r\n\r\n  async isEmpty(): Promise<boolean> {\r\n    return !(await this.basePageService.CommonRegistrationService.hasAnyDataToShowInRegistrationTypes(\r\n      this.registration,\r\n      this.registrationTid\r\n    )\r\n      .pipe(take(1))\r\n      .toPromise());\r\n  }\r\n\r\n  reset() {\r\n    return this.basePageService.confirmReset(this.registration, this.registrationTid, () => (this.onReset ? this.onReset() : null));\r\n  }\r\n\r\n  getResolvedUrl(): string {\r\n    return (\r\n      '/' +\r\n      this.activatedRoute.snapshot.pathFromRoot\r\n        .map((v) => v.url.map((segment) => segment.toString()).join('/'))\r\n        .filter((path) => !!path)\r\n        .join('/')\r\n    );\r\n  }\r\n\r\n  // getConfiguredUrl(): string {\r\n  //     return '/' + this.activatedRoute.snapshot.pathFromRoot\r\n  //         .filter(v => v.routeConfig)\r\n  //         .map(v => v.routeConfig.path)\r\n  //         .join('/');\r\n  // }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport {\r\n  CanDeactivate,\r\n  RouterStateSnapshot,\r\n  ActivatedRouteSnapshot\r\n} from '@angular/router';\r\nimport { SetTimePage } from './set-time.page';\r\nimport { NavController } from '@ionic/angular';\r\n\r\n@Injectable()\r\nexport class CanDeactivateToObsLocationRouteGuard\r\n  implements CanDeactivate<SetTimePage> {\r\n  constructor(private navController: NavController) {}\r\n\r\n  async canDeactivate(\r\n    component: SetTimePage,\r\n    _: ActivatedRouteSnapshot,\r\n    __: RouterStateSnapshot,\r\n    nextState?: RouterStateSnapshot\r\n  ): Promise<boolean> {\r\n    if (\r\n      nextState &&\r\n      nextState.url.indexOf('registration/new') >= 0 &&\r\n      component.registration\r\n    ) {\r\n      this.navController.navigateBack(\r\n        `registration/obs-location/${component.registration.id}`\r\n      );\r\n    }\r\n    return true;\r\n  }\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\nimport { SetTimePage } from './set-time.page';\r\nimport { SharedModule } from '../../../shared/shared.module';\r\nimport { CanDeactivateToObsLocationRouteGuard } from './can-deactivate-to-obs-location.guard';\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: '',\r\n    component: SetTimePage,\r\n    canDeactivate: [CanDeactivateToObsLocationRouteGuard]\r\n  }\r\n];\r\n\r\n@NgModule({\r\n  imports: [SharedModule, RouterModule.forChild(routes)],\r\n  declarations: [SetTimePage],\r\n  providers: [CanDeactivateToObsLocationRouteGuard]\r\n})\r\nexport class SetTimePageModule {}\r\n","import { Component } from '@angular/core';\r\nimport moment from 'moment';\r\nimport { NavController } from '@ionic/angular';\r\nimport { BasePage } from '../base.page';\r\nimport { BasePageService } from '../base-page-service';\r\nimport { ActivatedRoute, Route } from '@angular/router';\r\nimport { IRegistration } from 'src/app/modules/common-registration/registration.models';\r\n\r\n@Component({\r\n  selector: 'app-set-time',\r\n  templateUrl: './set-time.page.html',\r\n  styleUrls: ['./set-time.page.scss']\r\n})\r\nexport class SetTimePage extends BasePage {\r\n  maxDate: string;\r\n  registration: IRegistration;\r\n  localDate: string;\r\n\r\n  constructor(\r\n    basePageService: BasePageService,\r\n    activatedRoute: ActivatedRoute,\r\n    private navController: NavController\r\n  ) {\r\n    super(null, basePageService, activatedRoute);\r\n    this.setToNow();\r\n  }\r\n\r\n  onInit() {\r\n    if (this.registration && this.registration.request.DtObsTime) {\r\n      this.localDate = this.registration.request.DtObsTime;\r\n    }\r\n  }\r\n  setToNow() {\r\n    const now = moment().toISOString(true);\r\n    this.maxDate = this.getMaxDateForNow();\r\n    this.localDate = now;\r\n  }\r\n\r\n  getMaxDateForNow() {\r\n    // There is an issue when setting max date that when changing hour, the minutes is still max minutes.\r\n    // Workaround is to set minutes to 59.\r\n    return moment().minutes(59).toISOString(true);\r\n  }\r\n\r\n  confirm() {\r\n    if (this.registration) {\r\n      this.registration.request.DtObsTime =\r\n        this.localDate || moment().toISOString(true);\r\n      this.navController.navigateRoot(\r\n        'registration/edit/' + this.registration.id\r\n      );\r\n    }\r\n  }\r\n}\r\n","<ion-header>\r\n  <ion-toolbar appHeaderColor mode=\"ios\">\r\n    <ion-buttons slot=\"start\">\r\n      <ion-back-button text=\"\" defaultHref=\"/\"></ion-back-button>\r\n    </ion-buttons>\r\n    <ion-title>\r\n      {{\"REGISTRATION.SET_TIME.TITLE\" | translate}}\r\n    </ion-title>\r\n  </ion-toolbar>\r\n</ion-header>\r\n<ion-content>\r\n  <ion-list lines=\"none\">\r\n    <ion-list-header class=\"ion-text-uppercase\">\r\n      <ion-label>\r\n        {{\"REGISTRATION.SET_TIME.HEADER\" | translate}}\r\n      </ion-label>\r\n    </ion-list-header>\r\n    <ion-item>\r\n      <ion-datetime color=\"medium\" monthShortNames=\"{{ 'MONTHS.SHORT_LIST' | translate }}\"\r\n        doneText=\"{{'DIALOGS.OK' | translate}}\" cancelText=\"{{'DIALOGS.CANCEL' | translate}}\"\r\n        display-format=\"D. MMM, YYYY HH:mm\" [(ngModel)]=\"localDate\" [max]=\"maxDate\">\r\n      </ion-datetime>\r\n      <ion-button slot=\"end\" fill=\"outline\" color=\"medium\" (click)=\"setToNow()\">\r\n        <ion-icon slot=\"start\" name=\"time\"></ion-icon> {{\"REGISTRATION.SET_TIME.NOW\" |\r\n        translate}}\r\n      </ion-button>\r\n    </ion-item>\r\n  </ion-list>\r\n  <ion-list lines=\"none\" class=\"ion-padding\">\r\n    <ion-button [disabled]=\"!this.registration\" class=\"confirm-time ion-no-margin\" expand=\"block\" color=\"varsom-orange\"\r\n      (click)=\"confirm()\">{{\"REGISTRATION.SET_TIME.CONFIRM\" |\r\n      translate}}</ion-button>\r\n  </ion-list>\r\n</ion-content>"]}