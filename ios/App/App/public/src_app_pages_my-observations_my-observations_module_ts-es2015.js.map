{"version":3,"file":"src_app_pages_my-observations_my-observations_module_ts-es2015.js","mappings":"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","sources":["./src/app/pages/modal-pages/fullscreen-image-modal/fullscreen-image-modal.module.ts","./src/app/pages/my-observations/components/draft-list/draft-list.component.ts","./src/app/pages/my-observations/components/draft-list/draft-list.component.html","./src/app/pages/my-observations/components/sent-list/sent-list.component.ts","./src/app/pages/my-observations/components/sent-list/sent-list.component.html","./src/app/pages/my-observations/components/sync-item/sync-item.component.ts","./src/app/pages/my-observations/components/sync-item/sync-item.component.html","./src/app/pages/my-observations/my-observations.module.ts","./src/app/pages/my-observations/my-observations.page.ts","./src/app/pages/my-observations/my-observations.page.html"],"sourcesContent":["import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { FormsModule } from '@angular/forms';\r\nimport { IonicModule } from '@ionic/angular';\r\nimport { FullscreenImageModalPage } from './fullscreen-image-modal.page';\r\n\r\n@NgModule({\r\n  imports: [CommonModule, IonicModule, FormsModule],\r\n  declarations: [FullscreenImageModalPage],\r\n  entryComponents: [FullscreenImageModalPage]\r\n})\r\nexport class FullscreenImageModalPageModule {}\r\n","import {\r\n  ChangeDetectionStrategy,\r\n  Component,\r\n  EventEmitter,\r\n  OnInit,\r\n  Output\r\n} from '@angular/core';\r\nimport { Observable, Subject } from 'rxjs';\r\nimport { map, tap } from 'rxjs/operators';\r\nimport { IRegistration, SyncStatus } from 'src/app/modules/common-registration/registration.models';\r\nimport { RegistrationService } from 'src/app/modules/registration/services/registration.service';\r\n\r\n@Component({\r\n  selector: 'app-draft-list',\r\n  templateUrl: './draft-list.component.html',\r\n  styleUrls: ['./draft-list.component.scss'],\r\n  changeDetection: ChangeDetectionStrategy.OnPush\r\n})\r\nexport class DraftListComponent implements OnInit {\r\n  @Output() isEmpty = new EventEmitter<boolean>();\r\n  registrations$: Observable<IRegistration[]>;\r\n  private ngDestroy$: Subject<void>;\r\n\r\n  constructor(private registrationService: RegistrationService) {}\r\n\r\n  ngOnInit(): void {\r\n    this.ngDestroy$ = new Subject();\r\n    this.registrations$ = this.createRegistration$();\r\n  }\r\n\r\n  ngOnDestroy(): void {\r\n    this.ngDestroy$.next();\r\n    this.ngDestroy$.complete();\r\n  }\r\n\r\n  private createRegistration$(): Observable<IRegistration[]> {\r\n    return this.registrationService.registrations$.pipe(\r\n      map((regs) => regs.filter((reg) => reg.syncStatus === SyncStatus.Draft || reg.syncStatus === SyncStatus.Sync)),\r\n      tap((regs) => this.isEmpty.emit(regs.length === 0))\r\n    );\r\n  }\r\n\r\n  trackByIdFunc(_: unknown, obs: IRegistration): string {\r\n    return obs ? obs.id : undefined;\r\n  }\r\n}\r\n","<!-- shows list of registrations not saved on server (both drafts and registrations in sync)-->\r\n<div *ngIf=\"registrations$ | async as registrations\">\r\n  <ion-item-divider *ngIf=\"registrations?.length > 0\" no-border>\r\n    <ion-grid class=\"ion-no-padding ion-no-margin\">\r\n      <ion-row>\r\n        <h3 class=\"ion-text-uppercase\">{{ 'REGISTRATION.DRAFTS' | translate }}</h3>\r\n      </ion-row>\r\n      <ion-row>\r\n        <ion-label class=\"ion-text-wrap\" color=\"medium\">\r\n          {{ 'REGISTRATION.DRAFTS_DESCRIPTION' | translate }}\r\n        </ion-label>\r\n      </ion-row>\r\n    </ion-grid>\r\n  </ion-item-divider>\r\n  <ion-list>\r\n    <app-sync-item *ngFor=\"let reg of registrations; trackBy: trackByIdFunc\" [registration]=\"reg\"></app-sync-item>\r\n  </ion-list>\r\n</div>","import {\r\n  ChangeDetectionStrategy,\r\n  ChangeDetectorRef,\r\n  Component,\r\n  EventEmitter,\r\n  NgZone,\r\n  OnInit,\r\n  Output\r\n} from '@angular/core';\r\nimport { IonInfiniteScroll } from '@ionic/angular';\r\nimport { combineLatest, Observable, of } from 'rxjs';\r\nimport {\r\n  debounceTime,\r\n  distinctUntilChanged,\r\n  filter,\r\n  finalize,\r\n  map,\r\n  pairwise,\r\n  switchMap,\r\n  take,\r\n} from 'rxjs/operators';\r\nimport {\r\n  enterZone,\r\n  toPromiseWithCancel\r\n} from 'src/app/core/helpers/observable-helper';\r\nimport { ObservationService } from 'src/app/core/services/observation/observation.service';\r\nimport { UserSettingService } from 'src/app/core/services/user-setting/user-setting.service';\r\nimport { RegobsAuthService } from 'src/app/modules/auth/services/regobs-auth.service';\r\nimport { RegistrationService } from 'src/app/modules/registration/services/registration.service';\r\nimport { RegistrationViewModel } from '@varsom-regobs-common/regobs-api';\r\nimport { LoggingService } from 'src/app/modules/shared/services/logging/logging.service';\r\nimport { settings } from 'src/settings';\r\n\r\nconst PAGE_SIZE = 10;\r\nconst MAX_REGISTRATIONS_COUNT = 100;\r\n\r\n@Component({\r\n  selector: 'app-sent-list',\r\n  templateUrl: './sent-list.component.html',\r\n  styleUrls: ['./sent-list.component.scss'],\r\n  changeDetection: ChangeDetectionStrategy.OnPush\r\n})\r\nexport class SentListComponent implements OnInit {\r\n  loadedRegistrations: RegistrationViewModel[] = [];\r\n  loaded = false;\r\n  refreshFunc = this.refresh.bind(this);\r\n  @Output() isEmpty = new EventEmitter<boolean>();\r\n  loadingMore = false;\r\n  pageIndex: number;\r\n  myObservationsUrl$: Observable<string>;\r\n\r\n  constructor(\r\n    private observationService: ObservationService,\r\n    private userSettingService: UserSettingService,\r\n    private registrationService: RegistrationService,\r\n    private regobsAuthService: RegobsAuthService,\r\n    private changeDetectorRef: ChangeDetectorRef,\r\n    private loggingService: LoggingService,\r\n    private ngZone: NgZone\r\n  ) {\r\n    this.myObservationsUrl$ = this.createMyObservationsUrl$();\r\n  }\r\n\r\n  async ngOnInit(): Promise<void> {\r\n    this.initRegistrationSubscription();\r\n    this.registrationService.registrations$\r\n      .pipe(\r\n        map((regs) => regs.length),\r\n        pairwise(),\r\n        map(([lastCount, newCount]) => newCount - lastCount),\r\n        distinctUntilChanged(),\r\n        filter((diff) => diff < 0), //only fetch observations when num drafts decrease\r\n        debounceTime(500) //wait a bit in case multiple observations were shipped\r\n      )\r\n      .subscribe(() => this.initRegistrationSubscription());\r\n  }\r\n\r\n  async refresh(cancelPromise: Promise<void>): Promise<void> {\r\n    await this.registrationService.syncRegistrations(cancelPromise);\r\n    await this.initRegistrationSubscription(cancelPromise);\r\n  }\r\n\r\n  private async initRegistrationSubscription(\r\n    cancel?: Promise<void>\r\n  ): Promise<void> {\r\n    this.loaded = false;\r\n    this.changeDetectorRef.detectChanges();\r\n    this.pageIndex = 0;\r\n    try {\r\n      const result = await toPromiseWithCancel(\r\n        this.getMyRegistrations$(0),\r\n        cancel,\r\n        20000\r\n      );\r\n      this.loadedRegistrations = result;\r\n      this.isEmpty.emit(result.length === 0);\r\n    } catch (error) {\r\n      this.loggingService.debug(\r\n        'Could not load my registrations',\r\n        'SentListComponent.initRegistrationSubscription()',\r\n        error\r\n      );\r\n    } finally {\r\n      this.loaded = true;\r\n      this.changeDetectorRef.detectChanges();\r\n    }\r\n  }\r\n\r\n  private getMyRegistrations$(\r\n    pageNumber: number\r\n  ): Observable<RegistrationViewModel[]> {\r\n    return combineLatest([\r\n      this.userSettingService.appModeAndLanguage$,\r\n      this.regobsAuthService.loggedInUser$\r\n    ]).pipe(\r\n      switchMap(([[appMode, langKey], loggedInUser]) => {\r\n        if (loggedInUser.isLoggedIn) {\r\n          return this.observationService.getObservationsForCurrentUser(\r\n            appMode,\r\n            langKey,\r\n            pageNumber,\r\n            PAGE_SIZE\r\n          );\r\n        }\r\n        return of([]);\r\n      }),\r\n      take(1)\r\n    );\r\n  }\r\n\r\n  loadNextPage(event: CustomEvent<RegistrationViewModel>): void {\r\n    const currentLength = this.loadedRegistrations.length;\r\n    const currentPageIndex = Math.floor(currentLength / PAGE_SIZE);\r\n    this.loadingMore = true;\r\n    this.getMyRegistrations$(currentPageIndex)\r\n      .pipe(\r\n        take(1),\r\n        finalize(() => {\r\n          this.loadingMore = false;\r\n        })\r\n      )\r\n      .subscribe((nextPage) => {\r\n        this.loadedRegistrations = this.loadedRegistrations.concat(nextPage);\r\n        this.pageIndex += 1;\r\n        const target: IonInfiniteScroll = (event.target as unknown) as IonInfiniteScroll;\r\n        target.complete();\r\n        if (nextPage.length < PAGE_SIZE || this.maxCountReached) {\r\n          target.disabled = true; //we have reached the end, so no need to load more pages from now\r\n        }\r\n        this.changeDetectorRef.detectChanges();\r\n      });\r\n  }\r\n\r\n  trackByIdFunc(_: unknown, obs: RegistrationViewModel): string {\r\n    return obs ? obs.RegId.toString() : undefined;\r\n  }\r\n\r\n  get maxCountReached(): boolean {\r\n    return this.loadedRegistrations.length >= MAX_REGISTRATIONS_COUNT;\r\n  }\r\n\r\n  get maxCount(): number {\r\n    return MAX_REGISTRATIONS_COUNT;\r\n  }\r\n\r\n  private createMyObservationsUrl$(): Observable<string> {\r\n    return this.userSettingService.userSetting$.pipe(\r\n      map(\r\n        (userSettings) => settings.services.regObs.webUrl[userSettings.appMode]\r\n      ),\r\n      distinctUntilChanged(),\r\n      enterZone(this.ngZone)\r\n    );\r\n  }\r\n}\r\n","<!-- A list of observations sent to server -->\r\n<ion-item-divider no-border>\r\n  <ion-grid class=\"ion-no-padding ion-no-margin\">\r\n    <ion-row>\r\n      <h3 class=\"ion-text-uppercase\">{{ 'MY_OBSERVATIONS.MY_SENT_OBSERVATIONS' | translate }}</h3>\r\n    </ion-row>\r\n    <ion-row>\r\n      <ion-label class=\"ion-text-wrap\" color=\"medium\">\r\n        {{ 'MY_OBSERVATIONS.SENT_SUBTITLE' | translate }}\r\n      </ion-label>\r\n    </ion-row>\r\n  </ion-grid>\r\n</ion-item-divider>\r\n<div class=\"loading-sceleton\" *ngIf=\"!loaded\">\r\n  <app-observation-skeleton></app-observation-skeleton>\r\n  <app-observation-skeleton></app-observation-skeleton>\r\n  <app-observation-skeleton></app-observation-skeleton>\r\n</div>\r\n<ng-container *ngIf=\"loadedRegistrations !== undefined\">\r\n  <ion-list [ngClass]=\"{ loaded: loaded }\" *ngIf=\"(loadedRegistrations.length > 0)\">\r\n    <app-observation-list-card *ngFor=\"let reg of loadedRegistrations; trackBy: trackByIdFunc\" [obs]=\"reg\"></app-observation-list-card>\r\n  </ion-list>\r\n  <ion-infinite-scroll (ionInfinite)=\"loadNextPage($event)\" >\r\n    <ion-infinite-scroll-content>\r\n    </ion-infinite-scroll-content>\r\n  </ion-infinite-scroll>\r\n  <ion-row *ngIf=\"maxCountReached\" class=\"full-grid-row max-count-reached\">\r\n    <ion-col class=\"ion-text-center ion-margin-horizontal\">\r\n      <h2>{{ 'MY_OBSERVATIONS.MAX_COUNT_REACHED_HEADER' | translate }}</h2>\r\n      <h3 class=\"ion-text-wrap\" [innerHTML]=\"'MY_OBSERVATIONS.MAX_COUNT_REACHED_TEXT' | translate: {maxCount: maxCount, myObservationsUrl: myObservationsUrl$ | async}\"></h3>\r\n    </ion-col>\r\n  </ion-row>\r\n</ng-container>\r\n","import { Component, OnInit, Input, OnDestroy, NgZone, ChangeDetectionStrategy, ChangeDetectorRef } from '@angular/core';\r\nimport { IRegistration, SyncStatus } from 'src/app/modules/common-registration/registration.models';\r\nimport { ProgressService } from 'src/app/modules/common-registration/registration.services';\r\nimport { Subscription } from 'rxjs';\r\nimport { RegistrationService } from '../../../../modules/registration/services/registration.service';\r\nimport { map, filter } from 'rxjs/operators';\r\n\r\n@Component({\r\n  selector: 'app-sync-item',\r\n  templateUrl: './sync-item.component.html',\r\n  styleUrls: ['./sync-item.component.scss'],changeDetection: ChangeDetectionStrategy.OnPush,\r\n})\r\nexport class SyncItemComponent implements OnInit, OnDestroy {\r\n  @Input() registration: IRegistration;\r\n  private subscriptions: Subscription[] = [];\r\n  loading: boolean;\r\n  isDraft = false;\r\n\r\n  constructor(\r\n    private registrationService: RegistrationService,\r\n    private progressService: ProgressService,\r\n    private cdr: ChangeDetectorRef,\r\n  ) {}\r\n\r\n  ngOnInit() {\r\n\r\n    this.isDraft = this.registration.syncStatus === SyncStatus.Draft;\r\n    this.loading = !this.isDraft;\r\n    this.subscriptions.push(\r\n      this.registrationService\r\n        .getRegistrationsToSync()\r\n        .pipe(\r\n          map((val: IRegistration[]) =>\r\n            val.find((item) => item.id === this.registration.id)\r\n          ),\r\n          filter((x) => !!x)\r\n        )\r\n        .subscribe((val) => {\r\n          this.registration = val;\r\n          this.isDraft = this.registration.syncStatus === SyncStatus.Draft;\r\n          this.cdr.detectChanges();\r\n        })\r\n    );\r\n    this.subscriptions.push(\r\n      this.progressService.registrationSyncProgress$.subscribe((val) => {\r\n        this.loading = val.inProgress;\r\n        this.cdr.detectChanges();\r\n      })\r\n    );\r\n  }\r\n\r\n  ngOnDestroy(): void {\r\n    for (const subscription of this.subscriptions) {\r\n      subscription.unsubscribe();\r\n    }\r\n  }\r\n\r\n  getLocationName(reg: IRegistration) {\r\n    return reg.request.ObsLocation\r\n      ? reg.request.ObsLocation.LocationName ||\r\n          reg.request.ObsLocation.LocationDescription\r\n      : '';\r\n  }\r\n}","<!-- Shows brief info from one observation not saved on server -->\r\n<ion-item lines=\"full\" [detail]=\"!loading\" [routerLink]=\"'/registration/edit/' + registration.id\">\r\n  <div slot=\"start\" class=\"geo-icon-circle\">\r\n    <app-geo-icon [geoHazards]=\"[registration.geoHazard]\"></app-geo-icon>\r\n  </div>\r\n  <ion-label>\r\n    <h2>\r\n      {{ getLocationName(registration) }}\r\n    </h2>\r\n    <p class=\"ion-text-wrap\">\r\n      <ion-icon name=\"calendar\"></ion-icon> {{ registration.request.DtObsTime | formatDate | async }}\r\n      <span *ngIf=\"isDraft\"> - {{ 'DRAFT' | translate }}</span>\r\n    </p>\r\n  </ion-label>\r\n  <ion-icon *ngIf=\"!loading && registration.syncError\" slot=\"end\" name=\"warning\">\r\n  </ion-icon>\r\n  <ion-spinner *ngIf=\"loading\" slot=\"end\"></ion-spinner>\r\n</ion-item>","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\nimport { MyObservationsPage } from './my-observations.page';\r\nimport { SharedModule } from '../../modules/shared/shared.module';\r\nimport { SharedComponentsModule } from '../../modules/registration/shared-components.module';\r\nimport { FullscreenImageModalPageModule } from '../modal-pages/fullscreen-image-modal/fullscreen-image-modal.module';\r\nimport { AuthGuard } from '../../core/guards/auth.guard';\r\nimport { SyncItemComponent } from './components/sync-item/sync-item.component';\r\nimport { DraftListComponent } from './components/draft-list/draft-list.component';\r\nimport { SentListComponent } from './components/sent-list/sent-list.component';\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: '',\r\n    component: MyObservationsPage,\r\n    canActivate: [AuthGuard]\r\n  }\r\n];\r\n\r\n@NgModule({\r\n  imports: [\r\n    SharedModule,\r\n    SharedComponentsModule,\r\n    FullscreenImageModalPageModule,\r\n    RouterModule.forChild(routes)\r\n  ],\r\n  declarations: [\r\n    MyObservationsPage,\r\n    SyncItemComponent,\r\n    DraftListComponent,\r\n    SentListComponent\r\n  ]\r\n})\r\nexport class MyObservationsPageModule {}\r\n","import { Component, ViewChild, ChangeDetectionStrategy } from '@angular/core';\r\nimport { RegistrationService } from '../../modules/registration/services/registration.service';\r\nimport { IonContent, IonInfiniteScroll } from '@ionic/angular';\r\nimport { SentListComponent } from './components/sent-list/sent-list.component';\r\n\r\n@Component({\r\n  selector: 'app-my-observations',\r\n  templateUrl: './my-observations.page.html',\r\n  styleUrls: ['./my-observations.page.scss'],\r\n  changeDetection: ChangeDetectionStrategy.OnPush\r\n})\r\nexport class MyObservationsPage {\r\n  @ViewChild(IonContent, { static: true }) content: IonContent;\r\n  @ViewChild(IonInfiniteScroll, { static: false }) scroll: IonInfiniteScroll;\r\n  @ViewChild(SentListComponent, { static: false })\r\n  sentListComponent: SentListComponent;\r\n\r\n  refreshFunc = this.refresh.bind(this);\r\n  draftIsEmpty = false;\r\n  sentRegistrationsIsEmpty = false;\r\n\r\n  constructor(private registrationService: RegistrationService) {}\r\n\r\n  async refresh(cancelPromise: Promise<void>): Promise<void> {\r\n    await this.registrationService.syncRegistrations(cancelPromise);\r\n\r\n    await this.sentListComponent.refresh(cancelPromise);\r\n  }\r\n\r\n  refreshDraftEmptyState(isEmpty: boolean): void {\r\n    this.draftIsEmpty = isEmpty;\r\n  }\r\n\r\n  refreshSentEmptyState(isEmpty: boolean): void {\r\n    this.sentRegistrationsIsEmpty = isEmpty;\r\n  }\r\n}\r\n","<!-- shows lists of all registrations created: Drafts, registrations in sync and published registrations -->\r\n<ion-header>\r\n  <ion-toolbar appHeaderColor mode=\"ios\">\r\n    <ion-buttons slot=\"start\">\r\n      <ion-back-button text=\"\" defaultHref=\"/\"></ion-back-button>\r\n    </ion-buttons>\r\n    <ion-title>{{ 'MY_OBSERVATIONS.TITLE' | translate }}</ion-title>\r\n  </ion-toolbar>\r\n</ion-header>\r\n<ion-content>\r\n  <app-refresh-with-cancel [refreshFunc]=\"refreshFunc\"></app-refresh-with-cancel>\r\n  <app-draft-list (isEmpty)=\"refreshDraftEmptyState($event)\"></app-draft-list>\r\n  <app-sent-list (isEmpty)=\"refreshSentEmptyState($event)\"></app-sent-list>\r\n  <ion-grid *ngIf=\"draftIsEmpty && sentRegistrationsIsEmpty\" class=\"full-grid\">\r\n    <ion-row class=\"full-grid-row\">\r\n      <ion-col class=\"ion-text-center ion-align-self-center\">\r\n        <svg-icon src=\"/assets/images/empty-states/no-my-observations.svg\"></svg-icon>\r\n      </ion-col>\r\n    </ion-row>\r\n    <ion-row class=\"full-grid-row\">\r\n      <ion-col class=\"ion-text-center ion-margin-horizontal\">\r\n        <h2> {{ 'MY_OBSERVATIONS.NO_OBSERVATIONS' | translate }}</h2>\r\n        <h3 class=\"ion-text-wrap\">{{'MY_OBSERVATIONS.NO_OBSERVATIONS_TEXT'|translate}}</h3>\r\n      </ion-col>\r\n    </ion-row>\r\n  </ion-grid>\r\n</ion-content>\r\n<app-add-menu></app-add-menu>\r\n"],"names":[],"sourceRoot":"webpack:///"}