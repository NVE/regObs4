{"version":3,"mappings":"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","names":["DEBUG_TAG","BasePageService","registrationService","newAttachmentService","commonRegistrationService","ngZone","alertController","translateService","loggingService","registration","registrationTid","onReset","get","toPromise","leaveText","createResetDialog","message","translations","create","buttons","text","role","alert","present","onDidDismiss","result","reset","Zone","run","request","getDefaultValue","resetImages","saveRegistrationAsync","propName","getAttachments","id","pipe","attachments","map","a","removeAttachment","subscribe","debug","error","_angular_core__WEBPACK_IMPORTED_MODULE_7__","factory","providedIn","BasePage","basePageService","activatedRoute","snapshot","params","CommonRegistrationService","getRegistrationByIdShared$","reg","createDefaultProps","createInitObservable","ngDestroy$","Promise","resolve","isValid","valid","isEmpty","confirmLeave","onInit","onBeforeLeave","save","clean","syncStatus","src_app_modules_common_registration_registration_models__WEBPACK_IMPORTED_MODULE_1__","RegistrationService","hasAnyDataToShowInRegistrationTypes","confirmReset","pathFromRoot","v","url","segment","toString","join","filter","path","_core_helpers_observable_helper__WEBPACK_IMPORTED_MODULE_2__","_angular_core__WEBPACK_IMPORTED_MODULE_11__","features","AvalancheProblemModalPageModule","_shared_components_module__WEBPACK_IMPORTED_MODULE_1__","declarations","_avalanche_problem_modal_page__WEBPACK_IMPORTED_MODULE_0__","imports","_angular_core__WEBPACK_IMPORTED_MODULE_8__","ctx_r0","NO_WEAK_LAYER_KDV_VALUE","AvalancheProblemModalPage","modalController","kdvService","avalancheEvalProblemCopy","AvalCauseTID","val","undefined","avalancheExtKdvFilter","internalAvalancheExtKdvFilter","bind","avalancheEvalProblem","Object","isNew","viewSubscription","getKdvRepositoryByKeyObservable","getViewRepositoryByKeyObservable","snowCauseAttributesKdvElements","avalancheProblemView","avalancheCauseAttributes","getAvalancheCauseAttributes","unsubscribe","avalCauseTid","views","AvalancheExtTID","indexOf","kdvElements","kdvElement","selected","isAvalancheCauseSelected","Id","AvalCauseAttributeLightTID","AvalCauseAttributeThinTID","AvalCauseAttributeSoftTID","AvalCauseAttributeCrystalTID","dismiss","AvalCauseDepthTID","noWeakLayers","resetAvalancheCauseFields","_core_helpers_is_empty_helper__WEBPACK_IMPORTED_MODULE_0__","selectors","inputs","decls","vars","consts","template","ctx","routes","component","_avalanche_problem_page__WEBPACK_IMPORTED_MODULE_0__","AvalancheProblemPageModule","_avalanche_problem_modal_avalanche_problem_modal_module__WEBPACK_IMPORTED_MODULE_2__","_angular_router__WEBPACK_IMPORTED_MODULE_4__","_angular_core__WEBPACK_IMPORTED_MODULE_9__","AvalancheProblemPage","src_app_modules_common_registration_registration_models__WEBPACK_IMPORTED_MODULE_2__","avalancheCause","kdvSubscription","index","AvalancheEvalProblem2","_avalanche_problem_modal_avalanche_problem_modal_page__WEBPACK_IMPORTED_MODULE_3__","componentProps","modal","data","splice","push","cause","find","c","Name","event","src_app_core_helpers_array_helper__WEBPACK_IMPORTED_MODULE_5__","detail","from","to","complete","_base_page__WEBPACK_IMPORTED_MODULE_0__"],"sources":["webpack:///src/app/modules/registration/pages/base-page-service.ts","webpack:///src/app/modules/registration/pages/base.page.ts","webpack:///src/app/modules/registration/pages/snow/avalanche-problem/avalanche-problem-modal/avalanche-problem-modal.module.ts","webpack:///src/app/modules/registration/pages/snow/avalanche-problem/avalanche-problem-modal/avalanche-problem-modal.page.html","webpack:///src/app/modules/registration/pages/snow/avalanche-problem/avalanche-problem-modal/avalanche-problem-modal.page.ts","webpack:///src/app/modules/registration/pages/snow/avalanche-problem/avalanche-problem.module.ts","webpack:///src/app/modules/registration/pages/snow/avalanche-problem/avalanche-problem.page.html","webpack:///src/app/modules/registration/pages/snow/avalanche-problem/avalanche-problem.page.ts"],"sourcesContent":["import { Injectable, NgZone } from '@angular/core';\r\nimport { IRegistration, RegistrationTid } from 'src/app/modules/common-registration/registration.models';\r\nimport { getPropertyName, isArrayType } from 'src/app/modules/common-registration/registration.helpers';\r\nimport { NewAttachmentService, RegistrationService as CommonRegistrationService } from 'src/app/modules/common-registration/registration.services';\r\nimport { RegistrationService } from '../services/registration.service';\r\nimport { AlertController } from '@ionic/angular';\r\nimport { TranslateService } from '@ngx-translate/core';\r\nimport { switchMap } from 'rxjs/operators';\r\nimport { forkJoin } from 'rxjs';\r\nimport { LoggingService } from '../../shared/services/logging/logging.service';\r\n\r\nconst DEBUG_TAG = 'BasePageService';\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class BasePageService {\r\n  get Zone() {\r\n    return this.ngZone;\r\n  }\r\n\r\n  get RegistrationService() {\r\n    return this.registrationService;\r\n  }\r\n\r\n  get AlertController() {\r\n    return this.alertController;\r\n  }\r\n\r\n  get TranslateService() {\r\n    return this.translateService;\r\n  }\r\n\r\n  get CommonRegistrationService() {\r\n    return this.commonRegistrationService;\r\n  }\r\n\r\n  constructor(\r\n    private registrationService: RegistrationService,\r\n    private newAttachmentService: NewAttachmentService,\r\n    private commonRegistrationService: CommonRegistrationService,\r\n    private ngZone: NgZone,\r\n    private alertController: AlertController,\r\n    private translateService: TranslateService,\r\n    private loggingService: LoggingService\r\n  ) {}\r\n\r\n  async confirmLeave(registration: IRegistration, registrationTid: RegistrationTid, onReset?: () => void) {\r\n    const leaveText = await this.translateService.get('REGISTRATION.REQUIRED_FIELDS_MISSING').toPromise();\r\n    return this.createResetDialog(leaveText, registration, registrationTid, onReset);\r\n  }\r\n\r\n  async confirmReset(registration: IRegistration, registrationTid: RegistrationTid, onReset?: () => void) {\r\n    const leaveText = await this.translateService.get('REGISTRATION.CONFIRM_RESET').toPromise();\r\n    return this.createResetDialog(leaveText, registration, registrationTid, onReset);\r\n  }\r\n\r\n  private async createResetDialog(message: string, registration: IRegistration, registrationTid: RegistrationTid, onReset?: () => void) {\r\n    const translations = await this.translateService.get(['DIALOGS.CANCEL', 'DIALOGS.YES']).toPromise();\r\n    const alert = await this.alertController.create({\r\n      message,\r\n      buttons: [\r\n        {\r\n          text: translations['DIALOGS.CANCEL'],\r\n          role: 'cancel'\r\n        },\r\n        {\r\n          text: translations['DIALOGS.YES']\r\n        }\r\n      ]\r\n    });\r\n    await alert.present();\r\n    const result = await alert.onDidDismiss();\r\n    const reset: boolean = result.role !== 'cancel';\r\n    if (reset) {\r\n      await this.reset(registration, registrationTid, onReset);\r\n    }\r\n    return reset;\r\n  }\r\n\r\n  async reset(registration: IRegistration, registrationTid: RegistrationTid, onReset?: () => void) {\r\n    this.Zone.run(() => {\r\n      if (registrationTid) {\r\n        registration.request[getPropertyName(registrationTid)] = this.getDefaultValue(registrationTid);\r\n        this.resetImages(registration);\r\n      }\r\n      if (onReset) {\r\n        onReset();\r\n      }\r\n    });\r\n    await this.registrationService.saveRegistrationAsync(registration);\r\n  }\r\n\r\n  createDefaultProps(registration: IRegistration, registrationTid: RegistrationTid) {\r\n    const propName = getPropertyName(registrationTid);\r\n    if (!registration.request[propName]) {\r\n      // Init to new object if null\r\n      registration.request[propName] = this.getDefaultValue(registrationTid);\r\n    }\r\n  }\r\n\r\n  getDefaultValue(registrationTid: RegistrationTid) {\r\n    if (isArrayType(registrationTid)) {\r\n      return [];\r\n    } else {\r\n      return {};\r\n    }\r\n  }\r\n\r\n  resetImages(registration: IRegistration) {\r\n    this.newAttachmentService\r\n      .getAttachments(registration.id)\r\n      .pipe(switchMap((attachments) => forkJoin(attachments.map((a) => this.newAttachmentService.removeAttachment(registration.id, a.id)))))\r\n      .subscribe(\r\n        () => {\r\n          this.loggingService.debug('Reset images complete', DEBUG_TAG);\r\n        },\r\n        (error) => {\r\n          this.loggingService.error(error, DEBUG_TAG, 'Could not reset images');\r\n        }\r\n      );\r\n  }\r\n}\r\n","import { Directive, OnInit } from '@angular/core';\r\nimport { from, of } from 'rxjs';\r\nimport { BasePageService } from './base-page-service';\r\nimport { IRegistration, RegistrationTid, SyncStatus } from 'src/app/modules/common-registration/registration.models';\r\nimport { ActivatedRoute } from '@angular/router';\r\nimport { take, takeUntil, map, switchMap, tap } from 'rxjs/operators';\r\nimport { NgDestoryBase } from '../../../core/helpers/observable-helper';\r\n\r\n@Directive()\r\nexport abstract class BasePage extends NgDestoryBase implements OnInit {\r\n  registration: IRegistration;\r\n  basePageService: BasePageService;\r\n  registrationTid: RegistrationTid;\r\n  activatedRoute: ActivatedRoute;\r\n\r\n  constructor(registrationTid: RegistrationTid, basePageService: BasePageService, activatedRoute: ActivatedRoute) {\r\n    super();\r\n    this.basePageService = basePageService;\r\n    this.activatedRoute = activatedRoute;\r\n    this.registrationTid = registrationTid;\r\n  }\r\n\r\n  ngOnInit() {}\r\n\r\n  ionViewDidEnter() {\r\n    const id = this.activatedRoute.snapshot.params['id'];\r\n    this.basePageService.CommonRegistrationService.getRegistrationByIdShared$(id)\r\n      .pipe(\r\n        take(1),\r\n        map((reg) => {\r\n          this.basePageService.createDefaultProps(reg, this.registrationTid);\r\n          return reg;\r\n        }),\r\n        tap((reg) => {\r\n          this.registration = reg;\r\n        }),\r\n        switchMap(() => this.createInitObservable()),\r\n        takeUntil(this.ngDestroy$)\r\n      )\r\n      .subscribe();\r\n  }\r\n\r\n  onInit?(): void | Promise<any>;\r\n\r\n  onBeforeLeave?(): void | Promise<any>;\r\n\r\n  onReset?(): void;\r\n\r\n  isValid?(): boolean | Promise<boolean>;\r\n\r\n  // NOTE: Remember to add canDeactivate: [CanDeactivateRouteGuard] in page module\r\n  async canLeave() {\r\n    // Check if implementation page has implemented custom isValid logic\r\n    const valid = await Promise.resolve(this.isValid ? this.isValid() : true);\r\n    // Only return alert if page is not empty and invalid\r\n    const isEmpty = await Promise.resolve(this.isEmpty());\r\n    if (!isEmpty && !valid) {\r\n      return this.basePageService.confirmLeave(this.registration, this.registrationTid, () => (this.onReset ? this.onReset() : null));\r\n    }\r\n    return true;\r\n  }\r\n\r\n  private createInitObservable() {\r\n    if (this.onInit) {\r\n      return from(Promise.resolve(this.onInit()));\r\n    }\r\n    return of({});\r\n  }\r\n\r\n  async ionViewWillLeave() {\r\n    if (this.onBeforeLeave) {\r\n      await Promise.resolve(this.onBeforeLeave());\r\n    }\r\n    await this.save(true);\r\n  }\r\n\r\n  save(clean = false) {\r\n    this.registration.syncStatus = SyncStatus.Draft;\r\n    return this.basePageService.RegistrationService.saveRegistrationAsync(this.registration, clean);\r\n  }\r\n\r\n  getSaveFunc() {\r\n    return () => this.save();\r\n  }\r\n\r\n  async isEmpty(): Promise<boolean> {\r\n    return !(await this.basePageService.CommonRegistrationService.hasAnyDataToShowInRegistrationTypes(\r\n      this.registration,\r\n      this.registrationTid\r\n    )\r\n      .pipe(take(1))\r\n      .toPromise());\r\n  }\r\n\r\n  reset() {\r\n    return this.basePageService.confirmReset(this.registration, this.registrationTid, () => (this.onReset ? this.onReset() : null));\r\n  }\r\n\r\n  getResolvedUrl(): string {\r\n    return (\r\n      '/' +\r\n      this.activatedRoute.snapshot.pathFromRoot\r\n        .map((v) => v.url.map((segment) => segment.toString()).join('/'))\r\n        .filter((path) => !!path)\r\n        .join('/')\r\n    );\r\n  }\r\n\r\n  // getConfiguredUrl(): string {\r\n  //     return '/' + this.activatedRoute.snapshot.pathFromRoot\r\n  //         .filter(v => v.routeConfig)\r\n  //         .map(v => v.routeConfig.path)\r\n  //         .join('/');\r\n  // }\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { AvalancheProblemModalPage } from './avalanche-problem-modal.page';\r\nimport { SharedComponentsModule } from '../../../../shared-components.module';\r\n\r\n@NgModule({\r\n  imports: [SharedComponentsModule],\r\n  declarations: [AvalancheProblemModalPage],\r\n  entryComponents: [AvalancheProblemModalPage]\r\n})\r\nexport class AvalancheProblemModalPageModule {}\r\n","<ion-header>\r\n  <ion-toolbar appHeaderColor mode=\"ios\">\r\n    <ion-buttons slot=\"start\">\r\n      <ion-button (click)=\"cancel()\">{{ 'DIALOGS.CANCEL' | translate }}</ion-button>\r\n    </ion-buttons>\r\n    <ion-title>{{'REGISTRATION.SNOW.AVALANCHE_PROBLEM.TITLE' | translate}}</ion-title>\r\n  </ion-toolbar>\r\n</ion-header>\r\n\r\n<ion-content *ngIf=\"avalancheEvalProblemCopy\">\r\n  <ion-list lines=\"full\">\r\n    <ion-list-header class=\"ion-text-uppercase\">\r\n      <ion-label>\r\n        {{ 'REGISTRATION.SNOW.AVALANCHE_PROBLEM.WEAK_LAYER' | translate}}\r\n      </ion-label>\r\n    </ion-list-header>\r\n    <ion-item>\r\n      <ion-label>{{'REGISTRATION.SNOW.AVALANCHE_PROBLEM.NO_WEAK_LAYERS' | translate}}</ion-label>\r\n      <ion-checkbox mode=\"md\" slot=\"start\" [(ngModel)]=\"noWeakLayers\"></ion-checkbox>\r\n    </ion-item>\r\n    <ng-container *ngIf=\"!noWeakLayers\">\r\n      <app-kdv-select title=\"REGISTRATION.SNOW.AVALANCHE_PROBLEM.WEAK_LAYER\" kdvKey=\"Snow_AvalCauseKDV\"\r\n        [(value)]=\"avalancheEvalProblemCopy.AvalCauseTID\"></app-kdv-select>\r\n      <app-kdv-select title=\"REGISTRATION.SNOW.AVALANCHE_PROBLEM.WEAK_LAYER_DEPTH\" kdvKey=\"Snow_AvalCauseDepthKDV\"\r\n        [(value)]=\"avalancheEvalProblemCopy.AvalCauseDepthTID\"></app-kdv-select>\r\n      <ion-item *ngFor=\"let avalancheCauseAttribute of avalancheCauseAttributes\">\r\n        <ion-label class=\"ion-text-wrap\"> {{ avalancheCauseAttribute.kdvElement.Name }}</ion-label>\r\n        <ion-checkbox mode=\"md\" slot=\"start\" [(ngModel)]=\"avalancheCauseAttribute.selected\"></ion-checkbox>\r\n      </ion-item>\r\n    </ng-container>\r\n    <ion-list-header class=\"ion-text-uppercase\">\r\n      <ion-label>\r\n        {{ 'REGISTRATION.SNOW.AVALANCHE_PROBLEM.AVALANCHE_PROBABILITY' | translate}}\r\n      </ion-label>\r\n    </ion-list-header>\r\n    <app-kdv-select title=\"REGISTRATION.SNOW.AVALANCHE_PROBLEM.AVALANCHE_TYPE\" kdvKey=\"Snow_AvalancheExtKDV\"\r\n      [(value)]=\"avalancheEvalProblemCopy.AvalancheExtTID\" [filter]=\"avalancheExtKdvFilter\"></app-kdv-select>\r\n    <app-kdv-select title=\"REGISTRATION.SNOW.AVALANCHE_PROBLEM.AVALANCHE_TRIGGER_PROBABILITY\"\r\n      kdvKey=\"Snow_AvalTriggerSimpleKDV\" [(value)]=\"avalancheEvalProblemCopy.AvalTriggerSimpleTID\"></app-kdv-select>\r\n    <app-kdv-select title=\"REGISTRATION.SNOW.AVALANCHE_PROBLEM.AVALANCHE_DESTRUCTIVE_SIZE\"\r\n      kdvKey=\"Snow_DestructiveSizeKDV\" [(value)]=\"avalancheEvalProblemCopy.DestructiveSizeTID\"></app-kdv-select>\r\n    <ion-list-header class=\"ion-text-uppercase\">\r\n      <ion-label>\r\n        {{ 'REGISTRATION.SNOW.AVALANCHE_PROBLEM.PROPAGATION' | translate}}\r\n      </ion-label>\r\n    </ion-list-header>\r\n    <app-kdv-select title=\"REGISTRATION.SNOW.AVALANCHE_PROBLEM.PROPAGATION\" kdvKey=\"Snow_AvalPropagationKDV\"\r\n      [(value)]=\"avalancheEvalProblemCopy.AvalPropagationTID\"></app-kdv-select>\r\n    <app-exposed-height [(exposedHeightComboTID)]=\"avalancheEvalProblemCopy.ExposedHeightComboTID\"\r\n      [(exposedHight1)]=\"avalancheEvalProblemCopy.ExposedHeight1\"\r\n      [(exposedHight2)]=\"avalancheEvalProblemCopy.ExposedHeight2\"></app-exposed-height>\r\n    <app-valid-exposition [(validExposition)]=\"avalancheEvalProblemCopy.ValidExposition\"></app-valid-exposition>\r\n    <app-text-comment title=\"REGISTRATION.DANGER_OBS.COMMENT\" [(value)]=\"avalancheEvalProblemCopy.Comment\">\r\n    </app-text-comment>\r\n  </ion-list>\r\n  <app-modal-save-or-delete-buttons (saveClicked)=\"ok()\" (deleteClicked)=\"delete()\" [showDelete]=\"!isNew\">\r\n  </app-modal-save-or-delete-buttons>\r\n</ion-content>","import { Component, OnInit, Input, OnDestroy } from '@angular/core';\r\nimport {\r\n  AvalancheEvalProblem2EditModel,\r\n  KdvElement\r\n} from '@varsom-regobs-common/regobs-api';\r\nimport { ModalController } from '@ionic/angular';\r\nimport { IsEmptyHelper } from '../../../../../../core/helpers/is-empty.helper';\r\nimport { KdvService } from '../../../../../../core/services/kdv/kdv.service';\r\nimport { Subscription, combineLatest } from 'rxjs';\r\n\r\nconst NO_WEAK_LAYER_KDV_VALUE = 24;\r\n\r\n@Component({\r\n  selector: 'app-avalanche-problem-modal',\r\n  templateUrl: './avalanche-problem-modal.page.html',\r\n  styleUrls: ['./avalanche-problem-modal.page.scss']\r\n})\r\nexport class AvalancheProblemModalPage implements OnInit, OnDestroy {\r\n  @Input() avalancheEvalProblem: AvalancheEvalProblem2EditModel;\r\n  avalancheEvalProblemCopy: AvalancheEvalProblem2EditModel;\r\n  isNew = false;\r\n  avalancheExtKdvFilter: Function;\r\n\r\n  get noWeakLayers() {\r\n    return (\r\n      this.avalancheEvalProblemCopy.AvalCauseTID === NO_WEAK_LAYER_KDV_VALUE\r\n    );\r\n  }\r\n\r\n  set noWeakLayers(val: boolean) {\r\n    this.avalancheEvalProblemCopy.AvalCauseTID = val\r\n      ? NO_WEAK_LAYER_KDV_VALUE\r\n      : undefined;\r\n  }\r\n\r\n  avalancheProblemView: { AvalancheExtTID: number; AvalCauseTID: number }[];\r\n  avalancheCauseAttributes: { kdvElement: KdvElement; selected: boolean }[];\r\n  exposition: number[];\r\n\r\n  private viewSubscription: Subscription;\r\n\r\n  constructor(\r\n    private modalController: ModalController,\r\n    private kdvService: KdvService\r\n  ) {}\r\n\r\n  ngOnInit() {\r\n    this.avalancheExtKdvFilter = this.internalAvalancheExtKdvFilter.bind(this);\r\n\r\n    if (this.avalancheEvalProblem) {\r\n      this.avalancheEvalProblemCopy = { ...this.avalancheEvalProblem };\r\n    } else {\r\n      this.avalancheEvalProblemCopy = {};\r\n      this.isNew = true;\r\n    }\r\n\r\n    this.viewSubscription = combineLatest(\r\n      this.kdvService.getKdvRepositoryByKeyObservable(\r\n        'Snow_AvalCauseAttributeFlags'\r\n      ),\r\n      this.kdvService.getViewRepositoryByKeyObservable('AvalancheProblemMenu3V')\r\n    ).subscribe(([snowCauseAttributesKdvElements, avalancheProblemView]) => {\r\n      this.avalancheProblemView = avalancheProblemView;\r\n      this.avalancheCauseAttributes = this.getAvalancheCauseAttributes(\r\n        snowCauseAttributesKdvElements\r\n      );\r\n    });\r\n  }\r\n\r\n  ngOnDestroy(): void {\r\n    if (this.viewSubscription) {\r\n      this.viewSubscription.unsubscribe();\r\n    }\r\n  }\r\n\r\n  internalAvalancheExtKdvFilter(id: number) {\r\n    const avalCauseTid = this.avalancheEvalProblemCopy.AvalCauseTID || 0;\r\n    const views = this.avalancheProblemView\r\n      .filter((v) => v.AvalCauseTID === avalCauseTid)\r\n      .map((v) => v.AvalancheExtTID);\r\n    return views.indexOf(id) >= 0;\r\n  }\r\n\r\n  getAvalancheCauseAttributes(\r\n    kdvElements: KdvElement[]\r\n  ): {\r\n      kdvElement: KdvElement;\r\n      selected: boolean;\r\n    }[] {\r\n    return kdvElements.map((val) => ({\r\n          kdvElement: val,\r\n          selected: this.isAvalancheCauseSelected(val)\r\n        }));\r\n  }\r\n\r\n  isAvalancheCauseSelected(kdvElement: KdvElement): boolean {\r\n    switch (kdvElement.Id) {\r\n      case 1:\r\n        return this.avalancheEvalProblemCopy.AvalCauseAttributeLightTID === kdvElement.Id;\r\n      case 2:\r\n        return this.avalancheEvalProblemCopy.AvalCauseAttributeThinTID === kdvElement.Id;\r\n      case 4:\r\n        return this.avalancheEvalProblemCopy.AvalCauseAttributeSoftTID === kdvElement.Id;\r\n      case 8:\r\n        return this.avalancheEvalProblemCopy.AvalCauseAttributeCrystalTID === kdvElement.Id;\r\n    }\r\n    return false;\r\n  }\r\n\r\n  cancel() {\r\n    this.modalController.dismiss();\r\n  }\r\n\r\n  // getAvalacheCauseAttributeValue(\r\n  //   avalancheCauseAttributes: { kdvElement: KdvElement; selected: boolean }[]\r\n  // ) {\r\n  //   return avalancheCauseAttributes.reduce(function (prevVal, curVal) {\r\n  //     return prevVal + (curVal.selected ? curVal.kdvElement.Id : 0);\r\n  //   }, 0);\r\n  // }\r\n\r\n  resetAvalancheCauseFields() {\r\n    this.avalancheEvalProblemCopy.AvalCauseAttributeLightTID = undefined;\r\n    this.avalancheEvalProblemCopy.AvalCauseAttributeThinTID = undefined;\r\n    this.avalancheEvalProblemCopy.AvalCauseAttributeSoftTID = undefined;\r\n    this.avalancheEvalProblemCopy.AvalCauseAttributeCrystalTID = undefined;\r\n    this.avalancheEvalProblemCopy.AvalCauseDepthTID = undefined;\r\n  }\r\n\r\n  ok() {\r\n    if (this.noWeakLayers) {\r\n      this.resetAvalancheCauseFields();\r\n    } else {\r\n      // const causeAttribute = this.getAvalacheCauseAttributeValue(\r\n      //   this.avalancheCauseAttributes\r\n      // );\r\n      // this.avalancheEvalProblemCopy.AvalCauseAttributes =\r\n      //   causeAttribute > 0 ? causeAttribute : undefined;\r\n      for (const val of this.avalancheCauseAttributes) {\r\n        switch (val.kdvElement.Id) {\r\n          case 1:\r\n            this.avalancheEvalProblemCopy.AvalCauseAttributeLightTID = val.selected\r\n              ? val.kdvElement.Id\r\n              : undefined;\r\n            break;\r\n          case 2:\r\n            this.avalancheEvalProblemCopy.AvalCauseAttributeThinTID = val.selected\r\n              ? val.kdvElement.Id\r\n              : undefined;\r\n            break;\r\n          case 4:\r\n            this.avalancheEvalProblemCopy.AvalCauseAttributeSoftTID = val.selected\r\n              ? val.kdvElement.Id\r\n              : undefined;\r\n            break;\r\n          case 8:\r\n            this.avalancheEvalProblemCopy.AvalCauseAttributeCrystalTID = val.selected\r\n              ? val.kdvElement.Id\r\n              : undefined;\r\n            break;\r\n        }\r\n      }\r\n    }\r\n    if (IsEmptyHelper.isEmpty(this.avalancheEvalProblemCopy)) {\r\n      this.modalController.dismiss({ delete: true });\r\n    } else {\r\n      this.modalController.dismiss(this.avalancheEvalProblemCopy);\r\n    }\r\n  }\r\n\r\n  delete() {\r\n    this.modalController.dismiss({ delete: true });\r\n  }\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\nimport { AvalancheProblemPage } from './avalanche-problem.page';\r\nimport { SharedComponentsModule } from '../../../shared-components.module';\r\nimport { AvalancheProblemModalPageModule } from './avalanche-problem-modal/avalanche-problem-modal.module';\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: '',\r\n    component: AvalancheProblemPage\r\n  }\r\n];\r\n\r\n@NgModule({\r\n  imports: [\r\n    SharedComponentsModule,\r\n    AvalancheProblemModalPageModule,\r\n    RouterModule.forChild(routes)\r\n  ],\r\n  declarations: [AvalancheProblemPage]\r\n})\r\nexport class AvalancheProblemPageModule {}\r\n","<ion-header>\r\n  <ion-toolbar appHeaderColor mode=\"ios\">\r\n    <ion-buttons slot=\"start\">\r\n      <ion-back-button text=\"\" defaultHref=\"/\"></ion-back-button>\r\n    </ion-buttons>\r\n    <ion-title>\r\n      {{'REGISTRATION.SNOW.AVALANCHE_PROBLEM.TITLE' | translate}}\r\n    </ion-title>\r\n  </ion-toolbar>\r\n</ion-header>\r\n<ion-content>\r\n  <app-registration-content-wrapper *ngIf=\"registration && registration.request.AvalancheEvalProblem2\"\r\n    [registration]=\"registration\" [registrationTid]=\"registrationTid\" (reset)=\"reset()\">\r\n    <ion-list lines=\"full\">\r\n      <ion-list-header class=\"ion-text-uppercase\">\r\n        <ion-label>\r\n          {{ 'REGISTRATION.SNOW.AVALANCHE_PROBLEM.TITLE' | translate}}\r\n        </ion-label>\r\n      </ion-list-header>\r\n      <ion-reorder-group disabled=\"false\" (ionItemReorder)=\"onProblemReorder($event)\">\r\n        <ion-item detail=\"true\" (click)=\"addOrEditAvalancheProblem(i)\"\r\n          *ngFor=\"let avalancheEvalProblem of registration.request.AvalancheEvalProblem2; let i = index\">\r\n            <ion-label>{{ getDescription(avalancheEvalProblem) | translate }}</ion-label>\r\n            <ion-reorder slot=\"end\"></ion-reorder>\r\n        </ion-item>\r\n      </ion-reorder-group>\r\n      <ion-item (click)=\"addOrEditAvalancheProblem()\">\r\n        <ion-icon color=\"primary\" name=\"add-circle-outline\" slot=\"start\"></ion-icon>\r\n        <ion-label>{{'REGISTRATION.SNOW.AVALANCHE_PROBLEM.ADD_NEW' | translate}}</ion-label>\r\n      </ion-item>\r\n      <ion-list-header class=\"ion-text-uppercase\">\r\n        <ion-label>\r\n          {{ 'REGISTRATION.ADD_IMAGES' | translate}}\r\n        </ion-label>\r\n      </ion-list-header>\r\n      <app-add-picture-item [geoHazard]=\"registration.geoHazard\" [registrationId]=\"registration.id\"\r\n        [registrationTid]=\"registrationTid\" [onBeforeAdd]=\"getSaveFunc()\"></app-add-picture-item>\r\n    </ion-list>\r\n  </app-registration-content-wrapper>\r\n</ion-content>","import { Component, NgZone } from '@angular/core';\r\nimport { BasePage } from '../../base.page';\r\nimport { BasePageService } from '../../base-page-service';\r\nimport { ActivatedRoute } from '@angular/router';\r\nimport { ModalController } from '@ionic/angular';\r\nimport { RegistrationTid } from 'src/app/modules/common-registration/registration.models';\r\nimport { ItemReorderEventDetail } from '@ionic/core';\r\nimport {\r\n  AvalancheEvalProblem2EditModel,\r\n  KdvElement\r\n} from '@varsom-regobs-common/regobs-api';\r\nimport { AvalancheProblemModalPage } from './avalanche-problem-modal/avalanche-problem-modal.page';\r\nimport { KdvService } from '../../../../../core/services/kdv/kdv.service';\r\nimport { Subscription } from 'rxjs';\r\nimport { ArrayHelper } from 'src/app/core/helpers/array-helper';\r\n\r\n@Component({\r\n  selector: 'app-avalanche-problem',\r\n  templateUrl: './avalanche-problem.page.html',\r\n  styleUrls: ['./avalanche-problem.page.scss']\r\n})\r\nexport class AvalancheProblemPage extends BasePage {\r\n  private avalancheCause: KdvElement[];\r\n  private kdvSubscription: Subscription;\r\n\r\n  constructor(\r\n    basePageService: BasePageService,\r\n    activatedRoute: ActivatedRoute,\r\n    private modalController: ModalController,\r\n    private ngZone: NgZone,\r\n    private kdvService: KdvService\r\n  ) {\r\n    super(\r\n      RegistrationTid.AvalancheEvalProblem2,\r\n      basePageService,\r\n      activatedRoute\r\n    );\r\n    this.avalancheCause = [];\r\n  }\r\n\r\n  onInit() {\r\n    this.kdvSubscription = this.kdvService\r\n      .getKdvRepositoryByKeyObservable('Snow_AvalCauseKDV')\r\n      .subscribe((val) => {\r\n        this.avalancheCause = val;\r\n      });\r\n  }\r\n\r\n  onBeforeLeave() {\r\n    if (this.kdvSubscription) {\r\n      this.kdvSubscription.unsubscribe();\r\n    }\r\n  }\r\n\r\n  async addOrEditAvalancheProblem(index?: number) {\r\n    if (\r\n      this.registration &&\r\n      this.registration.request &&\r\n      this.registration.request.AvalancheEvalProblem2\r\n    ) {\r\n      const modal = await this.modalController.create({\r\n        component: AvalancheProblemModalPage,\r\n        componentProps: {\r\n          avalancheEvalProblem: this.registration.request.AvalancheEvalProblem2[\r\n            index\r\n          ]\r\n        }\r\n      });\r\n      modal.present();\r\n      const result = await modal.onDidDismiss();\r\n      this.ngZone.run(() => {\r\n        if (\r\n          this.registration &&\r\n          this.registration.request &&\r\n          this.registration.request.AvalancheEvalProblem2\r\n        ) {\r\n          if (result.data) {\r\n            if (result.data.delete) {\r\n              this.registration.request.AvalancheEvalProblem2.splice(index, 1);\r\n            } else {\r\n              const avalancheEvalProblem: AvalancheEvalProblem2EditModel =\r\n                result.data;\r\n              if (index !== undefined) {\r\n                this.registration.request.AvalancheEvalProblem2[\r\n                  index\r\n                ] = avalancheEvalProblem;\r\n              } else {\r\n                this.registration.request.AvalancheEvalProblem2.push(\r\n                  avalancheEvalProblem\r\n                );\r\n              }\r\n            }\r\n          }\r\n        }\r\n      });\r\n    }\r\n  }\r\n\r\n  getDescription(avalancheEvalProblem: AvalancheEvalProblem2EditModel): string {\r\n    const cause = this.avalancheCause.find(\r\n      (c) => c.Id === avalancheEvalProblem.AvalCauseTID\r\n    );\r\n    if (cause) {\r\n      return cause.Name;\r\n    } else {\r\n      return 'REGISTRATION.SNOW.AVALANCHE_PROBLEM.UNKNOWN_TYPE';\r\n    }\r\n  }\r\n\r\n  onProblemReorder(event: CustomEvent<ItemReorderEventDetail>): void {\r\n    this.registration.request.AvalancheEvalProblem2 = ArrayHelper.reorderList(\r\n      this.registration.request.AvalancheEvalProblem2,\r\n      event.detail.from,\r\n      event.detail.to\r\n    );\r\n    event.detail.complete();\r\n  }\r\n}\r\n"]}