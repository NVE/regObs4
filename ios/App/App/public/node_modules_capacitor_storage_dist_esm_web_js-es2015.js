"use strict";
(self["webpackChunkregobs4"] = self["webpackChunkregobs4"] || []).push([["node_modules_capacitor_storage_dist_esm_web_js"],{

/***/ 62433:
/*!*********************************************************!*\
  !*** ./node_modules/@capacitor/storage/dist/esm/web.js ***!
  \*********************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "StorageWeb": function() { return /* binding */ StorageWeb; }
/* harmony export */ });
/* harmony import */ var C_Repos_regobs_regObs4_node_modules_angular_devkit_build_angular_node_modules_babel_runtime_helpers_esm_asyncToGenerator__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./node_modules/@angular-devkit/build-angular/node_modules/@babel/runtime/helpers/esm/asyncToGenerator */ 80151);
/* harmony import */ var _capacitor_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @capacitor/core */ 41899);


class StorageWeb extends _capacitor_core__WEBPACK_IMPORTED_MODULE_1__.WebPlugin {
  constructor() {
    super(...arguments);
    this.group = 'CapacitorStorage';
  }

  configure({
    group
  }) {
    var _this = this;

    return (0,C_Repos_regobs_regObs4_node_modules_angular_devkit_build_angular_node_modules_babel_runtime_helpers_esm_asyncToGenerator__WEBPACK_IMPORTED_MODULE_0__.default)(function* () {
      if (typeof group === 'string') {
        _this.group = group;
      }
    })();
  }

  get(options) {
    var _this2 = this;

    return (0,C_Repos_regobs_regObs4_node_modules_angular_devkit_build_angular_node_modules_babel_runtime_helpers_esm_asyncToGenerator__WEBPACK_IMPORTED_MODULE_0__.default)(function* () {
      const value = _this2.impl.getItem(_this2.applyPrefix(options.key));

      return {
        value
      };
    })();
  }

  set(options) {
    var _this3 = this;

    return (0,C_Repos_regobs_regObs4_node_modules_angular_devkit_build_angular_node_modules_babel_runtime_helpers_esm_asyncToGenerator__WEBPACK_IMPORTED_MODULE_0__.default)(function* () {
      _this3.impl.setItem(_this3.applyPrefix(options.key), options.value);
    })();
  }

  remove(options) {
    var _this4 = this;

    return (0,C_Repos_regobs_regObs4_node_modules_angular_devkit_build_angular_node_modules_babel_runtime_helpers_esm_asyncToGenerator__WEBPACK_IMPORTED_MODULE_0__.default)(function* () {
      _this4.impl.removeItem(_this4.applyPrefix(options.key));
    })();
  }

  keys() {
    var _this5 = this;

    return (0,C_Repos_regobs_regObs4_node_modules_angular_devkit_build_angular_node_modules_babel_runtime_helpers_esm_asyncToGenerator__WEBPACK_IMPORTED_MODULE_0__.default)(function* () {
      const keys = _this5.rawKeys().map(k => k.substring(_this5.prefix.length));

      return {
        keys
      };
    })();
  }

  clear() {
    var _this6 = this;

    return (0,C_Repos_regobs_regObs4_node_modules_angular_devkit_build_angular_node_modules_babel_runtime_helpers_esm_asyncToGenerator__WEBPACK_IMPORTED_MODULE_0__.default)(function* () {
      for (const key of _this6.rawKeys()) {
        _this6.impl.removeItem(key);
      }
    })();
  }

  migrate() {
    var _this7 = this;

    return (0,C_Repos_regobs_regObs4_node_modules_angular_devkit_build_angular_node_modules_babel_runtime_helpers_esm_asyncToGenerator__WEBPACK_IMPORTED_MODULE_0__.default)(function* () {
      var _a;

      const migrated = [];
      const existing = [];
      const oldprefix = '_cap_';
      const keys = Object.keys(_this7.impl).filter(k => k.indexOf(oldprefix) === 0);

      for (const oldkey of keys) {
        const key = oldkey.substring(oldprefix.length);
        const value = (_a = _this7.impl.getItem(oldkey)) !== null && _a !== void 0 ? _a : '';
        const {
          value: currentValue
        } = yield _this7.get({
          key
        });

        if (typeof currentValue === 'string') {
          existing.push(key);
        } else {
          yield _this7.set({
            key,
            value
          });
          migrated.push(key);
        }
      }

      return {
        migrated,
        existing
      };
    })();
  }

  removeOld() {
    var _this8 = this;

    return (0,C_Repos_regobs_regObs4_node_modules_angular_devkit_build_angular_node_modules_babel_runtime_helpers_esm_asyncToGenerator__WEBPACK_IMPORTED_MODULE_0__.default)(function* () {
      const oldprefix = '_cap_';
      const keys = Object.keys(_this8.impl).filter(k => k.indexOf(oldprefix) === 0);

      for (const oldkey of keys) {
        _this8.impl.removeItem(oldkey);
      }
    })();
  }

  get impl() {
    return window.localStorage;
  }

  get prefix() {
    return this.group === 'NativeStorage' ? '' : `${this.group}.`;
  }

  rawKeys() {
    return Object.keys(this.impl).filter(k => k.indexOf(this.prefix) === 0);
  }

  applyPrefix(key) {
    return this.prefix + key;
  }

}

/***/ })

}]);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibm9kZV9tb2R1bGVzX2NhcGFjaXRvcl9zdG9yYWdlX2Rpc3RfZXNtX3dlYl9qcy1lczIwMTUuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7Ozs7OztBQUFBO0FBQ08sTUFBTUMsVUFBTixTQUF5QkQsc0RBQXpCLENBQW1DO0FBQ3RDRSxFQUFBQSxXQUFXLEdBQUc7QUFDVixVQUFNLEdBQUdDLFNBQVQ7QUFDQSxTQUFLQyxLQUFMLEdBQWEsa0JBQWI7QUFDSDs7QUFDS0MsRUFBQUEsU0FBUyxDQUFDO0FBQUVELElBQUFBO0FBQUYsR0FBRCxFQUFZO0FBQUE7O0FBQUE7QUFDdkIsVUFBSSxPQUFPQSxLQUFQLEtBQWlCLFFBQXJCLEVBQStCO0FBQzNCLGFBQUksQ0FBQ0EsS0FBTCxHQUFhQSxLQUFiO0FBQ0g7QUFIc0I7QUFJMUI7O0FBQ0tFLEVBQUFBLEdBQUcsQ0FBQ0MsT0FBRCxFQUFVO0FBQUE7O0FBQUE7QUFDZixZQUFNQyxLQUFLLEdBQUcsTUFBSSxDQUFDQyxJQUFMLENBQVVDLE9BQVYsQ0FBa0IsTUFBSSxDQUFDQyxXQUFMLENBQWlCSixPQUFPLENBQUNLLEdBQXpCLENBQWxCLENBQWQ7O0FBQ0EsYUFBTztBQUFFSixRQUFBQTtBQUFGLE9BQVA7QUFGZTtBQUdsQjs7QUFDS0ssRUFBQUEsR0FBRyxDQUFDTixPQUFELEVBQVU7QUFBQTs7QUFBQTtBQUNmLFlBQUksQ0FBQ0UsSUFBTCxDQUFVSyxPQUFWLENBQWtCLE1BQUksQ0FBQ0gsV0FBTCxDQUFpQkosT0FBTyxDQUFDSyxHQUF6QixDQUFsQixFQUFpREwsT0FBTyxDQUFDQyxLQUF6RDtBQURlO0FBRWxCOztBQUNLTyxFQUFBQSxNQUFNLENBQUNSLE9BQUQsRUFBVTtBQUFBOztBQUFBO0FBQ2xCLFlBQUksQ0FBQ0UsSUFBTCxDQUFVTyxVQUFWLENBQXFCLE1BQUksQ0FBQ0wsV0FBTCxDQUFpQkosT0FBTyxDQUFDSyxHQUF6QixDQUFyQjtBQURrQjtBQUVyQjs7QUFDS0ssRUFBQUEsSUFBSSxHQUFHO0FB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QyxDQUFDWSxPQUFGLENBQVUsS0FBS1YsTUFBZixNQUEyQixDQUE5RCxDQUFQO0FBQ0g7O0FBQ0RYLEVBQUFBLFdBQVcsQ0FBQ0MsR0FBRCxFQUFNO0FBQ2IsV0FBTyxLQUFLVSxNQUFMLEdBQWNWLEdBQXJCO0FBQ0g7O0FBbkVxQyIsInNvdXJjZXMiOlsiLi9ub2RlX21vZHVsZXMvQGNhcGFjaXRvci9zdG9yYWdlL2Rpc3QvZXNtL3dlYi5qcyJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBXZWJQbHVnaW4gfSBmcm9tICdAY2FwYWNpdG9yL2NvcmUnO1xuZXhwb3J0IGNsYXNzIFN0b3JhZ2VXZWIgZXh0ZW5kcyBXZWJQbHVnaW4ge1xuICAgIGNvbnN0cnVjdG9yKCkge1xuICAgICAgICBzdXBlciguLi5hcmd1bWVudHMpO1xuICAgICAgICB0aGlzLmdyb3VwID0gJ0NhcGFjaXRvclN0b3JhZ2UnO1xuICAgIH1cbiAgICBhc3luYyBjb25maWd1cmUoeyBncm91cCB9KSB7XG4gICAgICAgIGlmICh0eXBlb2YgZ3JvdXAgPT09ICdzdHJpbmcnKSB7XG4gICAgICAgICAgICB0aGlzLmdyb3VwID0gZ3JvdXA7XG4gICAgICAgIH1cbiAgICB9XG4gICAgYXN5bmMgZ2V0KG9wdGlvbnMpIHtcbiAgICAgICAgY29uc3QgdmFsdWUgPSB0aGlzLmltcGwuZ2V0SXRlbSh0aGlzLmFwcGx5UHJlZml4KG9wdGlvbnMua2V5KSk7XG4gICAgICAgIHJldHVybiB7IHZhbHVlIH07XG4gICAgfVxuICAgIGFzeW5jIHNldChvcHRpb25zKSB7XG4gICAgICAgIHRoaXMuaW1wbC5zZXRJdGVtKHRoaXMuYXBwbHlQcmVmaXgob3B0aW9ucy5rZXkpLCBvcHRpb25zLnZhbHVlKTtcbiAgICB9XG4gICAgYXN5bmMgcmVtb3ZlKG9wdGlvbnMpIHtcbiAgICAgICAgdGhpcy5pbXBsLnJlbW92ZUl0ZW0odGhpcy5hcHBseVByZWZpeChvcHRpb25zLmtleSkpO1xuICAgIH1cbiAgICBhc3luYyBrZXlzKCkge1xuICAgICAgICBjb25zdCBrZXlzID0gdGhpcy5yYXdLZXlzKCkubWFwKGsgPT4gay5zdWJzdHJpbmcodGhpcy5wcmVmaXgubGVuZ3RoKSk7XG4gICAgICAgIHJldHVybiB7IGtleXMgfTtcbiAgICB9XG4gICAgYXN5bmMgY2xlYXIoKSB7XG4gICAgICAgIGZvciAoY29uc3Qga2V5IG9mIHRoaXMucmF3S2V5cygpKSB7XG4gICAgICAgICAgICB0aGlzLmltcGwucmVtb3ZlSXRlbShrZXkpO1xuICAgICAgICB9XG4gICAgfVxuICAgIGFzeW5jIG1pZ3JhdGUoKSB7XG4gICAgICAgIHZhciBfYTtcbiAgICAgICAgY29uc3QgbWlncmF0ZWQgPSBbXTtcbiAgICAgICAgY29uc3QgZXhpc3RpbmcgPSBbXTtcbiAgICAgICAgY29uc3Qgb2xkcHJlZml4ID0gJ19jYXBfJztcbiAgICAgICAgY29uc3Qga2V5cyA9IE9iamVjdC5rZXlzKHRoaXMuaW1wbCkuZmlsdGVyKGsgPT4gay5pbmRleE9mKG9sZHByZWZpeCkgPT09IDApO1xuICAgICAgICBmb3IgKGNvbnN0IG9sZGtleSBvZiBrZXlzKSB7XG4gICAgICAgICAgICBjb25zdCBrZXkgPSBvbGRrZXkuc3Vic3RyaW5nKG9sZHByZWZpeC5sZW5ndGgpO1xuICAgICAgICAgICAgY29uc3QgdmFsdWUgPSAoX2EgPSB0aGlzLmltcGwuZ2V0SXRlbShvbGRrZXkpKSAhPT0gbnVsbCAmJiBfYSAhPT0gdm9pZCAwID8gX2EgOiAnJztcbiAgICAgICAgICAgIGNvbnN0IHsgdmFsdWU6IGN1cnJlbnRWYWx1ZSB9ID0gYXdhaXQgdGhpcy5nZXQoeyBrZXkgfSk7XG4gICAgICAgICAgICBpZiAodHlwZW9mIGN1cnJlbnRWYWx1ZSA9PT0gJ3N0cmluZycpIHtcbiAgICAgICAgICAgICAgICBleGlzdGluZy5wdXNoKGtleSk7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBlbHNlIHtcbiAgICAgICAgICAgICAgICBhd2FpdCB0aGlzLnNldCh7IGtleSwgdmFsdWUgfSk7XG4gICAgICAgICAgICAgICAgbWlncmF0ZWQucHVzaChrZXkpO1xuICAgICAgICAgICAgfVxuICAgICAgICB9XG4gICAgICAgIHJldHVybiB7IG1pZ3JhdGVkLCBleGlzdGluZyB9O1xuICAgIH1cbiAgICBhc3luYyByZW1vdmVPbGQoKSB7XG4gICAgICAgIGNvbnN0IG9sZHByZWZpeCA9ICdfY2FwXyc7XG4gICAgICAgIGNvbnN0IGtleXMgPSBPYmplY3Qua2V5cyh0aGlzLmltcGwpLmZpbHRlcihrID0+IGsuaW5kZXhPZihvbGRwcmVmaXgpID09PSAwKTtcbiAgICAgICAgZm9yIChjb25zdCBvbGRrZXkgb2Yga2V5cykge1xuICAgICAgICAgICAgdGhpcy5pbXBsLnJlbW92ZUl0ZW0ob2xka2V5KTtcbiAgICAgICAgfVxuICAgIH1cbiAgICBnZXQgaW1wbCgpIHtcbiAgICAgICAgcmV0dXJuIHdpbmRvdy5sb2NhbFN0b3JhZ2U7XG4gICAgfVxuICAgIGdldCBwcmVmaXgoKSB7XG4gICAgICAgIHJldHVybiB0aGlzLmdyb3VwID09PSAnTmF0aXZlU3RvcmFnZScgPyAnJyA6IGAke3RoaXMuZ3JvdXB9LmA7XG4gICAgfVxuICAgIHJhd0tleXMoKSB7XG4gICAgICAgIHJldHVybiBPYmplY3Qua2V5cyh0aGlzLmltcGwpLmZpbHRlcihrID0+IGsuaW5kZXhPZih0aGlzLnByZWZpeCkgPT09IDApO1xuICAgIH1cbiAgICBhcHBseVByZWZpeChrZXkpIHtcbiAgICAgICAgcmV0dXJuIHRoaXMucHJlZml4ICsga2V5O1xuICAgIH1cbn1cbiJdLCJuYW1lcyI6WyJXZWJQbHVnaW4iLCJTdG9yYWdlV2ViIiwiY29uc3RydWN0b3IiLCJhcmd1bWVudHMiLCJncm91cCIsImNvbmZpZ3VyZSIsImdldCIsIm9wdGlvbnMiLCJ2YWx1ZSIsImltcGwiLCJnZXRJdGVtIiwiYXBwbHlQcmVmaXgiLCJrZXkiLCJzZXQiLCJzZXRJdGVtIiwicmVtb3ZlIiwicmVtb3ZlSXRlbSIsImtleXMiLCJyYXdLZXlzIiwibWFwIiwiayIsInN1YnN0cmluZyIsInByZWZpeCIsImxlbmd0aCIsImNsZWFyIiwibWlncmF0ZSIsIl9hIiwibWlncmF0ZWQiLCJleGlzdGluZyIsIm9sZHByZWZpeCIsIk9iamVjdCIsImZpbHRlciIsImluZGV4T2YiLCJvbGRrZXkiLCJjdXJyZW50VmFsdWUiLCJwdXNoIiwicmVtb3ZlT2xkIiwid2luZG93IiwibG9jYWxTdG9yYWdlIl0sInNvdXJjZVJvb3QiOiJ3ZWJwYWNrOi8vLyJ9