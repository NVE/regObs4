{"version":3,"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAKA,UAAMA,MAAM,GAAW,CACrB;AACEC,YAAI,EAAE,EADR;AAEEC,iBAAS,EAAEC;AAFb,OADqB,CAAvB;;UAWaC;;;;;yBAAAA;AAAe;;;cAAfA;;;kBAHF,CAACC,+DAAD,EAAeC,mEAAsBN,MAAtB,CAAf;;;;4HAGEI,kBAAe;AAAAG,yBAFXJ,kDAEW;AAFFK,oBADdH,+DACc,EADAC,yDACA;AAEE;AAHF;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACDxBG;;AACEA;;AACEA;;AAAiCA;;;;AACjCA;;AACFA;;AACAA;;AAAwDA;AAAAA;;AAAA;;AAAA;AAAA;;AACtDA;;AACAA;;;;AACFA;;AACAA;;AAAqFA;AAAAA;;AAAA;;AAAA;AAAA;;AACnFA;;;;AAAgCA;;AACpCA;;;;;;AATqCA;;AAAAA;;AAKjCA;;AAAAA;;AAGAA;;AAAAA;;;;;;AAXNA;;AACEA;;AAYFA;;;;;;;;;;AAZ0BA;;AAAAA,uGAA8B,UAA9B,EAA8BC,GAA9B;;;;;;;;AAcxBD;;AAAqFA;AAAAA;;AAAA;;AAAA;AAAA;;AACnFA;;;;AACFA;;;;AADEA;;AAAAA;;;;UCZSE;AAGX,4BACUC,iBADV,EAEUC,kBAFV,EAGUC,mBAHV,EAGkD;AAAA;;AAFxC;AACA;AACA;AACN;;;;iBAEJ,oBAAQ;AACN,iBAAKC,aAAL,GAAqB,KAAKH,iBAAL,CAAuBG,aAA5C;AACD;;;iBAED,kBAAM;AACJ,mBAAO,KAAKH,iBAAL,CAAuBI,MAAvB,EAAP;AACD;;;iBAED,kBAAM;AACJ,mBAAO,KAAKJ,iBAAL,CAAuBK,MAAvB,EAAP;AACD;;;iBAEK,sBAAU;;;;;;;;AACI,6BAAM,KAAKJ,kBAAL,CAAwBK,QAAxB,CACrBC,IADqB,CAEpB,qDAAI,UAACC,OAAD;AAAA,+BAAaC,2DAAoBD,OAApB,EAA6BE,SAA1C;AAAA,uBAAJ,CAFoB,EAGpB,sDAAK,CAAL,CAHoB,EAKrBC,SALqB,EAAN;;;AAAZD;;AAMiB,6BAAM,KAAKT,kBAAL,CAAwBW,SAAxB,CAC1BL,IAD0B,CACrB,sDAAK,CAAL,CADqB,EAE1BI,SAF0B,EAAN;;;AAAjBE;AAGN,2BAAKX,mBAAL,CAAyBY,gBAAzB,WACKJ,SADL,sBAC0B,KAAKK,yBAAL,CAA+BF,cAA/B,CAD1B;;;;;;;;;AAGD;;;iBAEO,mCAA0BG,OAA1B,EAA0C;AAChD,gBAAIA,OAAO,KAAKC,kEAAZ,IAA0BD,OAAO,KAAKC,kEAA1C,EAAsD;AACpD,qBAAO,OAAP;AACD;;AACD,mBAAO,IAAP;AACD;;;;;;;yBAzCUlB,YAASF;AAAA;;;cAATE;AAASmB;AAAAC;AAAAC;AAAAC;AAAAC;AAAA;ADftBzB;;AACEA;;AACEA;;AACEA;;AACFA;;AACAA;;AACEA;;;;AACFA;;AACFA;;AACFA;;AAEAA;;;;AAcAA;;;;AAnBMA;;AAAAA;;AAK4BA;;AAAAA;;;;;;;;;","names":["routes","path","component","_login_page__WEBPACK_IMPORTED_MODULE_0__","LoginPageModule","_shared_shared_module__WEBPACK_IMPORTED_MODULE_1__","_angular_router__WEBPACK_IMPORTED_MODULE_3__","declarations","imports","_angular_core__WEBPACK_IMPORTED_MODULE_5__","_r1","LoginPage","regobsAuthService","userSettingService","externalLinkService","loggedInUser$","signIn","logout","appMode$","pipe","appMode","_settings__WEBPACK_IMPORTED_MODULE_2__","myPageUrl","toPromise","language$","currentLangKey","openExternalLink","getSupportedMyPageLocales","langKey","_varsom_regobs_common_core__WEBPACK_IMPORTED_MODULE_9__","selectors","decls","vars","consts","template"],"sources":["webpack:///src/app/modules/login/pages/login/login.module.ts","webpack:///src/app/modules/login/pages/login/login.page.html","webpack:///src/app/modules/login/pages/login/login.page.ts"],"sourcesContent":["import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\nimport { LoginPage } from './login.page';\r\nimport { SharedModule } from '../../../shared/shared.module';\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: '',\r\n    component: LoginPage\r\n  }\r\n];\r\n\r\n@NgModule({\r\n  imports: [SharedModule, RouterModule.forChild(routes)],\r\n  declarations: [LoginPage]\r\n})\r\nexport class LoginPageModule {}\r\n","<ion-header>\r\n  <ion-toolbar appHeaderColor mode=\"ios\">\r\n    <ion-buttons slot=\"start\">\r\n      <ion-back-button text=\"\" defaultHref=\"/\"></ion-back-button>\r\n    </ion-buttons>\r\n    <ion-title>\r\n      {{ 'LOGIN.TITLE' | translate }}\r\n    </ion-title>\r\n  </ion-toolbar>\r\n</ion-header>\r\n\r\n<ion-content class=\"ion-padding\" *ngIf=\"loggedInUser$ | async as loggedInUser\">\r\n  <ion-list lines=\"none\" *ngIf=\"loggedInUser.isLoggedIn else login\">\r\n    <ion-item>\r\n      <ion-label class=\"ion-text-wrap\">{{ 'LOGIN.LOGGED_IN_AS' | translate }} {{ loggedInUser.email }}\r\n      </ion-label>\r\n    </ion-item>\r\n    <ion-button type=\"button\" fill=\"outline\" expand=\"block\" (click)=\"openMyPage()\">\r\n      <ion-icon slot=\"start\" name=\"push-outline\"></ion-icon>\r\n      {{'LOGIN.MY_PROFILE' | translate }}\r\n    </ion-button>\r\n    <ion-button class=\"logout-button\" expand=\"block\" type=\"submit\" color=\"varsom-orange\" (click)=\"logout()\">\r\n      {{ 'LOGIN.LOGOUT' | translate }}</ion-button>\r\n  </ion-list>\r\n</ion-content>\r\n<ng-template #login>\r\n  <ion-button class=\"logout-button\" expand=\"block\" type=\"submit\" color=\"varsom-orange\" (click)=\"signIn()\">\r\n    {{ 'LOGIN.LOGIN' | translate }}\r\n  </ion-button>\r\n</ng-template>","import { Component, OnInit } from '@angular/core';\r\nimport { Observable } from 'rxjs';\r\nimport { LoggedInUser } from '../../models/logged-in-user.model';\r\nimport { RegobsAuthService } from '../../../auth/services/regobs-auth.service';\r\nimport { UserSettingService } from '../../../../core/services/user-setting/user-setting.service';\r\nimport { settings } from '../../../../../settings';\r\nimport { map, take } from 'rxjs/operators';\r\nimport { ExternalLinkService } from '../../../../core/services/external-link/external-link.service';\r\nimport { LangKey } from '@varsom-regobs-common/core';\r\n\r\n@Component({\r\n  selector: 'app-login',\r\n  templateUrl: './login.page.html',\r\n  styleUrls: ['./login.page.scss']\r\n})\r\nexport class LoginPage implements OnInit {\r\n  loggedInUser$: Observable<LoggedInUser>;\r\n\r\n  constructor(\r\n    private regobsAuthService: RegobsAuthService,\r\n    private userSettingService: UserSettingService,\r\n    private externalLinkService: ExternalLinkService\r\n  ) {}\r\n\r\n  ngOnInit(): void {\r\n    this.loggedInUser$ = this.regobsAuthService.loggedInUser$;\r\n  }\r\n\r\n  signIn(): Promise<void> {\r\n    return this.regobsAuthService.signIn();\r\n  }\r\n\r\n  logout(): Promise<void> {\r\n    return this.regobsAuthService.logout();\r\n  }\r\n\r\n  async openMyPage(): Promise<void> {\r\n    const myPageUrl = await this.userSettingService.appMode$\r\n      .pipe(\r\n        map((appMode) => settings.authConfig[appMode].myPageUrl),\r\n        take(1)\r\n      )\r\n      .toPromise();\r\n    const currentLangKey = await this.userSettingService.language$\r\n      .pipe(take(1))\r\n      .toPromise();\r\n    this.externalLinkService.openExternalLink(\r\n      `${myPageUrl}?Culture=${this.getSupportedMyPageLocales(currentLangKey)}`\r\n    );\r\n  }\r\n\r\n  private getSupportedMyPageLocales(langKey: LangKey) {\r\n    if (langKey === LangKey.nb || langKey === LangKey.nn) {\r\n      return 'nb-NO';\r\n    }\r\n    return 'en';\r\n  }\r\n}\r\n"]}