{"version":3,"file":"src_app_pages_trip-log_trip-log_module_ts-es2015.js","mappings":"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","sources":["./src/app/components/trip-log-summary/trip-log-summary.component.ts","./src/app/components/trip-log-summary/trip-log-summary.component.html","./src/app/core/services/trip-logger/trip-log-state.enum.ts","./src/app/pages/trip-log/trip-log.module.ts","./src/app/pages/trip-log/trip-log.page.ts","./src/app/pages/trip-log/trip-log.page.html"],"sourcesContent":["import { Component, OnInit, OnDestroy } from '@angular/core';\r\nimport { TripLoggerService } from '../../core/services/trip-logger/trip-logger.service';\r\nimport moment from 'moment';\r\nimport { HelperService } from '../../core/services/helpers/helper.service';\r\nimport { TripLogItem } from '../../core/services/trip-logger/trip-log-item.model';\r\nimport { TripLogActivity } from '../../core/services/trip-logger/trip-log-activity.model';\r\nimport { TripLogState } from '../../core/services/trip-logger/trip-log-state.enum';\r\nimport { Subscription } from 'rxjs';\r\n\r\n@Component({\r\n  selector: 'app-trip-log-summary',\r\n  templateUrl: './trip-log-summary.component.html',\r\n  styleUrls: ['./trip-log-summary.component.scss']\r\n})\r\nexport class TripLogSummaryComponent implements OnInit, OnDestroy {\r\n  private tripLogSubscription: Subscription;\r\n  private tripLogActivitySubscription: Subscription;\r\n\r\n  lengthString: string;\r\n  interval: NodeJS.Timer;\r\n  tripLog: TripLogItem[];\r\n  tripLogActivity: TripLogActivity[];\r\n\r\n  constructor(\r\n    private tripLoggerService: TripLoggerService,\r\n    private helperService: HelperService\r\n  ) {}\r\n\r\n  ngOnInit() {\r\n    this.tripLogSubscription = this.tripLoggerService\r\n      .getTripLogAsObservable()\r\n      .subscribe((tripLog) => {\r\n        this.tripLog = tripLog;\r\n      });\r\n    this.tripLogActivitySubscription = this.tripLoggerService\r\n      .getTripLogActivityAsObservable()\r\n      .subscribe((tripLogActivity) => {\r\n        this.tripLogActivity = tripLogActivity;\r\n      });\r\n\r\n    this.interval = setInterval(async () => {\r\n      const lengthMs = this.calculateTimeFromTripLogActivity(\r\n        this.tripLogActivity\r\n      );\r\n      this.lengthString = this.helperService.formatMsToTime(lengthMs);\r\n    }, 1000);\r\n  }\r\n\r\n  calculateTimeFromTripLogActivity(tripLogActivity: TripLogActivity[]): number {\r\n    let lengthMs = 0;\r\n    if (tripLogActivity.length > 0) {\r\n      let lastItem: TripLogActivity = null;\r\n      for (const item of tripLogActivity) {\r\n        if (item.state === TripLogState.Paused) {\r\n          lengthMs += moment\r\n            .unix(item.timestamp)\r\n            .diff(moment.unix(lastItem.timestamp));\r\n        }\r\n        lastItem = item;\r\n      }\r\n      if (lastItem.state === TripLogState.Running) {\r\n        lengthMs += moment().diff(moment.unix(lastItem.timestamp));\r\n      }\r\n    }\r\n    return lengthMs;\r\n  }\r\n\r\n  ngOnDestroy(): void {\r\n    this.tripLogSubscription.unsubscribe();\r\n    this.tripLogActivitySubscription.unsubscribe();\r\n    clearInterval(this.interval);\r\n  }\r\n}\r\n","<ion-grid>\r\n  <ion-row>\r\n    <ion-col>\r\n      <ion-label color=\"medium\" position=\"stacked\" class=\"ion-text-uppercase\">Varighet</ion-label>\r\n      <ion-text>{{lengthString}}</ion-text>\r\n    </ion-col>\r\n    <ion-col>\r\n\r\n    </ion-col>\r\n  </ion-row>\r\n</ion-grid>","export enum TripLogState {\r\n  NotStarted = 'NOT_STARTED',\r\n  Paused = 'PAUSED',\r\n  Running = 'RUNNING',\r\n  Stopped = 'STOPPED'\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { FormsModule } from '@angular/forms';\r\nimport { Routes, RouterModule } from '@angular/router';\r\n\r\nimport { IonicModule } from '@ionic/angular';\r\n\r\nimport { TripLogPage } from './trip-log.page';\r\nimport { TranslateModule } from '@ngx-translate/core';\r\nimport { TripLogSummaryComponent } from '../../components/trip-log-summary/trip-log-summary.component';\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: '',\r\n    component: TripLogPage\r\n  }\r\n];\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    FormsModule,\r\n    IonicModule,\r\n    RouterModule.forChild(routes),\r\n    TranslateModule\r\n  ],\r\n  declarations: [TripLogPage, TripLogSummaryComponent]\r\n})\r\nexport class TripLogPageModule {}\r\n","import { Component, OnInit, OnDestroy } from '@angular/core';\r\nimport { BackgroundGeolocationService } from '../../core/services/background-geolocation/background-geolocation.service';\r\nimport { TripLoggerService } from '../../core/services/trip-logger/trip-logger.service';\r\nimport { TripLogState } from '../../core/services/trip-logger/trip-log-state.enum';\r\nimport { Subscription } from 'rxjs';\r\n\r\n@Component({\r\n  selector: 'app-trip-log',\r\n  templateUrl: './trip-log.page.html',\r\n  styleUrls: ['./trip-log.page.scss']\r\n})\r\nexport class TripLogPage implements OnInit, OnDestroy {\r\n  state: TripLogState = TripLogState.NotStarted;\r\n  private subscription: Subscription;\r\n\r\n  constructor(\r\n    private backgroundGeolocationService: BackgroundGeolocationService,\r\n    private tripLoggerService: TripLoggerService\r\n  ) {}\r\n\r\n  async ngOnInit() {\r\n    this.subscription = this.tripLoggerService\r\n      .getTripLogStateAsObservable()\r\n      .subscribe((activity) => {\r\n        this.state = activity.state;\r\n      });\r\n  }\r\n\r\n  async startTrip() {\r\n    return this.backgroundGeolocationService.start();\r\n  }\r\n\r\n  async pauseTrip() {\r\n    return this.backgroundGeolocationService.stop();\r\n  }\r\n\r\n  async completeTrip() {\r\n    // await this.tripLoggerService.updateState(TripLogState.Stopped);\r\n    // this.state = TripLogState.Stopped;\r\n  }\r\n\r\n  ngOnDestroy(): void {\r\n    this.subscription.unsubscribe();\r\n  }\r\n}\r\n","<ion-header>\r\n  <ion-toolbar color=\"{{ state === 'RUNNING' ? 'success' : 'dark'  }}\">\r\n    <ion-buttons slot=\"start\">\r\n      <ion-back-button text=\"\"></ion-back-button>\r\n    </ion-buttons>\r\n    <ion-title>\r\n      {{ 'TRIP_LOG.'+state | translate }}\r\n    </ion-title>\r\n  </ion-toolbar>\r\n</ion-header>\r\n<ion-content>\r\n  <ng-container *ngIf=\"state === 'NOT_STARTED'\">\r\n    <ion-fab vertical=\"bottom\" class=\"x-large\" horizontal=\"center\" slot=\"fixed\">\r\n      <ion-fab-button class=\"x-large\" color=\"success\" (click)=\"startTrip()\">\r\n        {{ 'TRIP_LOG.START' | translate}}\r\n      </ion-fab-button>\r\n    </ion-fab>\r\n  </ng-container>\r\n  <ng-container *ngIf=\"state === 'PAUSED' || state === 'RUNNING'\">\r\n    <app-trip-log-summary></app-trip-log-summary>\r\n    <ion-fab *ngIf=\"state === 'RUNNING'\" vertical=\"bottom\" class=\"x-large\" horizontal=\"center\" slot=\"fixed\">\r\n      <ion-fab-button class=\"x-large\" color=\"danger\" (click)=\"pauseTrip()\">\r\n        {{ 'TRIP_LOG.STOP' | translate}}\r\n      </ion-fab-button>\r\n    </ion-fab>\r\n    <ion-fab *ngIf=\"state === 'PAUSED'\" vertical=\"bottom\" class=\"x-large two-buttons\" horizontal=\"start\" slot=\"fixed\">\r\n      <ion-grid>\r\n        <ion-row>\r\n          <ion-col>\r\n            <ion-fab-button class=\"x-large small-text\" color=\"danger\" (click)=\"completeTrip()\">\r\n              {{ 'TRIP_LOG.COMPLETE' | translate}}\r\n            </ion-fab-button>\r\n          </ion-col>\r\n          <ion-col>\r\n            <ion-fab-button class=\"x-large small-text\" color=\"success\" (click)=\"startTrip()\">\r\n              {{ 'TRIP_LOG.CONTINUE' | translate}}\r\n            </ion-fab-button>\r\n          </ion-col>\r\n        </ion-row>\r\n      </ion-grid>\r\n    </ion-fab>\r\n  </ng-container>\r\n  <ng-container *ngIf=\"state === 'STOPPED'\">\r\n    <app-trip-log-summary></app-trip-log-summary>\r\n  </ng-container>\r\n</ion-content>"],"names":[],"sourceRoot":"webpack:///"}