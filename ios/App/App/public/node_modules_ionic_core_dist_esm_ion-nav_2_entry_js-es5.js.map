{"version":3,"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAOA,UAAMA,cAAc,GAAG,CAAvB;AACA,UAAMC,mBAAmB,GAAG,CAA5B;AACA,UAAMC,oBAAoB,GAAG,CAA7B;;UACMC;AACJC,gCAAYC,SAAZD,EAAuBE,MAAvBF,EAA+B;AAAA;;AAC7B,eAAKC,SAAL,GAAiBA,SAAjB;AACA,eAAKC,MAAL,GAAcA,MAAd;AACA,eAAKC,KAAL,GAAaP,cAAb;AACD;;;;iBACKQ,cAAKC,SAALD,EAAgB;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACpBE,2BAAI,CAACH,KAAL,GAAaN,mBAAb;;AADoB,0BAEfS,KAAI,CAACC,OAFU;AAAA;AAAA;AAAA;;AAGZN,+BAHY,GAGAK,KAAI,CAACL,SAHL;AAAA;AAIlB,6BAAqBO,oEAAgBF,KAAI,CAACG,QAArBD,EAA+BH,SAA/BG,EAA0CP,SAA1CO,EAAqD,CAAC,UAAD,EAAa,oBAAb,CAArDA,EAAyFF,KAAI,CAACJ,MAA9FM,CAArB;;AAJkB;AAIlBF,2BAAI,CAACC,OAJa;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAMrB;AACD;AACF;AACA;;;;iBACEG,oBAAW;AACTC,qEAAO,KAAKR,KAAL,KAAeL,oBAAtBa,EAA4C,6BAA5CA;AACA,gBAAMJ,OAAO,GAAG,KAAKA,OAArB;;AACA,gBAAIA,OAAJ,EAAa;AACX,kBAAI,KAAKE,QAAT,EAAmB;AACjB,qBAAKA,QAAL,CAAcG,iBAAd,CAAgCL,OAAO,CAACM,aAAxC,EAAuDN,OAAvD;AADF,qBAGK;AACHA,uBAAO,CAACO,MAARP;AACD;AACF;;AACD,iBAAKQ,GAAL,GAAWC,SAAX;AACA,iBAAKb,KAAL,GAAaL,oBAAb;AACD;;;;;;AAEH,UAAMmB,OAAO,GAAG,SAAVA,OAAU,CAACC,IAAD,EAAOC,EAAP,EAAWjB,MAAX,EAAsB;AACpC,YAAI,CAACgB,IAAL,EAAW;AACT,iBAAO,KAAP;AACD;;AACD,YAAIA,IAAI,CAACjB,SAALiB,KAAmBC,EAAvB,EAA2B;AACzB,iBAAO,KAAP;AACD;;AACD,YAAMC,aAAa,GAAGF,IAAI,CAAChB,MAA3B;;AACA,YAAIkB,aAAa,KAAKlB,MAAtB,EAA8B;AAC5B,iBAAO,IAAP;AACD;;AACD,YAAI,CAACkB,aAAD,IAAkB,CAAClB,MAAvB,EAA+B;AAC7B,iBAAO,IAAP;AACD;;AACD,YAAI,CAACkB,aAAD,IAAkB,CAAClB,MAAvB,EAA+B;AAC7B,iBAAO,KAAP;AACD;;AACD,YAAMmB,KAAK,GAAGC,MAAM,CAACC,IAAPD,CAAYF,aAAZE,CAAd;AACA,YAAME,KAAK,GAAGF,MAAM,CAACC,IAAPD,CAAYpB,MAAZoB,CAAd;;AACA,YAAID,KAAK,CAACI,MAANJ,KAAiBG,KAAK,CAACC,MAA3B,EAAmC;AACjC,iBAAO,KAAP;AApBkC,UAsBpC;;;AACA,kCAAkBJ,KAAlB,4BAAyB;AAApB,cAAMK,GAAX,aAAK;;AACH,cAAIN,aAAa,CAACM,GAAD,CAAbN,KAAuBlB,MAAM,CAACwB,GAAD,CAAjC,EAAwC;AACtC,mBAAO,KAAP;AACD;AACF;;AACD,eAAO,IAAP;AA5BF;;AA8BA,UAAMC,aAAa,GAAG,SAAhBA,aAAgB,CAACC,IAAD,EAAO1B,MAAP,EAAkB;AACtC,YAAI,CAAC0B,IAAL,EAAW;AACT,iBAAO,IAAP;AACD;;AACD,YAAIA,IAAI,YAAY7B,cAApB,EAAoC;AAClC,iBAAO6B,IAAP;AACD;;AACD,eAAO,IAAI7B,cAAJ,CAAmB6B,IAAnB,EAAyB1B,MAAzB,CAAP;AAPF;;AASA,UAAM2B,cAAc,GAAIC,SAAlBD,cAAkBC,MAAD,EAAW;AAChC,eAAOA,KAAK,CAACC,GAAND,CAAUF,cAAI,EAAI;AACvB,cAAIA,IAAI,YAAY7B,cAApB,EAAoC;AAClC,mBAAO6B,IAAP;AACD;;AACD,cAAI,eAAeA,IAAnB,EAAyB;AACvB;AACN;AACA;AACA;AACA;AACA;AACA;AACM,mBAAOD,aAAa,CAACC,IAAI,CAAC3B,SAAN,EAAkB2B,IAAI,CAACI,cAALJ,KAAwB,IAAxBA,GAAgCZ,SAAhCY,GAA4CA,IAAI,CAACI,cAAnE,CAApB;AACD;;AACD,iBAAOL,aAAa,CAACC,IAAD,EAAOZ,SAAP,CAApB;AAdK,WAeJiB,MAfIH,CAeGI,WAAC;AAAA,iBAAIA,CAAC,KAAK,IAAV;AAAA,SAfJJ,CAAP;AADF;;AAmBA,UAAMK,MAAM,GAAG,4GAAf;;AAEA,UAAMC,GAAG;AACPpC,qBAAYqC,OAAZrC,EAAqB;AAAA;;AACnBsC,iEAAiB,IAAjBA,EAAuBD,OAAvBC;AACA,eAAKC,cAAL,GAAsBC,uDAAY,IAAZA,EAAkB,gBAAlBA,EAAoC,CAApCA,CAAtB;AACA,eAAKC,gBAAL,GAAwBD,uDAAY,IAAZA,EAAkB,kBAAlBA,EAAsC,CAAtCA,CAAxB;AACA,eAAKE,eAAL,GAAuBF,uDAAY,IAAZA,EAAkB,iBAAlBA,EAAqC,CAArCA,CAAvB;AACA,eAAKG,UAAL,GAAkB,EAAlB;AACA,eAAKC,gBAAL,GAAwB,IAAxB;AACA,eAAKC,SAAL,GAAiB,KAAjB;AACA,eAAKC,eAAL,GAAuB,KAAvB;AACA,eAAKC,SAAL,GAAiB,KAAjB;AACA,eAAKC,KAAL,GAAa,EAAb;AACA;AACJ;AACA;;AACI,eAAKC,QAAL,GAAgB,IAAhB;AACD;;AAhBM;AAAA;AAAA,iBAiBPC,+BAAsB;AACpB,gBAAI,KAAKC,OAAT,EAAkB;AAChB,mBAAKA,OAAL,CAAaC,MAAb,CAAoB,KAAKC,YAAL,KAAsB,IAA1C;AACD;AACF;AArBM;AAAA;AAAA,iBAsBPC,uBAAc;AACZ,gBAAI,KAAKC,IAAL,KAAcvC,SAAlB,EAA6B;AAC3B,kBAAI,CAAC,KAAK6B,SAAV,EAAqB;AACnB,qBAAKW,OAAL,CAAa,KAAKD,IAAlB,EAAwB,KAAKE,UAA7B;AACD;AACF;AACF;AA5BM;AAAA;AAAA,iBA6BPC,6BAAoB;AAClB,iBAAKb,SAAL,GACE,CAAC,CAACc,QAAQ,CAACC,aAATD,CAAuB,YAAvBA,CAAF,IACE,CAAC,KAAKE,EAAL,CAAQC,OAAR,CAAgB,aAAhB,CAFL;;AAGA,gBAAI,KAAKT,YAAL,KAAsBrC,SAA1B,EAAqC;AACnC,kBAAM+C,IAAI,GAAGC,8DAAW,IAAXA,CAAb;AACA,mBAAKX,YAAL,GAAoBY,oEAAkB,kBAAlBA,EAAsCF,IAAI,KAAK,KAA/CE,CAApB;AACD;;AACD,iBAAK1B,cAAL,CAAoB2B,IAApB;AACD;AAtCM;AAAA;AAAA,iBAuCDC,4BAAmB;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AACvBC,4BAAI,CAACd,WAAL;;AADuB;AAER,6BAAOe;AAAA;AAAA;AAAA;AAAA,6BAAP;;AAFQ;AAEvBD,4BAAI,CAACjB,OAFkB,kBAEmCmB,sBAFnC,CAE0DF,MAAI,CAACP,EAF/D,EAEmEO,MAAI,CAACG,QAAL,CAAcC,IAAd,CAAmBJ,MAAnB,CAFnE,EAE6FA,MAAI,CAACK,OAAL,CAAaD,IAAb,CAAkBJ,MAAlB,CAF7F,EAEsHA,MAAI,CAACM,MAAL,CAAYF,IAAZ,CAAiBJ,MAAjB,CAFtH,EAE8IA,MAAI,CAACO,KAAL,CAAWH,IAAX,CAAgBJ,MAAhB,CAF9I;;AAGvBA,4BAAI,CAAClB,mBAAL;;AAHuB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIxB;AA3CM;AAAA;AAAA,iBA4CP0B,gCAAuB;AAAA,uDACF,KAAK5B,KADH;AAAA;;AAAA;AACrB,kEAA+B;AAAA,oBAApB9B,IAAoB;AAC7B2D,uEAAU3D,IAAI,CAACX,OAAfsE,EAAwBC,iDAAxBD;;AACA3D,oBAAI,CAACR,QAALQ;AACD;AAJoB;AAAA;AAAA;AAAA;AAAA;;AAKrB,gBAAI,KAAKiC,OAAT,EAAkB;AAChB,mBAAKA,OAAL,CAAa4B,OAAb;AACA,mBAAK5B,OAAL,GAAenC,SAAf;AAPmB,cASrB;;;AACA,iBAAK2B,UAAL,CAAgBlB,MAAhB,GAAyB,KAAKuB,KAAL,CAAWvB,MAAX,GAAoB,CAA7C;AACA,iBAAKsB,SAAL,GAAiB,IAAjB;AACD;AACD;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAlES;AAAA;AAAA,iBAmEPiC,cAAK/E,SAAL+E,EAAgBhD,cAAhBgD,EAAgCC,IAAhCD,EAAsCE,IAAtCF,EAA4C;AAC1C,mBAAO,KAAKG,SAAL,CAAe;AACpBC,yBAAW,EAAE,CAAC,CADM;AAEpBC,yBAAW,EAAE,CAAC;AAAEpF,yBAAF,EAAEA,SAAF;AAAa+B;AAAb,eAAD,CAFO;AAGpBiD;AAHoB,aAAf,EAIJC,IAJI,CAAP;AAKD;AACD;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAnFS;AAAA;AAAA,iBAoFPI,gBAAOC,WAAPD,EAAoBrF,SAApBqF,EAA+BtD,cAA/BsD,EAA+CL,IAA/CK,EAAqDJ,IAArDI,EAA2D;AACzD,mBAAO,KAAKH,SAAL,CAAe;AACpBC,yBAAW,EAAEG,WADO;AAEpBF,yBAAW,EAAE,CAAC;AAAEpF,yBAAF,EAAEA,SAAF;AAAa+B;AAAb,eAAD,CAFO;AAGpBiD;AAHoB,aAAf,EAIJC,IAJI,CAAP;AAKD;AACD;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AApGS;AAAA;AAAA,iBAqGPM,qBAAYD,WAAZC,EAAyBC,gBAAzBD,EAA2CP,IAA3CO,EAAiDN,IAAjDM,EAAuD;AACrD,mBAAO,KAAKL,SAAL,CAAe;AACpBC,yBAAW,EAAEG,WADO;AAEpBF,yBAAW,EAAEI,gBAFO;AAGpBR;AAHoB,aAAf,EAIJC,IAJI,CAAP;AAKD;AACD;AACF;AACA;AACA;AACA;AACA;AACA;;AAlHS;AAAA;AAAA,iBAmHPQ,aAAIT,IAAJS,EAAUR,IAAVQ,EAAgB;AACd,mBAAO,KAAKP,SAAL,CAAe;AACpBQ,yBAAW,EAAE,CAAC,CADM;AAEpBC,yBAAW,EAAE,CAFO;AAGpBX;AAHoB,aAAf,EAIJC,IAJI,CAAP;AAKD;AACD;AACF;AACA;AACA;AACA;AACA;AACA;;AAhIS;AAAA;AAAA,iBAiIPW,eAAMC,eAAND,EAAuBZ,IAAvBY,EAA6BX,IAA7BW,EAAmC;AACjC,gBAAME,QAAQ,GAAG;AACfJ,yBAAW,EAAE,CAAC,CADC;AAEfC,yBAAW,EAAE,CAAC,CAFC;AAGfX;AAHe,aAAjB;;AAKA,gBAAI,OAAOa,eAAP,KAA2B,QAA3B,IAAuCA,eAAe,CAAC7F,SAA3D,EAAsE;AACpE8F,sBAAQ,CAACC,UAATD,GAAsBD,eAAtBC;AACAA,sBAAQ,CAACJ,WAATI,GAAuB,CAAvBA;AAFF,mBAIK,IAAI,OAAOD,eAAP,KAA2B,QAA/B,EAAyC;AAC5CC,sBAAQ,CAACJ,WAATI,GAAuBD,eAAe,GAAG,CAAzCC;AACD;;AACD,mBAAO,KAAKZ,SAAL,CAAeY,QAAf,EAAyBb,IAAzB,CAAP;AACD;AACD;AACF;AACA;AACA;AACA;AACA;;AArJS;AAAA;AAAA,iBAsJPe,mBAAUhB,IAAVgB,EAAgBf,IAAhBe,EAAsB;AACpB,mBAAO,KAAKd,SAAL,CAAe;AACpBQ,yBAAW,EAAE,CADO;AAEpBC,yBAAW,EAAE,CAAC,CAFM;AAGpBX;AAHoB,aAAf,EAIJC,IAJI,CAAP;AAKD;AACD;AACF;AACA;AACA;AACA;AACA;AACA;AACA;;AApKS;AAAA;AAAA,iBAqKPgB,qBAAYC,UAAZD,EAAqD;AAAA,gBAA7BN,WAA6B,uEAAf,CAAe;AAAA,gBAAZX,IAAY;AAAA,gBAANC,IAAM;AACnD,mBAAO,KAAKC,SAAL,CAAe;AACpBQ,yBAAW,EAAEQ,UADO;AAEpBP,yBAFoB,EAEpBA,WAFoB;AAGpBX;AAHoB,aAAf,EAIJC,IAJI,CAAP;AAKD;AACD;AACF;AACA;AACA;AACA;AACA;AACA;AACA;;AAnLS;AAAA;AAAA,iBAoLP1B,iBAAQvD,SAARuD,EAAmBxB,cAAnBwB,EAAmCyB,IAAnCzB,EAAyC0B,IAAzC1B,EAA+C;AAC7C,mBAAO,KAAK4C,QAAL,CAAc,CAAC;AAAEnG,uBAAF,EAAEA,SAAF;AAAa+B;AAAb,aAAD,CAAd,EAA+CiD,IAA/C,EAAqDC,IAArD,CAAP;AACD;AACD;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAhMS;AAAA;AAAA,iBAiMPkB,kBAASpD,KAAToD,EAAgBnB,IAAhBmB,EAAsBlB,IAAtBkB,EAA4B;AAC1B,gBAAInB,IAAI,IAAI,IAAZ,EAAkB;AAChBA,kBAAI,GAAG,EAAPA;AAFwB,cAI1B;;;AACA,gBAAIA,IAAI,CAAChC,QAALgC,KAAkB,IAAtB,EAA4B;AAC1BA,kBAAI,CAAChC,QAALgC,GAAgB,KAAhBA;AACD;;AACD,mBAAO,KAAKE,SAAL,CAAe;AACpBC,yBAAW,EAAE,CADO;AAEpBC,yBAAW,EAAErC,KAFO;AAGpB2C,yBAAW,EAAE,CAHO;AAIpBC,yBAAW,EAAE,CAAC,CAJM;AAKpBX;AALoB,aAAf,EAMJC,IANI,CAAP;AAOD;AACD;;AAjNO;AAAA;AAAA,iBAkNPmB,oBAAWlF,EAAXkF,EAAenG,MAAfmG,EAAuBC,SAAvBD,EAAkCE,SAAlCF,EAA6C;AAC3C,gBAAMG,MAAM,GAAG,KAAKC,aAAL,EAAf;;AACA,gBAAIxF,OAAO,CAACuF,MAAD,EAASrF,EAAT,EAAajB,MAAb,CAAX,EAAiC;AAC/B,qBAAOwG,OAAO,CAACC,OAARD,CAAgB;AACrBE,uBAAO,EAAE,KADY;AAErBrG,uBAAO,EAAEiG,MAAM,CAACjG;AAFK,eAAhBmG,CAAP;AAID;;AACD,gBAAIC,OAAJ;AACA,gBAAME,OAAO,GAAG,IAAIH,OAAJ,CAAYI,WAAC;AAAA,qBAAKH,OAAO,GAAGG,CAAf;AAAA,aAAb,CAAhB;AACA,gBAAIC,MAAJ;AACA,gBAAMC,UAAU,GAAG;AACjBC,uBAAS,EAAE,KADM;AAEjBC,yBAAW,EAAEC,+BAAU,EAAI;AACzB,oBAAIC,IAAJ;AACA,oBAAMC,CAAC,GAAG,IAAIX,OAAJ,CAAYI,WAAC;AAAA,yBAAKM,IAAI,GAAGN,CAAZ;AAAA,iBAAb,CAAV;AACAH,uBAAO,CAAC;AACNC,yBAAO,EAAE,IADH;AAENrG,yBAAO,EAAE4G,UAFH;AAGNG,6BAAW;AAAA,2OAAE;AAAA;AAAA;AAAA;AAAA;AACXF,kCAAI;AADO;AAEX,qCAAML,MAAN;;AAFW;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBAAF;;AAAA;AAAA;AAAA;AAAA;AAHL,iBAAD,CAAPJ;AAQA,uBAAOU,CAAP;AACD;AAdgB,aAAnB;;AAgBA,gBAAIf,SAAS,KAAK,MAAlB,EAA0B;AACxBS,oBAAM,GAAG,KAAKvD,OAAL,CAAarC,EAAb,EAAiBjB,MAAjB,EAAyB8G,UAAzB,CAATD;AADF,mBAGK;AACH,kBAAMQ,cAAc,GAAG,KAAKvE,KAAL,CAAWwE,IAAX,CAAgBtF,WAAC;AAAA,uBAAIjB,OAAO,CAACiB,CAAD,EAAIf,EAAJ,EAAQjB,MAAR,CAAX;AAAA,eAAjB,CAAvB;;AACA,kBAAIqH,cAAJ,EAAoB;AAClBR,sBAAM,GAAG,KAAKlB,KAAL,CAAW0B,cAAX,EAA2BjG,MAAM,CAACmG,MAAPnG,CAAcA,MAAM,CAACmG,MAAPnG,CAAc,EAAdA,EAAkB0F,UAAlB1F,CAAdA,EAA6C;AAAEgF,2BAAS,EAAE,MAAb;AAAqBoB,kCAAgB,EAAEnB;AAAvC,iBAA7CjF,CAA3B,CAATyF;AADF,qBAGK,IAAIT,SAAS,KAAK,SAAlB,EAA6B;AAChCS,sBAAM,GAAG,KAAK/B,IAAL,CAAU7D,EAAV,EAAcjB,MAAd,EAAsBoB,MAAM,CAACmG,MAAPnG,CAAcA,MAAM,CAACmG,MAAPnG,CAAc,EAAdA,EAAkB0F,UAAlB1F,CAAdA,EAA6C;AAAEoG,kCAAgB,EAAEnB;AAApB,iBAA7CjF,CAAtB,CAATyF;AADG,qBAGA,IAAIT,SAAS,KAAK,MAAlB,EAA0B;AAC7BS,sBAAM,GAAG,KAAKvD,OAAL,CAAarC,EAAb,EAAiBjB,MAAjB,EAAyBoB,MAAM,CAACmG,MAAPnG,CAAcA,MAAM,CAACmG,MAAPnG,CAAc,EAAdA,EAAkB0F,UAAlB1F,CAAdA,EAA6C;AAAEgF,2BAAS,EAAE,MAAb;AAAqBrD,0BAAQ,EAAE,IAA/B;AAAqCyE,kCAAgB,EAAEnB;AAAvD,iBAA7CjF,CAAzB,CAATyF;AACD;AACF;;AACD,mBAAOF,OAAP;AACD;AACD;;AA9PO;AAAA;AAAA,iBA+PDc,sBAAa;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACXnB,4BADW,GACFoB,MAAI,CAACnB,aAAL,EADE;AAAA,wDAEVD,MAAM,GACT;AACArF,0BAAE,EAAEqF,MAAM,CAACjG,OAAPiG,CAAeqB,OADnB;AAEA3H,8BAAM,EAAEsG,MAAM,CAACtG,MAFf;AAGAK,+BAAO,EAAEiG,MAAM,CAACjG;AAHhB,uBADS,GAMTS,SARa;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AASlB;AACD;AACF;AACA;;AA3QS;AAAA;AAAA,iBA4QP8G,qBAAY;AACV,mBAAOpB,OAAO,CAACC,OAARD,CAAgB,KAAKD,aAAL,EAAhBC,CAAP;AACD;AACD;AACF;AACA;AACA;AACA;;AAnRS;AAAA;AAAA,iBAoRPqB,oBAAWC,KAAXD,EAAkB;AAChB,mBAAOrB,OAAO,CAACC,OAARD,CAAgB,KAAK1D,KAAL,CAAWgF,KAAX,CAAhBtB,CAAP;AACD;AACD;AACF;AACA;AACA;AACA;;AA3RS;AAAA;AAAA,iBA4RPuB,mBAAU/G,IAAV+G,EAAgB;AACd,mBAAOvB,OAAO,CAACC,OAARD,CAAgB,KAAKwB,aAAL,CAAmBhH,IAAnB,CAAhBwF,CAAP;AACD;AACD;AACF;AACA;AACA;AACA;;AAnSS;AAAA;AAAA,iBAoSPyB,qBAAYjH,IAAZiH,EAAkB;AAChB,mBAAOzB,OAAO,CAACC,OAARD,CAAgB,KAAK0B,eAAL,CAAqBlH,IAArB,CAAhBwF,CAAP;AACD;AAtSM;AAAA;AAAA,iBAuSP2B,qBAAY;AACV,mBAAO,KAAKrF,KAAL,CAAWvB,MAAlB;AACD;AAzSM;AAAA;AAAA,iBA0SPgF,yBAAgB;AACd,mBAAO,KAAKzD,KAAL,CAAW,KAAKA,KAAL,CAAWvB,MAAX,GAAoB,CAA/B,CAAP;AACD;AA5SM;AAAA;AAAA,iBA6SPyG,yBAA2C;AAAA,gBAA7BhH,IAA6B,uEAAtB,KAAKuF,aAAL,EAAsB;AACzC,mBAAO,CAAC,EAAEvF,IAAI,IAAI,KAAKkH,eAAL,CAAqBlH,IAArB,CAAV,CAAR;AACD;AA/SM;AAAA;AAAA,iBAgTPkH,2BAA6C;AAAA,gBAA7BlH,IAA6B,uEAAtB,KAAKuF,aAAL,EAAsB;;AAC3C,gBAAI,CAACvF,IAAL,EAAW;AACT,qBAAOF,SAAP;AACD;;AACD,gBAAMgC,KAAK,GAAG,KAAKA,KAAnB;AACA,gBAAMgF,KAAK,GAAGhF,KAAK,CAACsF,OAANtF,CAAc9B,IAAd8B,CAAd;AACA,mBAAOgF,KAAK,GAAG,CAARA,GAAYhF,KAAK,CAACgF,KAAK,GAAG,CAAT,CAAjBA,GAA+BhH,SAAtC;AAtTc,WAAT,CAwTP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAjUO;AAAA;AAAA,iBAkUDmE,mBAAUoD,EAAVpD,EAAcD,IAAdC,EAAoB;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4BACpBqD,MAAI,CAAC1F,eAAL,IAAwByF,EAAE,CAACtD,IAAHsD,IAAW,IAAnC,IAA2CA,EAAE,CAACtD,IAAHsD,CAAQE,UAD/B;AAAA;AAAA;AAAA;;AAAA,wDAEf/B,OAAO,CAACC,OAARD,CAAgB,KAAhBA,CAFe;;AAAA;AAIlBG,6BAJkB,GAIR,IAAIH,OAAJ,CAAY,UAACC,OAAD,EAAU+B,MAAV,EAAqB;AAC/CH,0BAAE,CAAC5B,OAAH4B,GAAa5B,OAAb4B;AACAA,0BAAE,CAACG,MAAHH,GAAYG,MAAZH;AAFc,wBAJQ;AAQxBA,wBAAE,CAACrD,IAAHqD,GAAUrD,IAAVqD;AACA;AACJ;AACA;AACA;AACA;AACA;;AAd4B,4BAepBA,EAAE,CAACtD,IAAHsD,IAAWA,EAAE,CAACtD,IAAHsD,CAAQtB,SAARsB,KAAsB,KAAjCA,IAA0CC,MAAI,CAAC3F,SAf3B;AAAA;AAAA;AAAA;;AAgBhB8F,4BAhBgB,GAgBPhF,QAAQ,CAACC,aAATD,CAAuB,YAAvBA,CAhBO;;AAAA,2BAiBlBgF,MAjBkB;AAAA;AAAA;AAAA;;AAAA;AAkBD,6BAASA,MAAM,CAACC,aAAPD,EAAT;;AAlBC;AAkBdC,mCAlBc;;AAAA,4BAmBhBA,aAAa,KAAK,KAnBF;AAAA;AAAA;AAAA;;AAAA,wDAoBXlC,OAAO,CAACC,OAARD,CAAgB,KAAhBA,CApBW;;AAAA;AAAA,4BAsBX,OAAOkC,aAAP,KAAyB,QAtBd;AAAA;AAAA;AAAA;;AAuBlBD,4BAAM,CAAC3D,IAAP2D,CAAYC,aAAZD,EAA2BJ,EAAE,CAACtD,IAAHsD,CAAQjC,SAARiC,IAAqB,MAAhDI;AAvBkB,wDAwBXjC,OAAO,CAACC,OAARD,CAAgB,KAAhBA,CAxBW;;AAAA;AA4BxB;AACA,0BAAI6B,EAAE,CAAClD,WAAHkD,IAAkBA,EAAE,CAAClD,WAAHkD,CAAe9G,MAAf8G,KAA0B,CAAhD,EAAmD;AACjDA,0BAAE,CAAClD,WAAHkD,GAAiBvH,SAAjBuH;AA9BsB,wBAgCxB;;;AACAC,4BAAI,CAAC7F,UAAL,CAAgBqC,IAAhB,CAAqBuD,EAArB,EAjCwB,CAkCxB;AACA;;;AACAC,4BAAI,CAACK,QAAL;;AApCwB,wDAqCjBhC,OArCiB;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAsCzB;AAxWM;AAAA;AAAA,iBAyWPiC,iBAAQC,MAARD,EAAgBP,EAAhBO,EAAoB;AAClB,gBAAI,KAAK/F,SAAT,EAAoB;AAClB,mBAAKiG,SAAL,CAAe,8BAAf,EAA+CT,EAA/C;AACA;AACD;;AACD,gBAAIA,EAAE,CAACrD,IAAP,EAAa;AACXqD,gBAAE,CAACrD,IAAHqD,CAAQQ,MAAM,CAACE,YAAfV,EAA6BQ,MAAM,CAACG,kBAApCX,EAAwDQ,MAAM,CAACI,YAA/DZ,EAA6EQ,MAAM,CAACK,WAApFb,EAAiGQ,MAAM,CAACzC,SAAxGiC;AACD;;AACDA,cAAE,CAAC5B,OAAH4B,CAAWQ,MAAM,CAACE,YAAlBV;;AACA,gBAAIA,EAAE,CAACtD,IAAHsD,CAAQtB,SAARsB,KAAsB,KAAtBA,IAA+B,KAAK1F,SAAxC,EAAmD;AACjD,kBAAM8F,MAAM,GAAGhF,QAAQ,CAACC,aAATD,CAAuB,YAAvBA,CAAf;;AACA,kBAAIgF,MAAJ,EAAY;AACV,oBAAMrC,SAAS,GAAGyC,MAAM,CAACzC,SAAPyC,KAAqB,MAArBA,GAA8B,MAA9BA,GAAuC,SAAzD;AACAJ,sBAAM,CAACU,UAAPV,CAAkBrC,SAAlBqC;AACD;AACF;AACF;AAzXM;AAAA;AAAA,iBA0XPW,gBAAOC,YAAPD,EAAqBf,EAArBe,EAAyB;AACvB,gBAAI,KAAKvG,SAAT,EAAoB;AAClB,mBAAKiG,SAAL,CAAe,8BAAf,EAA+CT,EAA/C;AACA;AACD;;AACD,iBAAK5F,UAAL,CAAgBlB,MAAhB,GAAyB,CAAzB;AACA,iBAAKuH,SAAL,CAAeO,YAAf,EAA6BhB,EAA7B;AACD;AAjYM;AAAA;AAAA,iBAkYPS,mBAAUO,YAAVP,EAAwBT,EAAxBS,EAA4B;AAC1B,gBAAIT,EAAE,CAACrD,IAAP,EAAa;AACXqD,gBAAE,CAACrD,IAAHqD,CAAQ,KAARA,EAAe,KAAfA,EAAsBgB,YAAtBhB;AACD;;AACD,gBAAIA,EAAE,CAACG,MAAHH,IAAa,CAAC,KAAKxF,SAAvB,EAAkC;AAChCwF,gBAAE,CAACG,MAAHH,CAAUgB,YAAVhB;AADF,mBAGK;AACHA,gBAAE,CAAC5B,OAAH4B,CAAW,KAAXA;AACD;AACF;AA5YM;AAAA;AAAA,iBA6YPM,oBAAW;AACT;AACA;AACA,gBAAI,KAAK/F,eAAT,EAA0B;AACxB,qBAAO,KAAP;AAJO,cAMT;AACA;;;AACA,gBAAMyF,EAAE,GAAG,KAAK5F,UAAL,CAAgB6G,KAAhB,EAAX;;AACA,gBAAI,CAACjB,EAAL,EAAS;AACP,qBAAO,KAAP;AACD;;AACD,iBAAKkB,aAAL,CAAmBlB,EAAnB;AACA,mBAAO,IAAP;AACD;AA3ZM;AAAA;AAAA,iBA4ZDkB,uBAAclB,EAAdkB,EAAkB;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAEpB;AACAC,4BAAI,CAACjH,gBAAL,CAAsByB,IAAtB;;AACAwF,4BAAI,CAAC5G,eAAL,GAAuB,IAAvB;;AACA4G,4BAAI,CAACC,SAAL,CAAepB,EAAf;;AACMa,iCANc,GAMAM,MAAI,CAACjD,aAAL,EANA;AAOd0C,kCAPc,GAOCO,MAAI,CAACE,eAAL,CAAqBrB,EAArB,EAAyBa,WAAzB,CAPD;;AAAA,4BAQhB,CAACA,WAAD,IAAgB,CAACD,YARD;AAAA;AAAA;AAAA;;AAAA,4BASZ,IAAIU,KAAJ,CAAU,qCAAV,CATY;;AAAA;AAAA,4BAWhBV,YAAY,IAAIA,YAAY,CAAChJ,KAAbgJ,KAAuBvJ,cAXvB;AAAA;AAAA;AAAA;;AAAA;AAYlB,6BAAMuJ,YAAY,CAAC/I,IAAb+I,CAAkBO,MAAI,CAAC7F,EAAvBsF,CAAN;;AAZkB;AAcpBO,4BAAI,CAACI,YAAL,CAAkBX,YAAlB,EAAgCC,WAAhC,EAA6Cb,EAA7C,EAdoB,CAepB;;;AACMW,wCAhBc,GAgBO,CAACX,EAAE,CAACwB,0BAAHxB,IAAiCA,EAAE,CAACyB,yBAArC,KACzBb,YAAY,KAAKC,WAjBC;;AAkBpB,0BAAIF,kBAAkB,IAAIX,EAAE,CAACtD,IAAzBiE,IAAiCE,WAArC,EAAkD;AAC1Ca,uCAD0C,GACxB1B,EAAE,CAACtD,IAAHsD,CAAQjC,SAARiC,KAAsB,MADE;AAEhD;AACR;AACA;AACA;;AACQ,4BAAI0B,eAAJ,EAAqB;AACnB1B,4BAAE,CAACtD,IAAHsD,CAAQb,gBAARa,GAA2BA,EAAE,CAACtD,IAAHsD,CAAQb,gBAARa,IAA6BY,YAAY,IAAIA,YAAY,CAACzB,gBAArFa;AACD;;AACDa,mCAAW,CAAC1B,gBAAZ0B,GAA+Bb,EAAE,CAACtD,IAAHsD,CAAQb,gBAAvC0B;AACD;;AA5BmB,2BA6BLF,kBA7BK;AAAA;AAAA;AAAA;;AAAA;AA6Ba,6BACvBQ,MAAI,CAACQ,UAAL,CAAgBf,YAAhB,EAA8BC,WAA9B,EAA2Cb,EAA3C,CADuB;;AA7Bb;AAAA;AAAA;AAAA;;AAAA;AAAA,qCA+BhB;AACA;AACA;AACA;AACA;AACAU,oCAAY,EAAE,IALd;AAMAC,0CAAkB,EAAE;AANpB,uBA/BgB;;AAAA;AA6BdH,4BA7Bc;;AAuCpBW,4BAAI,CAACZ,OAAL,CAAaC,MAAb,EAAqBR,EAArB;;AACAmB,4BAAI,CAAChH,eAAL,CAAqBwB,IAArB;;AAxCoB;AAAA;;AAAA;AAAA;AAAA;;AA2CpBwF,4BAAI,CAACJ,MAAL,eAA0Bf,EAA1B;;AA3CoB;AA6CtBmB,4BAAI,CAAC5G,eAAL,GAAuB,KAAvB;;AACA4G,4BAAI,CAACb,QAAL;;AA9CsB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AA+CvB;AA3cM;AAAA;AAAA,iBA4cPc,mBAAUpB,EAAVoB,EAAc;AACZ,gBAAMQ,WAAW,GAAG,KAAKnH,KAAL,CAAWvB,MAA/B;AACA8G,cAAE,CAACtD,IAAHsD,GAAUA,EAAE,CAACtD,IAAHsD,IAAW,EAArBA;;AACA,gBAAIA,EAAE,CAACtD,IAAHsD,CAAQ9H,QAAR8H,KAAqBvH,SAAzB,EAAoC;AAClCuH,gBAAE,CAACtD,IAAHsD,CAAQ9H,QAAR8H,GAAmB,KAAK9H,QAAxB8H;AACD;;AACD,gBAAIA,EAAE,CAACvC,UAAHuC,KAAkBvH,SAAtB,EAAiC;AAC/BL,uEAAO4H,EAAE,CAAC5C,WAAH4C,KAAmBvH,SAA1BL,EAAqC,8BAArCA;AACAA,uEAAO4H,EAAE,CAAC3C,WAAH2C,KAAmBvH,SAA1BL,EAAqC,8BAArCA;AACA,kBAAMqH,KAAK,GAAG,KAAKhF,KAAL,CAAWsF,OAAX,CAAmBC,EAAE,CAACvC,UAAtB,CAAd;;AACA,kBAAIgC,KAAK,GAAG,CAAZ,EAAe;AACb,sBAAM,IAAI6B,KAAJ,CAAU,0BAAV,CAAN;AACD;;AACDtB,gBAAE,CAAC5C,WAAH4C,IAAkBP,KAAlBO;AACD;;AACD,gBAAIA,EAAE,CAAC5C,WAAH4C,KAAmBvH,SAAvB,EAAkC;AAChC,kBAAIuH,EAAE,CAAC5C,WAAH4C,GAAiB,CAArB,EAAwB;AACtBA,kBAAE,CAAC5C,WAAH4C,GAAiB4B,WAAW,GAAG,CAA/B5B;AACD;;AACD,kBAAIA,EAAE,CAAC3C,WAAH2C,GAAiB,CAArB,EAAwB;AACtBA,kBAAE,CAAC3C,WAAH2C,GAAiB4B,WAAW,GAAG5B,EAAE,CAAC5C,WAAlC4C;AACD;;AACDA,gBAAE,CAACyB,yBAAHzB,GACEA,EAAE,CAAC3C,WAAH2C,GAAiB,CAAjBA,IAAsBA,EAAE,CAAC5C,WAAH4C,GAAiBA,EAAE,CAAC3C,WAApB2C,KAAoC4B,WAD5D5B;AAED;;AACD,gBAAIA,EAAE,CAAClD,WAAP,EAAoB;AAClB;AACA;AACA,kBAAIkD,EAAE,CAACnD,WAAHmD,GAAiB,CAAjBA,IAAsBA,EAAE,CAACnD,WAAHmD,GAAiB4B,WAA3C,EAAwD;AACtD5B,kBAAE,CAACnD,WAAHmD,GAAiB4B,WAAjB5B;AACD;;AACDA,gBAAE,CAACwB,0BAAHxB,GAAgCA,EAAE,CAACnD,WAAHmD,KAAmB4B,WAAnD5B;AACD;;AACD,gBAAMlD,WAAW,GAAGkD,EAAE,CAAClD,WAAvB;;AACA,gBAAI,CAACA,WAAL,EAAkB;AAChB;AACD;;AACD1E,qEAAO0E,WAAW,CAAC5D,MAAZ4D,GAAqB,CAA5B1E,EAA+B,wBAA/BA;AACA,gBAAMyJ,eAAe,GAAGvI,cAAc,CAACwD,WAAD,CAAtC;;AACA,gBAAI+E,eAAe,CAAC3I,MAAhB2I,KAA2B,CAA/B,EAAkC;AAChC,oBAAM,IAAIP,KAAJ,CAAU,yBAAV,CAAN;AAxCU,cA0CZ;;;AA1CY,wDA2COO,eA3CP;AAAA;;AAAA;AA2CZ,qEAAoC;AAAA,oBAAzBlJ,IAAyB;AAClCA,oBAAI,CAACT,QAALS,GAAgBqH,EAAE,CAACtD,IAAHsD,CAAQ9H,QAAxBS;AACA,oBAAMH,GAAG,GAAGG,IAAI,CAACH,GAAjB;;AACA,oBAAIA,GAAG,IAAIA,GAAG,KAAK,IAAnB,EAAyB;AACvB,wBAAM,IAAI8I,KAAJ,CAAU,oCAAV,CAAN;AACD;;AACD,oBAAI3I,IAAI,CAACf,KAALe,KAAepB,oBAAnB,EAAyC;AACvC,wBAAM,IAAI+J,KAAJ,CAAU,qCAAV,CAAN;AACD;AACF;AApDW;AAAA;AAAA;AAAA;AAAA;;AAqDZtB,cAAE,CAAClD,WAAHkD,GAAiB6B,eAAjB7B;AACD;AAlgBM;AAAA;AAAA,iBAmgBPqB,yBAAgBrB,EAAhBqB,EAAoBR,WAApBQ,EAAiC;AAC/B,gBAAMvE,WAAW,GAAGkD,EAAE,CAAClD,WAAvB;;AACA,gBAAIA,WAAW,KAAKrE,SAApB,EAA+B;AAC7B;AACA;AACA,qBAAOqE,WAAW,CAACA,WAAW,CAAC5D,MAAZ4D,GAAqB,CAAtB,CAAlB;AACD;;AACD,gBAAMM,WAAW,GAAG4C,EAAE,CAAC5C,WAAvB;;AACA,gBAAIA,WAAW,KAAK3E,SAApB,EAA+B;AAC7B,kBAAMgC,KAAK,GAAG,KAAKA,KAAnB;AACA,kBAAMqH,SAAS,GAAG1E,WAAW,GAAG4C,EAAE,CAAC3C,WAAnC;;AACA,mBAAK,IAAI0E,CAAC,GAAGtH,KAAK,CAACvB,MAANuB,GAAe,CAA5B,EAA+BsH,CAAC,IAAI,CAApC,EAAuCA,CAAC,EAAxC,EAA4C;AAC1C,oBAAMpJ,IAAI,GAAG8B,KAAK,CAACsH,CAAD,CAAlB;;AACA,oBAAI,CAACA,CAAC,GAAG3E,WAAJ2E,IAAmBA,CAAC,IAAID,SAAzB,KAAuCnJ,IAAI,KAAKkI,WAApD,EAAiE;AAC/D,yBAAOlI,IAAP;AACD;AACF;AACF;;AACD,mBAAOF,SAAP;AACD;AAthBM;AAAA;AAAA,iBAuhBP8I,sBAAaX,YAAbW,EAA2BV,WAA3BU,EAAwCvB,EAAxCuB,EAA4C;AAC1CnJ,qEAAOyI,WAAW,IAAID,YAAtBxI,EAAoC,4CAApCA;AACAA,qEAAO4H,EAAE,CAAC5B,OAAVhG,EAAmB,uBAAnBA;AACAA,qEAAO4H,EAAE,CAACG,MAAV/H,EAAkB,sBAAlBA;AACA,gBAAMsE,IAAI,GAAGsD,EAAE,CAACtD,IAAhB;AACA,gBAAMI,WAAW,GAAGkD,EAAE,CAAClD,WAAvB;AACA,gBAAMM,WAAW,GAAG4C,EAAE,CAAC5C,WAAvB;AACA,gBAAMC,WAAW,GAAG2C,EAAE,CAAC3C,WAAvB;AACA,gBAAI2E,YAAJ,CAR0C,CAS1C;;AACA,gBAAI5E,WAAW,KAAK3E,SAAhB2E,IAA6BC,WAAW,KAAK5E,SAAjD,EAA4D;AAC1DL,uEAAOgF,WAAW,IAAI,CAAtBhF,EAAyB,iCAAzBA;AACAA,uEAAOiF,WAAW,IAAI,CAAtBjF,EAAyB,iCAAzBA;AACA4J,0BAAY,GAAG,EAAfA;;AACA,mBAAK,IAAID,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG1E,WAApB,EAAiC0E,CAAC,EAAlC,EAAsC;AACpC,oBAAMpJ,IAAI,GAAG,KAAK8B,KAAL,CAAWsH,CAAC,GAAG3E,WAAf,CAAb;;AACA,oBAAIzE,IAAI,IAAIA,IAAI,KAAKiI,YAAjBjI,IAAiCA,IAAI,KAAKkI,WAA9C,EAA2D;AACzDmB,8BAAY,CAACvF,IAAbuF,CAAkBrJ,IAAlBqJ;AACD;AARuD,gBAU1D;;;AACAtF,kBAAI,CAACqB,SAALrB,GAAiBA,IAAI,CAACqB,SAALrB,IAAkB,MAAnCA;AACD;;AACD,gBAAMuF,YAAY,GAAG,KAAKxH,KAAL,CAAWvB,MAAX,IAClB4D,WAAW,KAAKrE,SAAhBqE,GAA4BA,WAAW,CAAC5D,MAAxC4D,GAAiD,CAD/B,KAElBO,WAAW,KAAK5E,SAAhB4E,GAA4BA,WAA5BA,GAA0C,CAFxB,CAArB;AAGAjF,qEAAO6J,YAAY,IAAI,CAAvB7J,EAA0B,mCAA1BA;;AACA,gBAAI6J,YAAY,KAAK,CAArB,EAAwB;AACtBC,qBAAO,CAACC,IAARD,yGAAqH,IAArHA,EAA2H,KAAK5G,EAAhI4G;AACA,oBAAM,IAAIZ,KAAJ,CAAU,+CAAV,CAAN;AA7BwC,cA+B1C;AACA;;;AACA,gBAAIxE,WAAJ,EAAiB;AACf;AACA,kBAAIE,WAAW,GAAGgD,EAAE,CAACnD,WAArB;;AAFe,0DAGIC,WAHJ;AAAA;;AAAA;AAGf,uEAAgC;AAAA,sBAArBnE,KAAqB;AAC9B,uBAAKyJ,YAAL,CAAkBzJ,KAAlB,EAAwBqE,WAAxB;AACAA,6BAAW;AACZ;AANc;AAAA;AAAA;AAAA;AAAA;;AAOf,kBAAIgD,EAAE,CAACwB,0BAAP,EAAmC;AACjC;AACA9E,oBAAI,CAACqB,SAALrB,GAAiBA,IAAI,CAACqB,SAALrB,IAAkB,SAAnCA;AACD;AA3CuC,cA6C1C;AACA;AACA;AACA;AACA;;;AACA,gBAAIsF,YAAY,IAAIA,YAAY,CAAC9I,MAAb8I,GAAsB,CAA1C,EAA6C;AAAA,0DACxBA,YADwB;AAAA;;AAAA;AAC3C,uEAAiC;AAAA,sBAAtBrJ,MAAsB;AAC/B2D,yEAAU3D,MAAI,CAACX,OAAfsE,EAAwB+F,iDAAxB/F;AACAA,yEAAU3D,MAAI,CAACX,OAAfsE,EAAwBgG,iDAAxBhG;AACAA,yEAAU3D,MAAI,CAACX,OAAfsE,EAAwBC,iDAAxBD;AAJyC,kBAM3C;;AAN2C;AAAA;AAAA;AAAA;AAAA;;AAAA,0DAOxB0F,YAPwB;AAAA;;AAAA;AAO3C,uEAAiC;AAAA,sBAAtBrJ,MAAsB;AAC/B,uBAAK4J,WAAL,CAAiB5J,MAAjB;AACD;AAT0C;AAAA;AAAA;AAAA;AAAA;AAU5C;AACF;AAplBM;AAAA;AAAA,iBAqlBDgJ,oBAAWf,YAAXe,EAAyBd,WAAzBc,EAAsC3B,EAAtC2B,EAA0C;AAAA;;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAC9C;AACA;AACMjF,0BAHwC,GAGjCsD,EAAE,CAACtD,IAH8B;AAIxC8F,sCAJwC,GAIrB9F,IAAI,CAAC+F,iBAAL/F,GACpBgG,aAAD;AAAA,+BAASC,MAAI,CAACC,KAAL,GAAaF,GAAtB;AAAA,uBADqBhG,GAErBjE,SAN0C;AAOxC+C,0BAPwC,GAOjCC,8DAAWkH,MAAXlH,CAPiC;AAQxCmD,gCARwC,GAQ3BgC,YAAY,CAAC5I,OARc;AASxC6K,+BATwC,GAS5BhC,WAAW,IAAIA,WAAW,CAAC7I,OATC;AAUxC8K,mCAVwC,GAUxB/J,MAAM,CAACmG,MAAPnG,CAAcA,MAAM,CAACmG,MAAPnG,CAAc;AAAEyC,4BAAF,EAAEA,IAAF;AAAQuH,kCAAU,EAAEJ,MAAI,CAAChD,aAAL,CAAmBiB,YAAnB,CAApB;AAAsDoC,8BAAM,EAAEL,MAAI,CAACrH,EAAnE;AAAuEkH,wCAAvE,EAAuEA,gBAAvE;AAAyF9H,gCAAQ,EAAEiI,MAAI,CAACjI,QAAL,IAAiBgB,oEAAkB,UAAlBA,EAA8B,IAA9BA,CAApH;AAAyJkD,kCAAzJ,EAAyJA,UAAzJ;AAChDiE;AADgD,uBAAd9J,EACrB2D,IADqB3D,CAAdA,EACA;AAAEoG,wCAAgB,EAAEzC,IAAI,CAACyC,gBAALzC,IAAyBiG,MAAI,CAAC3E,SAA9BtB,IAA2ChB,6DAAW,cAAXA;AAA/D,uBADA3C,CAVwB;AAAA;AAYxC,6BAAyB4I,uDAAWmB,aAAXnB,CAAzB;;AAZwC;AAAA;AAYtCjB,kCAZsC,UAYtCA,YAZsC;AAAA,wDAavCiC,MAAI,CAACM,gBAAL,CAAsBvC,YAAtB,EAAoCE,YAApC,EAAkDC,WAAlD,EAA+DnE,IAA/D,CAbuC;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAc/C;AAnmBM;AAAA;AAAA,iBAomBPuG,0BAAiBvC,YAAjBuC,EAA+BrC,YAA/BqC,EAA6CpC,WAA7CoC,EAA0DvG,IAA1DuG,EAAgE;AAC9D,gBAAMC,WAAW,GAAGxC,YAAY,GAAGE,YAAH,GAAkBC,WAAlD;;AACA,gBAAIqC,WAAJ,EAAiB;AACf,mBAAKC,OAAL,CAAaD,WAAb;AACD;;AACD,mBAAO;AACLxC,0BADK,EACLA,YADK;AAELC,gCAAkB,EAAE,IAFf;AAGLC,0BAHK,EAGLA,YAHK;AAILC,yBAJK,EAILA,WAJK;AAKL9C,uBAAS,EAAErB,IAAI,CAACqB;AALX,aAAP;AAOD;AAhnBM;AAAA;AAAA,iBAinBPqE,sBAAazJ,IAAbyJ,EAAmB3C,KAAnB2C,EAA0B;AACxB,gBAAM3H,KAAK,GAAG,KAAKA,KAAnB;AACA,gBAAM2I,aAAa,GAAG3I,KAAK,CAACsF,OAANtF,CAAc9B,IAAd8B,CAAtB;;AACA,gBAAI2I,aAAa,GAAG,CAAC,CAArB,EAAwB;AACtB;AACA;AACAhL,uEAAOO,IAAI,CAACH,GAALG,KAAa,IAApBP,EAA0B,6BAA1BA;AACAqC,mBAAK,CAAC4I,MAAN5I,CAAagF,KAAbhF,EAAoB,CAApBA,EAAuBA,KAAK,CAAC4I,MAAN5I,CAAa2I,aAAb3I,EAA4B,CAA5BA,EAA+B,CAA/BA,CAAvBA;AAJF,mBAMK;AACHrC,uEAAO,CAACO,IAAI,CAACH,GAAbJ,EAAkB,aAAlBA,EADG,CAEH;AACA;;AACAO,kBAAI,CAACH,GAALG,GAAW,IAAXA,CAJG,CAKH;;AACA8B,mBAAK,CAAC4I,MAAN5I,CAAagF,KAAbhF,EAAoB,CAApBA,EAAuB9B,IAAvB8B;AACD;AACF;AAloBM;AAAA;AAAA,iBAmoBPgD,oBAAW9E,IAAX8E,EAAiB;AACfrF,qEAAOO,IAAI,CAACf,KAALe,KAAerB,mBAAfqB,IAAsCA,IAAI,CAACf,KAALe,KAAepB,oBAA5Da,EAAkF,0CAAlFA;AACA,gBAAMqC,KAAK,GAAG,KAAKA,KAAnB;AACA,gBAAMgF,KAAK,GAAGhF,KAAK,CAACsF,OAANtF,CAAc9B,IAAd8B,CAAd;AACArC,qEAAOqH,KAAK,GAAG,CAAC,CAAhBrH,EAAmB,gCAAnBA;;AACA,gBAAIqH,KAAK,IAAI,CAAb,EAAgB;AACdhF,mBAAK,CAAC4I,MAAN5I,CAAagF,KAAbhF,EAAoB,CAApBA;AACD;AACF;AA3oBM;AAAA;AAAA,iBA4oBP8H,qBAAY5J,IAAZ4J,EAAkB;AAChB5J,gBAAI,CAACR,QAALQ;;AACA,iBAAK8E,UAAL,CAAgB9E,IAAhB;AACD;AACD;AACF;AACA;;AAlpBS;AAAA;AAAA,iBAmpBPwK,iBAAQG,UAARH,EAAoB;AAClB;AACA;AACA;AACA,gBAAI,KAAK3I,SAAT,EAAoB;AAClB;AACD;;AACD,gBAAMC,KAAK,GAAG,KAAKA,KAAnB;AACA,gBAAM8I,eAAe,GAAG9I,KAAK,CAACsF,OAANtF,CAAc6I,UAAd7I,CAAxB;;AACA,iBAAK,IAAIsH,CAAC,GAAGtH,KAAK,CAACvB,MAANuB,GAAe,CAA5B,EAA+BsH,CAAC,IAAI,CAApC,EAAuCA,CAAC,EAAxC,EAA4C;AAC1C,kBAAMpJ,IAAI,GAAG8B,KAAK,CAACsH,CAAD,CAAlB;AACA;AACN;AACA;AACA;AACA;AACA;AACA;AACA;;AACM,kBAAM/J,OAAO,GAAGW,IAAI,CAACX,OAArB;;AACA,kBAAIA,OAAJ,EAAa;AACX,oBAAI+J,CAAC,GAAGwB,eAAR,EAAyB;AACvB;AACA;AACAjH,yEAAUtE,OAAVsE,EAAmBC,iDAAnBD;AACA,uBAAKiG,WAAL,CAAiB5J,IAAjB;AAJF,uBAMK,IAAIoJ,CAAC,GAAGwB,eAAR,EAAyB;AAC5B;AACA;AACAC,yEAAcxL,OAAdwL,EAAuB,IAAvBA;AACD;AACF;AACF;AACF;AArrBM;AAAA;AAAA,iBAsrBPxH,oBAAW;AACT,mBAAQ,CAAC,CAAC,KAAKlB,YAAP,IACN,CAAC,KAAKP,eADA,IAEN,KAAKH,UAAL,CAAgBlB,MAAhB,KAA2B,CAFrB,IAGN,KAAKmB,gBAHC,IAIN,KAAKsF,aAAL,EAJF;AAKD;AA5rBM;AAAA;AAAA,iBA6rBPzD,mBAAU;AACR,iBAAKU,SAAL,CAAe;AACbQ,yBAAW,EAAE,CAAC,CADD;AAEbC,yBAAW,EAAE,CAFA;AAGbX,kBAAI,EAAE;AACJqB,yBAAS,EAAE,MADP;AAEJ0E,iCAAiB,EAAE;AAFf;AAHO,aAAf,EAOGhK,SAPH;AAQD;AAtsBM;AAAA;AAAA,iBAusBP0D,gBAAOsH,SAAPtH,EAAkB;AAChB,gBAAI,KAAKyG,KAAT,EAAgB;AACd,mBAAKA,KAAL,CAAWc,YAAX,CAAwBD,SAAxB;AACD;AACF;AA3sBM;AAAA;AAAA,iBA4sBPrH,eAAMuH,cAANvH,EAAsBqH,SAAtBrH,EAAiCwH,GAAjCxH,EAAsC;AAAA;;AACpC,gBAAI,KAAKwG,KAAT,EAAgB;AACd,mBAAKvI,gBAAL,GAAwB,KAAxB;AACA,mBAAKuI,KAAL,CAAWiB,QAAX,CAAoB,YAAM;AACxB,uBAAKxJ,gBAAL,GAAwB,IAAxB;AADF,iBAEG;AAAEyJ,+BAAe,EAAE;AAAnB,eAFH,EAFc,CAKd;;AACA,kBAAIC,YAAY,GAAIJ,cAAD,GAAmB,CAAC,KAApB,GAA4B,KAA/C;AACA;AACN;AACA;AACA;AACA;AACA;AACA;AACA;;AACM,kBAAI,CAACA,cAAL,EAAqB;AACnB,qBAAKf,KAAL,CAAWoB,MAAX,CAAkB,gCAAlB;AACAD,4BAAY,IAAIE,8DAAwB,CAAC,CAAD,EAAI,CAAJ,CAAxBA,EAAgC,CAAC,CAAD,EAAI,CAAJ,CAAhCA,EAAwC,CAAC,IAAD,EAAO,IAAP,CAAxCA,EAAsD,CAAC,CAAD,EAAI,CAAJ,CAAtDA,EAA8DR,SAA9DQ,EAAyE,CAAzEA,CAAhBF;AAFF,qBAIK;AACHA,4BAAY,IAAIE,8DAAwB,CAAC,CAAD,EAAI,CAAJ,CAAxBA,EAAgC,CAAC,IAAD,EAAO,IAAP,CAAhCA,EAA8C,CAAC,CAAD,EAAI,CAAJ,CAA9CA,EAAsD,CAAC,CAAD,EAAI,CAAJ,CAAtDA,EAA8DR,SAA9DQ,EAAyE,CAAzEA,CAAhBF;AACD;;AACD,mBAAKnB,KAAL,CAAWsB,WAAX,CAAuBP,cAAc,GAAG,CAAH,GAAO,CAA5C,EAA+CI,YAA/C,EAA6DH,GAA7D;AACD;AACF;AAruBM;AAAA;AAAA,iBAsuBPO,kBAAS;AACP,mBAAQC,uDAAE,MAAFA,EAAU,IAAVA,CAAR;AACD;AAxuBM;AAAA;AAAA,eAyuBD,eAAG;AAAE,mBAAOC,uDAAW,IAAXA,CAAP;AAA0B;AAzuB9B;AAAA;AAAA,eA0uBY,eAAG;AAAE,mBAAO;AAC7B,8BAAgB,CAAC,qBAAD,CADa;AAE7B,sBAAQ,CAAC,aAAD;AAFqB,aAAP;AAGpB;AA7uBG;;AAAA;AAAA,SAAT;;AA+uBAxK,SAAG,CAACyK,KAAJzK,GAAYD,MAAZC;;AAEA,UAAM0K,OAAO,GAAG,SAAVA,OAAU,CAACjJ,EAAD,EAAKkJ,eAAL,EAAsB9M,SAAtB,EAAiC+B,cAAjC,EAAiDgL,eAAjD,EAAqE;AACnF,YAAMjM,GAAG,GAAG8C,EAAE,CAACC,OAAHD,CAAW,SAAXA,CAAZ;;AACA,YAAI9C,GAAJ,EAAS;AACP,cAAIgM,eAAe,KAAK,SAAxB,EAAmC;AACjC,gBAAI9M,SAAS,KAAKe,SAAlB,EAA6B;AAC3B,qBAAOD,GAAG,CAACiE,IAAJjE,CAASd,SAATc,EAAoBiB,cAApBjB,EAAoC;AAAE0H,0BAAU,EAAE,IAAd;AAAoBf,gCAAgB,EAAEsF;AAAtC,eAApCjM,CAAP;AACD;AAHH,iBAKK,IAAIgM,eAAe,KAAK,MAAxB,EAAgC;AACnC,gBAAI9M,SAAS,KAAKe,SAAlB,EAA6B;AAC3B,qBAAOD,GAAG,CAACyC,OAAJzC,CAAYd,SAAZc,EAAuBiB,cAAvBjB,EAAuC;AAAE0H,0BAAU,EAAE,IAAd;AAAoBf,gCAAgB,EAAEsF;AAAtC,eAAvCjM,CAAP;AACD;AAHE,iBAKA,IAAIgM,eAAe,KAAK,MAAxB,EAAgC;AACnC,mBAAOhM,GAAG,CAAC2E,GAAJ3E,CAAQ;AAAE0H,wBAAU,EAAE,IAAd;AAAoBf,8BAAgB,EAAEsF;AAAtC,aAARjM,CAAP;AACD;AACF;;AACD,eAAO2F,OAAO,CAACC,OAARD,CAAgB,KAAhBA,CAAP;AAjBF;;AAoBA,UAAMuG,OAAO;AACXjN,yBAAYqC,OAAZrC,EAAqB;AAAA;;AAAA;;AACnBsC,iEAAiB,IAAjBA,EAAuBD,OAAvBC;AACA;AACJ;AACA;;AACI,eAAKyK,eAAL,GAAuB,SAAvB;;AACA,eAAKG,OAAL,GAAe,YAAM;AACnB,mBAAOJ,OAAO,CAAC,OAAKjJ,EAAN,EAAU,OAAKkJ,eAAf,EAAgC,OAAK9M,SAArC,EAAgD,OAAK+B,cAArD,EAAqE,OAAKgL,eAA1E,CAAd;AADF;AAGD;;AAVU;AAAA;AAAA,iBAWXN,kBAAS;AACP,mBAAQC,uDAAEQ,iDAAFR,EAAQ;AAAEO,qBAAO,EAAE,KAAKA;AAAhB,aAARP,CAAR;AACD;AAbU;AAAA;AAAA,eAcL,eAAG;AAAE,mBAAOC,uDAAW,IAAXA,CAAP;AAA0B;AAd1B;;AAAA;AAAA,SAAb;;;;","names":["VIEW_STATE_NEW","VIEW_STATE_ATTACHED","VIEW_STATE_DESTROYED","ViewController","constructor","component","params","state","init","container","_this","element","attachComponent","delegate","_destroy","assert","removeViewFromDom","parentElement","remove","nav","undefined","matches","view","id","currentParams","keysA","Object","keys","keysB","length","key","convertToView","page","convertToViews","pages","map","componentProps","filter","v","navCss","Nav","hostRef","registerInstance","ionNavWillLoad","createEvent","ionNavWillChange","ionNavDidChange","transInstr","animationEnabled","useRouter","isTransitioning","destroyed","views","animated","swipeGestureChanged","gesture","enable","swipeGesture","rootChanged","root","setRoot","rootParams","componentWillLoad","document","querySelector","el","closest","mode","getIonMode","config","emit","componentDidLoad","_this2","__webpack_require__","createSwipeBackGesture","canStart","bind","onStart","onMove","onEnd","disconnectedCallback","lifecycle","LIFECYCLE_WILL_UNLOAD","destroy","push","opts","done","queueTrns","insertStart","insertViews","insert","insertIndex","insertPages","insertComponents","pop","removeStart","removeCount","popTo","indexOrViewCtrl","tiConfig","removeView","popToRoot","removeIndex","startIndex","setPages","setRouteId","direction","animation","active","getActiveSync","Promise","resolve","changed","promise","r","finish","commonOpts","updateURL","viewIsReady","enteringEl","mark","p","markVisible","viewController","find","assign","animationBuilder","getRouteId","_this3","tagName","getActive","getByIndex","index","canGoBack","canGoBackSync","getPrevious","getPreviousSync","getLength","indexOf","ti","_this4","skipIfBusy","reject","router","canTransition","nextTrns","success","result","fireError","hasCompleted","requiresTransition","enteringView","leavingView","navChanged","failed","rejectReason","shift","runTransition","_this5","prepareTI","getEnteringView","Error","postViewInit","enteringRequiresTransition","leavingRequiresTransition","isBackDirection","transition","viewsLength","viewControllers","removeEnd","i","destroyQueue","finalBalance","console","warn","insertViewAt","LIFECYCLE_WILL_LEAVE","LIFECYCLE_DID_LEAVE","destroyView","progressCallback","progressAnimation","ani","_this6","sbAni","leavingEl","animationOpts","showGoBack","baseEl","transitionFinish","cleanupView","cleanup","existingIndex","splice","activeView","activeViewIndex","setPageHidden","stepValue","progressStep","shouldComplete","dur","onFinish","oneTimeCallback","newStepValue","easing","getTimeGivenProgression","progressEnd","render","h","getElement","style","navLink","routerDirection","routerAnimation","NavLink","onClick","Host"],"sources":["webpack:///node_modules/@ionic/core/dist/esm/ion-nav_2.entry.js"],"sourcesContent":["import { r as registerInstance, e as createEvent, h, i as getElement, H as Host } from './index-7a8b7a1c.js';\nimport { b as getIonMode, c as config } from './ionic-global-63a97a32.js';\nimport { g as getTimeGivenProgression } from './cubic-bezier-eea9a7a9.js';\nimport { l as assert } from './helpers-dd7e4b7b.js';\nimport { l as lifecycle, t as transition, s as setPageHidden, d as LIFECYCLE_WILL_UNLOAD, b as LIFECYCLE_WILL_LEAVE, c as LIFECYCLE_DID_LEAVE } from './index-931440b1.js';\nimport { a as attachComponent } from './framework-delegate-4392cd63.js';\n\nconst VIEW_STATE_NEW = 1;\nconst VIEW_STATE_ATTACHED = 2;\nconst VIEW_STATE_DESTROYED = 3;\nclass ViewController {\n  constructor(component, params) {\n    this.component = component;\n    this.params = params;\n    this.state = VIEW_STATE_NEW;\n  }\n  async init(container) {\n    this.state = VIEW_STATE_ATTACHED;\n    if (!this.element) {\n      const component = this.component;\n      this.element = await attachComponent(this.delegate, container, component, ['ion-page', 'ion-page-invisible'], this.params);\n    }\n  }\n  /**\n   * DOM WRITE\n   */\n  _destroy() {\n    assert(this.state !== VIEW_STATE_DESTROYED, 'view state must be ATTACHED');\n    const element = this.element;\n    if (element) {\n      if (this.delegate) {\n        this.delegate.removeViewFromDom(element.parentElement, element);\n      }\n      else {\n        element.remove();\n      }\n    }\n    this.nav = undefined;\n    this.state = VIEW_STATE_DESTROYED;\n  }\n}\nconst matches = (view, id, params) => {\n  if (!view) {\n    return false;\n  }\n  if (view.component !== id) {\n    return false;\n  }\n  const currentParams = view.params;\n  if (currentParams === params) {\n    return true;\n  }\n  if (!currentParams && !params) {\n    return true;\n  }\n  if (!currentParams || !params) {\n    return false;\n  }\n  const keysA = Object.keys(currentParams);\n  const keysB = Object.keys(params);\n  if (keysA.length !== keysB.length) {\n    return false;\n  }\n  // Test for A's keys different from B.\n  for (const key of keysA) {\n    if (currentParams[key] !== params[key]) {\n      return false;\n    }\n  }\n  return true;\n};\nconst convertToView = (page, params) => {\n  if (!page) {\n    return null;\n  }\n  if (page instanceof ViewController) {\n    return page;\n  }\n  return new ViewController(page, params);\n};\nconst convertToViews = (pages) => {\n  return pages.map(page => {\n    if (page instanceof ViewController) {\n      return page;\n    }\n    if ('component' in page) {\n      /**\n       * TODO Ionic 6:\n       * Consider switching to just using `undefined` here\n       * as well as on the public interfaces and on\n       * `NavComponentWithProps`. Previously `pages` was\n       * of type `any[]` so TypeScript did not catch this.\n       */\n      return convertToView(page.component, (page.componentProps === null) ? undefined : page.componentProps);\n    }\n    return convertToView(page, undefined);\n  }).filter(v => v !== null);\n};\n\nconst navCss = \":host{left:0;right:0;top:0;bottom:0;position:absolute;contain:layout size style;overflow:hidden;z-index:0}\";\n\nconst Nav = class {\n  constructor(hostRef) {\n    registerInstance(this, hostRef);\n    this.ionNavWillLoad = createEvent(this, \"ionNavWillLoad\", 7);\n    this.ionNavWillChange = createEvent(this, \"ionNavWillChange\", 3);\n    this.ionNavDidChange = createEvent(this, \"ionNavDidChange\", 3);\n    this.transInstr = [];\n    this.animationEnabled = true;\n    this.useRouter = false;\n    this.isTransitioning = false;\n    this.destroyed = false;\n    this.views = [];\n    /**\n     * If `true`, the nav should animate the transition of components.\n     */\n    this.animated = true;\n  }\n  swipeGestureChanged() {\n    if (this.gesture) {\n      this.gesture.enable(this.swipeGesture === true);\n    }\n  }\n  rootChanged() {\n    if (this.root !== undefined) {\n      if (!this.useRouter) {\n        this.setRoot(this.root, this.rootParams);\n      }\n    }\n  }\n  componentWillLoad() {\n    this.useRouter =\n      !!document.querySelector('ion-router') &&\n        !this.el.closest('[no-router]');\n    if (this.swipeGesture === undefined) {\n      const mode = getIonMode(this);\n      this.swipeGesture = config.getBoolean('swipeBackEnabled', mode === 'ios');\n    }\n    this.ionNavWillLoad.emit();\n  }\n  async componentDidLoad() {\n    this.rootChanged();\n    this.gesture = (await import('./swipe-back-fae97365.js')).createSwipeBackGesture(this.el, this.canStart.bind(this), this.onStart.bind(this), this.onMove.bind(this), this.onEnd.bind(this));\n    this.swipeGestureChanged();\n  }\n  disconnectedCallback() {\n    for (const view of this.views) {\n      lifecycle(view.element, LIFECYCLE_WILL_UNLOAD);\n      view._destroy();\n    }\n    if (this.gesture) {\n      this.gesture.destroy();\n      this.gesture = undefined;\n    }\n    // release swipe back gesture and transition\n    this.transInstr.length = this.views.length = 0;\n    this.destroyed = true;\n  }\n  /**\n   * Push a new component onto the current navigation stack. Pass any additional\n   * information along as an object. This additional information is accessible\n   * through NavParams.\n   *\n   * @param component The component to push onto the navigation stack.\n   * @param componentProps Any properties of the component.\n   * @param opts The navigation options.\n   * @param done The transition complete function.\n   */\n  push(component, componentProps, opts, done) {\n    return this.queueTrns({\n      insertStart: -1,\n      insertViews: [{ component, componentProps }],\n      opts\n    }, done);\n  }\n  /**\n   * Inserts a component into the navigation stack at the specified index.\n   * This is useful to add a component at any point in the navigation stack.\n   *\n   * @param insertIndex The index to insert the component at in the stack.\n   * @param component The component to insert into the navigation stack.\n   * @param componentProps Any properties of the component.\n   * @param opts The navigation options.\n   * @param done The transition complete function.\n   */\n  insert(insertIndex, component, componentProps, opts, done) {\n    return this.queueTrns({\n      insertStart: insertIndex,\n      insertViews: [{ component, componentProps }],\n      opts\n    }, done);\n  }\n  /**\n   * Inserts an array of components into the navigation stack at the specified index.\n   * The last component in the array will become instantiated as a view, and animate\n   * in to become the active view.\n   *\n   * @param insertIndex The index to insert the components at in the stack.\n   * @param insertComponents The components to insert into the navigation stack.\n   * @param opts The navigation options.\n   * @param done The transition complete function.\n   */\n  insertPages(insertIndex, insertComponents, opts, done) {\n    return this.queueTrns({\n      insertStart: insertIndex,\n      insertViews: insertComponents,\n      opts\n    }, done);\n  }\n  /**\n   * Pop a component off of the navigation stack. Navigates back from the current\n   * component.\n   *\n   * @param opts The navigation options.\n   * @param done The transition complete function.\n   */\n  pop(opts, done) {\n    return this.queueTrns({\n      removeStart: -1,\n      removeCount: 1,\n      opts\n    }, done);\n  }\n  /**\n   * Pop to a specific index in the navigation stack.\n   *\n   * @param indexOrViewCtrl The index or view controller to pop to.\n   * @param opts The navigation options.\n   * @param done The transition complete function.\n   */\n  popTo(indexOrViewCtrl, opts, done) {\n    const tiConfig = {\n      removeStart: -1,\n      removeCount: -1,\n      opts\n    };\n    if (typeof indexOrViewCtrl === 'object' && indexOrViewCtrl.component) {\n      tiConfig.removeView = indexOrViewCtrl;\n      tiConfig.removeStart = 1;\n    }\n    else if (typeof indexOrViewCtrl === 'number') {\n      tiConfig.removeStart = indexOrViewCtrl + 1;\n    }\n    return this.queueTrns(tiConfig, done);\n  }\n  /**\n   * Navigate back to the root of the stack, no matter how far back that is.\n   *\n   * @param opts The navigation options.\n   * @param done The transition complete function.\n   */\n  popToRoot(opts, done) {\n    return this.queueTrns({\n      removeStart: 1,\n      removeCount: -1,\n      opts\n    }, done);\n  }\n  /**\n   * Removes a component from the navigation stack at the specified index.\n   *\n   * @param startIndex The number to begin removal at.\n   * @param removeCount The number of components to remove.\n   * @param opts The navigation options.\n   * @param done The transition complete function.\n   */\n  removeIndex(startIndex, removeCount = 1, opts, done) {\n    return this.queueTrns({\n      removeStart: startIndex,\n      removeCount,\n      opts\n    }, done);\n  }\n  /**\n   * Set the root for the current navigation stack to a component.\n   *\n   * @param component The component to set as the root of the navigation stack.\n   * @param componentProps Any properties of the component.\n   * @param opts The navigation options.\n   * @param done The transition complete function.\n   */\n  setRoot(component, componentProps, opts, done) {\n    return this.setPages([{ component, componentProps }], opts, done);\n  }\n  /**\n   * Set the views of the current navigation stack and navigate to the last view.\n   * By default animations are disabled, but they can be enabled by passing options\n   * to the navigation controller. Navigation parameters can also be passed to the\n   * individual pages in the array.\n   *\n   * @param views The list of views to set as the navigation stack.\n   * @param opts The navigation options.\n   * @param done The transition complete function.\n   */\n  setPages(views, opts, done) {\n    if (opts == null) {\n      opts = {};\n    }\n    // if animation wasn't set to true then default it to NOT animate\n    if (opts.animated !== true) {\n      opts.animated = false;\n    }\n    return this.queueTrns({\n      insertStart: 0,\n      insertViews: views,\n      removeStart: 0,\n      removeCount: -1,\n      opts\n    }, done);\n  }\n  /** @internal */\n  setRouteId(id, params, direction, animation) {\n    const active = this.getActiveSync();\n    if (matches(active, id, params)) {\n      return Promise.resolve({\n        changed: false,\n        element: active.element\n      });\n    }\n    let resolve;\n    const promise = new Promise(r => (resolve = r));\n    let finish;\n    const commonOpts = {\n      updateURL: false,\n      viewIsReady: enteringEl => {\n        let mark;\n        const p = new Promise(r => (mark = r));\n        resolve({\n          changed: true,\n          element: enteringEl,\n          markVisible: async () => {\n            mark();\n            await finish;\n          }\n        });\n        return p;\n      }\n    };\n    if (direction === 'root') {\n      finish = this.setRoot(id, params, commonOpts);\n    }\n    else {\n      const viewController = this.views.find(v => matches(v, id, params));\n      if (viewController) {\n        finish = this.popTo(viewController, Object.assign(Object.assign({}, commonOpts), { direction: 'back', animationBuilder: animation }));\n      }\n      else if (direction === 'forward') {\n        finish = this.push(id, params, Object.assign(Object.assign({}, commonOpts), { animationBuilder: animation }));\n      }\n      else if (direction === 'back') {\n        finish = this.setRoot(id, params, Object.assign(Object.assign({}, commonOpts), { direction: 'back', animated: true, animationBuilder: animation }));\n      }\n    }\n    return promise;\n  }\n  /** @internal */\n  async getRouteId() {\n    const active = this.getActiveSync();\n    return active\n      ? {\n        id: active.element.tagName,\n        params: active.params,\n        element: active.element\n      }\n      : undefined;\n  }\n  /**\n   * Get the active view.\n   */\n  getActive() {\n    return Promise.resolve(this.getActiveSync());\n  }\n  /**\n   * Get the view at the specified index.\n   *\n   * @param index The index of the view.\n   */\n  getByIndex(index) {\n    return Promise.resolve(this.views[index]);\n  }\n  /**\n   * Returns `true` if the current view can go back.\n   *\n   * @param view The view to check.\n   */\n  canGoBack(view) {\n    return Promise.resolve(this.canGoBackSync(view));\n  }\n  /**\n   * Get the previous view.\n   *\n   * @param view The view to get.\n   */\n  getPrevious(view) {\n    return Promise.resolve(this.getPreviousSync(view));\n  }\n  getLength() {\n    return this.views.length;\n  }\n  getActiveSync() {\n    return this.views[this.views.length - 1];\n  }\n  canGoBackSync(view = this.getActiveSync()) {\n    return !!(view && this.getPreviousSync(view));\n  }\n  getPreviousSync(view = this.getActiveSync()) {\n    if (!view) {\n      return undefined;\n    }\n    const views = this.views;\n    const index = views.indexOf(view);\n    return index > 0 ? views[index - 1] : undefined;\n  }\n  // _queueTrns() adds a navigation stack change to the queue and schedules it to run:\n  // 1. _nextTrns(): consumes the next transition in the queue\n  // 2. _viewInit(): initializes enteringView if required\n  // 3. _viewTest(): ensures canLeave/canEnter Returns `true`, so the operation can continue\n  // 4. _postViewInit(): add/remove the views from the navigation stack\n  // 5. _transitionInit(): initializes the visual transition if required and schedules it to run\n  // 6. _viewAttachToDOM(): attaches the enteringView to the DOM\n  // 7. _transitionStart(): called once the transition actually starts, it initializes the Animation underneath.\n  // 8. _transitionFinish(): called once the transition finishes\n  // 9. _cleanup(): syncs the navigation internal state with the DOM. For example it removes the pages from the DOM or hides/show them.\n  async queueTrns(ti, done) {\n    if (this.isTransitioning && ti.opts != null && ti.opts.skipIfBusy) {\n      return Promise.resolve(false);\n    }\n    const promise = new Promise((resolve, reject) => {\n      ti.resolve = resolve;\n      ti.reject = reject;\n    });\n    ti.done = done;\n    /**\n     * If using router, check to see if navigation hooks\n     * will allow us to perform this transition. This\n     * is required in order for hooks to work with\n     * the ion-back-button or swipe to go back.\n     */\n    if (ti.opts && ti.opts.updateURL !== false && this.useRouter) {\n      const router = document.querySelector('ion-router');\n      if (router) {\n        const canTransition = await router.canTransition();\n        if (canTransition === false) {\n          return Promise.resolve(false);\n        }\n        else if (typeof canTransition === 'string') {\n          router.push(canTransition, ti.opts.direction || 'back');\n          return Promise.resolve(false);\n        }\n      }\n    }\n    // Normalize empty\n    if (ti.insertViews && ti.insertViews.length === 0) {\n      ti.insertViews = undefined;\n    }\n    // Enqueue transition instruction\n    this.transInstr.push(ti);\n    // if there isn't a transition already happening\n    // then this will kick off this transition\n    this.nextTrns();\n    return promise;\n  }\n  success(result, ti) {\n    if (this.destroyed) {\n      this.fireError('nav controller was destroyed', ti);\n      return;\n    }\n    if (ti.done) {\n      ti.done(result.hasCompleted, result.requiresTransition, result.enteringView, result.leavingView, result.direction);\n    }\n    ti.resolve(result.hasCompleted);\n    if (ti.opts.updateURL !== false && this.useRouter) {\n      const router = document.querySelector('ion-router');\n      if (router) {\n        const direction = result.direction === 'back' ? 'back' : 'forward';\n        router.navChanged(direction);\n      }\n    }\n  }\n  failed(rejectReason, ti) {\n    if (this.destroyed) {\n      this.fireError('nav controller was destroyed', ti);\n      return;\n    }\n    this.transInstr.length = 0;\n    this.fireError(rejectReason, ti);\n  }\n  fireError(rejectReason, ti) {\n    if (ti.done) {\n      ti.done(false, false, rejectReason);\n    }\n    if (ti.reject && !this.destroyed) {\n      ti.reject(rejectReason);\n    }\n    else {\n      ti.resolve(false);\n    }\n  }\n  nextTrns() {\n    // this is the framework's bread 'n butta function\n    // only one transition is allowed at any given time\n    if (this.isTransitioning) {\n      return false;\n    }\n    // there is no transition happening right now\n    // get the next instruction\n    const ti = this.transInstr.shift();\n    if (!ti) {\n      return false;\n    }\n    this.runTransition(ti);\n    return true;\n  }\n  async runTransition(ti) {\n    try {\n      // set that this nav is actively transitioning\n      this.ionNavWillChange.emit();\n      this.isTransitioning = true;\n      this.prepareTI(ti);\n      const leavingView = this.getActiveSync();\n      const enteringView = this.getEnteringView(ti, leavingView);\n      if (!leavingView && !enteringView) {\n        throw new Error('no views in the stack to be removed');\n      }\n      if (enteringView && enteringView.state === VIEW_STATE_NEW) {\n        await enteringView.init(this.el);\n      }\n      this.postViewInit(enteringView, leavingView, ti);\n      // Needs transition?\n      const requiresTransition = (ti.enteringRequiresTransition || ti.leavingRequiresTransition) &&\n        enteringView !== leavingView;\n      if (requiresTransition && ti.opts && leavingView) {\n        const isBackDirection = ti.opts.direction === 'back';\n        /**\n         * If heading back, use the entering page's animation\n         * unless otherwise specified by the developer.\n         */\n        if (isBackDirection) {\n          ti.opts.animationBuilder = ti.opts.animationBuilder || (enteringView && enteringView.animationBuilder);\n        }\n        leavingView.animationBuilder = ti.opts.animationBuilder;\n      }\n      const result = requiresTransition\n        ? await this.transition(enteringView, leavingView, ti)\n        : {\n          // transition is not required, so we are already done!\n          // they're inserting/removing the views somewhere in the middle or\n          // beginning, so visually nothing needs to animate/transition\n          // resolve immediately because there's no animation that's happening\n          hasCompleted: true,\n          requiresTransition: false\n        };\n      this.success(result, ti);\n      this.ionNavDidChange.emit();\n    }\n    catch (rejectReason) {\n      this.failed(rejectReason, ti);\n    }\n    this.isTransitioning = false;\n    this.nextTrns();\n  }\n  prepareTI(ti) {\n    const viewsLength = this.views.length;\n    ti.opts = ti.opts || {};\n    if (ti.opts.delegate === undefined) {\n      ti.opts.delegate = this.delegate;\n    }\n    if (ti.removeView !== undefined) {\n      assert(ti.removeStart !== undefined, 'removeView needs removeStart');\n      assert(ti.removeCount !== undefined, 'removeView needs removeCount');\n      const index = this.views.indexOf(ti.removeView);\n      if (index < 0) {\n        throw new Error('removeView was not found');\n      }\n      ti.removeStart += index;\n    }\n    if (ti.removeStart !== undefined) {\n      if (ti.removeStart < 0) {\n        ti.removeStart = viewsLength - 1;\n      }\n      if (ti.removeCount < 0) {\n        ti.removeCount = viewsLength - ti.removeStart;\n      }\n      ti.leavingRequiresTransition =\n        ti.removeCount > 0 && ti.removeStart + ti.removeCount === viewsLength;\n    }\n    if (ti.insertViews) {\n      // allow -1 to be passed in to auto push it on the end\n      // and clean up the index if it's larger then the size of the stack\n      if (ti.insertStart < 0 || ti.insertStart > viewsLength) {\n        ti.insertStart = viewsLength;\n      }\n      ti.enteringRequiresTransition = ti.insertStart === viewsLength;\n    }\n    const insertViews = ti.insertViews;\n    if (!insertViews) {\n      return;\n    }\n    assert(insertViews.length > 0, 'length can not be zero');\n    const viewControllers = convertToViews(insertViews);\n    if (viewControllers.length === 0) {\n      throw new Error('invalid views to insert');\n    }\n    // Check all the inserted view are correct\n    for (const view of viewControllers) {\n      view.delegate = ti.opts.delegate;\n      const nav = view.nav;\n      if (nav && nav !== this) {\n        throw new Error('inserted view was already inserted');\n      }\n      if (view.state === VIEW_STATE_DESTROYED) {\n        throw new Error('inserted view was already destroyed');\n      }\n    }\n    ti.insertViews = viewControllers;\n  }\n  getEnteringView(ti, leavingView) {\n    const insertViews = ti.insertViews;\n    if (insertViews !== undefined) {\n      // grab the very last view of the views to be inserted\n      // and initialize it as the new entering view\n      return insertViews[insertViews.length - 1];\n    }\n    const removeStart = ti.removeStart;\n    if (removeStart !== undefined) {\n      const views = this.views;\n      const removeEnd = removeStart + ti.removeCount;\n      for (let i = views.length - 1; i >= 0; i--) {\n        const view = views[i];\n        if ((i < removeStart || i >= removeEnd) && view !== leavingView) {\n          return view;\n        }\n      }\n    }\n    return undefined;\n  }\n  postViewInit(enteringView, leavingView, ti) {\n    assert(leavingView || enteringView, 'Both leavingView and enteringView are null');\n    assert(ti.resolve, 'resolve must be valid');\n    assert(ti.reject, 'reject must be valid');\n    const opts = ti.opts;\n    const insertViews = ti.insertViews;\n    const removeStart = ti.removeStart;\n    const removeCount = ti.removeCount;\n    let destroyQueue;\n    // there are views to remove\n    if (removeStart !== undefined && removeCount !== undefined) {\n      assert(removeStart >= 0, 'removeStart can not be negative');\n      assert(removeCount >= 0, 'removeCount can not be negative');\n      destroyQueue = [];\n      for (let i = 0; i < removeCount; i++) {\n        const view = this.views[i + removeStart];\n        if (view && view !== enteringView && view !== leavingView) {\n          destroyQueue.push(view);\n        }\n      }\n      // default the direction to \"back\"\n      opts.direction = opts.direction || 'back';\n    }\n    const finalBalance = this.views.length +\n      (insertViews !== undefined ? insertViews.length : 0) -\n      (removeCount !== undefined ? removeCount : 0);\n    assert(finalBalance >= 0, 'final balance can not be negative');\n    if (finalBalance === 0) {\n      console.warn(`You can't remove all the pages in the navigation stack. nav.pop() is probably called too many times.`, this, this.el);\n      throw new Error('navigation stack needs at least one root page');\n    }\n    // At this point the transition can not be rejected, any throw should be an error\n    // there are views to insert\n    if (insertViews) {\n      // add the views to the\n      let insertIndex = ti.insertStart;\n      for (const view of insertViews) {\n        this.insertViewAt(view, insertIndex);\n        insertIndex++;\n      }\n      if (ti.enteringRequiresTransition) {\n        // default to forward if not already set\n        opts.direction = opts.direction || 'forward';\n      }\n    }\n    // if the views to be removed are in the beginning or middle\n    // and there is not a view that needs to visually transition out\n    // then just destroy them and don't transition anything\n    // batch all of lifecycles together\n    // let's make sure, callbacks are zoned\n    if (destroyQueue && destroyQueue.length > 0) {\n      for (const view of destroyQueue) {\n        lifecycle(view.element, LIFECYCLE_WILL_LEAVE);\n        lifecycle(view.element, LIFECYCLE_DID_LEAVE);\n        lifecycle(view.element, LIFECYCLE_WILL_UNLOAD);\n      }\n      // once all lifecycle events has been delivered, we can safely detroy the views\n      for (const view of destroyQueue) {\n        this.destroyView(view);\n      }\n    }\n  }\n  async transition(enteringView, leavingView, ti) {\n    // we should animate (duration > 0) if the pushed page is not the first one (startup)\n    // or if it is a portal (modal, actionsheet, etc.)\n    const opts = ti.opts;\n    const progressCallback = opts.progressAnimation\n      ? (ani) => this.sbAni = ani\n      : undefined;\n    const mode = getIonMode(this);\n    const enteringEl = enteringView.element;\n    const leavingEl = leavingView && leavingView.element;\n    const animationOpts = Object.assign(Object.assign({ mode, showGoBack: this.canGoBackSync(enteringView), baseEl: this.el, progressCallback, animated: this.animated && config.getBoolean('animated', true), enteringEl,\n      leavingEl }, opts), { animationBuilder: opts.animationBuilder || this.animation || config.get('navAnimation') });\n    const { hasCompleted } = await transition(animationOpts);\n    return this.transitionFinish(hasCompleted, enteringView, leavingView, opts);\n  }\n  transitionFinish(hasCompleted, enteringView, leavingView, opts) {\n    const cleanupView = hasCompleted ? enteringView : leavingView;\n    if (cleanupView) {\n      this.cleanup(cleanupView);\n    }\n    return {\n      hasCompleted,\n      requiresTransition: true,\n      enteringView,\n      leavingView,\n      direction: opts.direction\n    };\n  }\n  insertViewAt(view, index) {\n    const views = this.views;\n    const existingIndex = views.indexOf(view);\n    if (existingIndex > -1) {\n      // this view is already in the stack!!\n      // move it to its new location\n      assert(view.nav === this, 'view is not part of the nav');\n      views.splice(index, 0, views.splice(existingIndex, 1)[0]);\n    }\n    else {\n      assert(!view.nav, 'nav is used');\n      // this is a new view to add to the stack\n      // create the new entering view\n      view.nav = this;\n      // insert the entering view into the correct index in the stack\n      views.splice(index, 0, view);\n    }\n  }\n  removeView(view) {\n    assert(view.state === VIEW_STATE_ATTACHED || view.state === VIEW_STATE_DESTROYED, 'view state should be loaded or destroyed');\n    const views = this.views;\n    const index = views.indexOf(view);\n    assert(index > -1, 'view must be part of the stack');\n    if (index >= 0) {\n      views.splice(index, 1);\n    }\n  }\n  destroyView(view) {\n    view._destroy();\n    this.removeView(view);\n  }\n  /**\n   * DOM WRITE\n   */\n  cleanup(activeView) {\n    // ok, cleanup time!! Destroy all of the views that are\n    // INACTIVE and come after the active view\n    // only do this if the views exist, though\n    if (this.destroyed) {\n      return;\n    }\n    const views = this.views;\n    const activeViewIndex = views.indexOf(activeView);\n    for (let i = views.length - 1; i >= 0; i--) {\n      const view = views[i];\n      /**\n       * When inserting multiple views via insertPages\n       * the last page will be transitioned to, but the\n       * others will not be. As a result, a DOM element\n       * will only be created for the last page inserted.\n       * As a result, it is possible to have views in the\n       * stack that do not have `view.element` yet.\n       */\n      const element = view.element;\n      if (element) {\n        if (i > activeViewIndex) {\n          // this view comes after the active view\n          // let's unload it\n          lifecycle(element, LIFECYCLE_WILL_UNLOAD);\n          this.destroyView(view);\n        }\n        else if (i < activeViewIndex) {\n          // this view comes before the active view\n          // and it is not a portal then ensure it is hidden\n          setPageHidden(element, true);\n        }\n      }\n    }\n  }\n  canStart() {\n    return (!!this.swipeGesture &&\n      !this.isTransitioning &&\n      this.transInstr.length === 0 &&\n      this.animationEnabled &&\n      this.canGoBackSync());\n  }\n  onStart() {\n    this.queueTrns({\n      removeStart: -1,\n      removeCount: 1,\n      opts: {\n        direction: 'back',\n        progressAnimation: true\n      }\n    }, undefined);\n  }\n  onMove(stepValue) {\n    if (this.sbAni) {\n      this.sbAni.progressStep(stepValue);\n    }\n  }\n  onEnd(shouldComplete, stepValue, dur) {\n    if (this.sbAni) {\n      this.animationEnabled = false;\n      this.sbAni.onFinish(() => {\n        this.animationEnabled = true;\n      }, { oneTimeCallback: true });\n      // Account for rounding errors in JS\n      let newStepValue = (shouldComplete) ? -0.001 : 0.001;\n      /**\n       * Animation will be reversed here, so need to\n       * reverse the easing curve as well\n       *\n       * Additionally, we need to account for the time relative\n       * to the new easing curve, as `stepValue` is going to be given\n       * in terms of a linear curve.\n       */\n      if (!shouldComplete) {\n        this.sbAni.easing('cubic-bezier(1, 0, 0.68, 0.28)');\n        newStepValue += getTimeGivenProgression([0, 0], [1, 0], [0.68, 0.28], [1, 1], stepValue)[0];\n      }\n      else {\n        newStepValue += getTimeGivenProgression([0, 0], [0.32, 0.72], [0, 1], [1, 1], stepValue)[0];\n      }\n      this.sbAni.progressEnd(shouldComplete ? 1 : 0, newStepValue, dur);\n    }\n  }\n  render() {\n    return (h(\"slot\", null));\n  }\n  get el() { return getElement(this); }\n  static get watchers() { return {\n    \"swipeGesture\": [\"swipeGestureChanged\"],\n    \"root\": [\"rootChanged\"]\n  }; }\n};\nNav.style = navCss;\n\nconst navLink = (el, routerDirection, component, componentProps, routerAnimation) => {\n  const nav = el.closest('ion-nav');\n  if (nav) {\n    if (routerDirection === 'forward') {\n      if (component !== undefined) {\n        return nav.push(component, componentProps, { skipIfBusy: true, animationBuilder: routerAnimation });\n      }\n    }\n    else if (routerDirection === 'root') {\n      if (component !== undefined) {\n        return nav.setRoot(component, componentProps, { skipIfBusy: true, animationBuilder: routerAnimation });\n      }\n    }\n    else if (routerDirection === 'back') {\n      return nav.pop({ skipIfBusy: true, animationBuilder: routerAnimation });\n    }\n  }\n  return Promise.resolve(false);\n};\n\nconst NavLink = class {\n  constructor(hostRef) {\n    registerInstance(this, hostRef);\n    /**\n     * The transition direction when navigating to another page.\n     */\n    this.routerDirection = 'forward';\n    this.onClick = () => {\n      return navLink(this.el, this.routerDirection, this.component, this.componentProps, this.routerAnimation);\n    };\n  }\n  render() {\n    return (h(Host, { onClick: this.onClick }));\n  }\n  get el() { return getElement(this); }\n};\n\nexport { Nav as ion_nav, NavLink as ion_nav_link };\n"]}