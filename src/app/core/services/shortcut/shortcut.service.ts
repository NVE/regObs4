import { Injectable } from '@angular/core';
import { Platform } from '@ionic/angular';
import { LoggingService } from '../../../modules/shared/services/logging/logging.service';
import { TranslateService } from '@ngx-translate/core';
import { LogLevel } from '../../../modules/shared/services/logging/log-level.model';
import { GeoHelperService } from '../../../modules/shared/services/geo-helper/geo-helper.service';
import { GeoHazard } from '../../models/geo-hazard.enum';

const DEBUG_TAG = 'ShortcutService';
const FLAG_ACTIVITY_CLEAR_TOP = 67108864;

@Injectable({
  providedIn: 'root'
})

export class ShortcutService {

  constructor(
    private platform: Platform,
    private loggingService: LoggingService,
    private translateService: TranslateService,
    private geoHelperService: GeoHelperService,
  ) {

  }

  init() {
    const w = (<any>window);
    if (this.platform.is('cordova') && this.platform.is('android') && w.plugins && w.plugins.Shortcuts) {
      this.initAndroidShortcusts();
      return;
    }
    this.loggingService.debug('Dynamic shortcuts not supported', DEBUG_TAG);
  }

  private getImage(geoHazard: GeoHazard) {
    switch (geoHazard) {
      case GeoHazard.Snow:
        return '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';
      case GeoHazard.Dirt:
        return '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';
      case GeoHazard.Ice:
        return 'iVBORw0KGgoAAAANSUhEUgAAADAAAAAwCAYAAABXAvmHAAAAAXNSR0IArs4c6QAAAARnQU1BAACxjwv8YQUAAAAJcEhZcwAADs4AAA7OAc5fxfcAAAAYdEVYdFNvZnR3YXJlAHBhaW50Lm5ldCA0LjEuNv1OCegAAAtLSURBVGhDrVppcFRVFhZkERWdUZxBBAEBwYygyPzQGQWnmHGpmnFmLJaxxoGB0STdIZQIBPdGq6wp1JQTSLoTEpL0FtLZ2MHIEtYEWUORnewLWcjaSbo76XTOfOfxQvXtvO50gl/VSXLeu/e+7957tvte7iGiO+IPNBrN6JAdSVPUkabFwVGGLaooU8a6aHPBh3HJ7Zvikvs27rI4Pojd3azWmS6oogyxwVrj2mCtfmFohPEheYi7gjtfibOgDIEgXeITwVpDuEpnvBKWkGJNPHaWTl4vpuuVtXSjrpHK6puoFFJc20BXy6ro4MVrtP3AMVofk9So1hpPqLSGwI0GwwPycCOCO1+Js6B4gUaTNQYr+ZY62ljxkT7N+cPlPOrotpOzr49c/f3oqow+l4t6nE6qa2mj2MzTPBE7duYgdm86bo+Shx8W0E/kLCgKCNmhfxQr/t3m+FSb5cyF/tbObjQdGXh3og6doPXRSZVqnfGd1QkJ98mP8RsYRuQsKB6AufxKpTUe+jrlYG9xbb20oneLLruDjucWEPymI1hr2qhJSRknP84vYAiRs6C4QVp5rfHI56a9rqqmFtz++cBm91NxOX0Qt9sWssO4enlKyr3yY4cEuoucBUXGck3KOHbWr5L391Y03sIt/1Dc3kMNNqes+Qbv5jHsBCKWA8/6B0c3+fE+ga4iZ0GRoYrSv70lIa2rpK4Bl/3HiwfLKDyvmfp8OLY7ehEE0rMvE3a6EEFirvx4n0A3kbOgAOrIhMkhOlNV2rlL/f7YfF6bg77MbaJmRx89bimiTy430rUWO2262ODXbvAztqUd7keg2KrJyhojkfABdBE5uysaotFIPt98Ykh3tli7cEkZjr5+agFhRk6TjaalFNOas3X0SFIh/TGzgmanldDvDpVTbXcv8V609vSR08eu5FffJCTCpiCdMUDm6RVoLoigcKJSRRlzM6/kQfWOMKzusqxq6uh1wVyIoota6WFzIY1OzKMxifk0ObmIrrfZJfK3HE5auK+ULjfbb3dWQLejh8L3ZBLMSCfz9Ao0F0RQAiMTF6MUsFptDqgibGCaXN5OJR14WH4zTYG55MJUGL2ufslk7gV53o3z2JUB/A9tn7AUUzauXbplo6z6LnKivScOIWuv05lbNsRaHpG5KgJNBREUrm3ij55Fhh1s+/Ww52f3ltKc9BJadbqWxurzSVvYgpB4+z6b1WO7C6WJ9MgXu50u+s2eGzQVk3rjx0r6JUwsJOcmdeG6J2putcgRyfiWzFURaCqIoKDznpPXi6hfwV75SmVnLwWdq6P7DPk0KiGPlv5QIREfADvxZ1ca76xwZl0nPWAsoFEwLd6xXSWtktkNHh3OjGey7yECfiFzVQSaCiIo63SmvLyqOvw5GLxqmy/W0+/hnOMNBTTRVED3g9yrRyroKIh24v5AFKru6qX4kjaanlpCj2LVJ6AdT+Avx6rIUNp+Z4c8wWUGFjEef3qtk3BPEEHhkrj0ZiP+HAyOJO+erqGPLjVQ4o02+rGui/ZUddBbx6tA8ja5B0H0OTjsov1lUkTagranGrrpQI2Vthe0kBrm8x3yhE3BRBkpZy/yBNJ91UhoJoigbIpPcVY0eM+8/GBevYH1499WmASbBhO+B2bFpvUCJpDT1C2sNFuaHT+8rT7jwIVcQj44oI6MfFDmOwhoJoigbIyz2MsamvDnYPBzC9sdVAPzYOdkMJkriESh5+vpF3IYZed+HFHn2+vNUlumy33bsIOl1h4pN3ibw56cK4Q8tC8wJuZ+me8goJkggrJ+Z1JtEapOJVTAgWchQS1AJGK7X3OmllZk1UhhkyONvrSNJiEKsZmFwXTY9tmcNvxUj3bV9BJ8Z27GDVqNfu09yiaUePwcBUcakn1lZDQTRFBQVJ26WFKhGCV41dIqOqQQylGIV3s8fvPqc4jl++zEnyIKcc641mqXsjHvCJvVM5gk+8+lZpvXHfhv6iGXSmf4XuaqCDQTRFCQhSMysI1KNRAnKwsm8Mrhcime8wTexWTcbdozjF6FeXGG5ok+hKj1z1M19BMSmlvkvYNOnBMQRHrVkcYgmasi0FQQQUHnZd+kHXH1OG/XOe4og/2yo3IJEY8oNA4ru7fKeme3bqE2Yj8Izr4pOSuDf72eWUkBWH2OPvNgQm+fqJb8wRNXy6sJJtzNLwBkropAU0EEhTujEm1sardCFcGU2CkdWF2O9ewPxSgrGFzYvYlMy6YywZhPRvjDQEnNZjcJE7+IMoKdv8neN8hEWecQylXwUBUpmgoiKP8Jj30EtXl2Bmp0X0gFqQjUOJyFOcEFZ9fBgYtoPHblYVOhlOTiEFrZlJj05zArDgLewOazLf0IIpDvLMxAc0E8lVHqSP22j/XpfVwhegOv2MAKW8o7JJ9IgFn9GlVoECbzJ5gN7xCfFRhsSp6r7o6KhmbYv6UrSJcwQ+bpFWjuydlNAYJ0hudCY8ztOUVluDQ0GuxOOlBtlUyLywV2Ys7a5rJ26kSS8wepZy9xBtaHRhweL5HwATQXOQuKDCSTXbrDWWTv8b7tSth4oZ4yKju8hkkltHZ20aZ4izVYa3oTbIZ8V4QuImdBkRGyU//05l0WW21zKy77D7Z3X6WCEnB05dW/GhhjniQ/3ifQReQsKDI2hIdPUKOoYmf29ebtbtHY1kFhiakUuD1eExAQMG727NnjB4T1RYsWjQUd4W0FuomcBWUAcGZVlOntDahOKxqbcevnBx+aLGcukCpSX/rK31e88OSTTz4FzBkQTGIWrs2cM2fOE1OnTuVTmvTuCF1FzoLihrVxeyciredE7D/q19uJ4YJzzUf6NNfKj7eqZs6c+bQv4QlNmzZtCmiNRleRs6B4AIntzx/GJtu9HXJGCjZL88nz/e+F78z87eKlC5VIK8m8efMeRXeRs6B4gF/5wRfitIhIth7veWG4uHSjkkJ1pvZlYV+smTFjxlwlskrCZoXuImdBUYBKa34qRGes9DcvDAV+3/Rl0j567/udRwKefz5Aiag3GdEENBrNGOSFjzftsjhutrSj2cjBjsuRDdm+bMnf3nlZiaQvgQk9jmFEzoLiBfymGmeFM9sPHOu/G1MqqqmnD2N3ty3b9NkqJYK+hFefQyuGETkLig+8H22avz4myZpdWKr42mUocG211bzPteYbrWn+iy/OVyLpSzCBx0BjFIYSOQvKEOBvXJ+ZMroqm4aXG3pxvkg6eR7HxcTyN1a9/5oSQV8C8lPxeKnMxnAiZ0EZAurIlAdVWlPqV7v3u6w27+86PZGPMIzTVt/ysK3vKxH0JZzIlixZcueMgOFEzoLiB+ALz6q1hmrzyZx+/sg3FNhnvs34wfXvbZHxw4k6nLzmzp3LyUv4eoMhRc6C4idUUYmvYUXrzxeX+fQHh9NJhhPZ/YER8bl/WLFqsRJRJcGqP+VePrgDw4qcBcVPoC0OPsagsPgUh7daiad1NLeA1kebe5dv1qydgeVUIuspbDKweT4XKJbWGFbkLCjDwNq4uIlcsX5u3utS+hjCHwY/NaT3rvo6ImKobDtr1qzZaDMdZvMwhvZ5JsDQImdBGSaCdLtn4CB+Lv7oGbK5HUE7um1s931rv9WZF7788gIl0ixcgU6fPn0yNmcihvPrSyWGFzkLygiAg/gzodHmOv6qw/7A8Z4r2OAdiSVLV65+1ZO0XCpPlVd7UL0/FNz5SpwFZQTgz6Nqrelfap2xjb8tsNOGaE01K7d8+VcmyjbNq8xOuWDBAv4/Cb+/CSvBna/EWVBGCD6Mq6KMoeuiTc7QGHNu4A79S/Ktnx3ufCXOgnIXCIyJGcv/OhC8Q/86xhrRP3L4A3e+RHTP/wHU3pHwzL2uGQAAAABJRU5ErkJggg==';
      case GeoHazard.Water:
        return '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';
    }
  }

  private async getShortcuts() {
    const geoHazards = this.geoHelperService.getAllGeoHazards();
    const geoHazardsKeys = this.geoHelperService.getTranslationKeys(geoHazards);
    const translations = await this.translateService.get([
      'ADD_MENU.NEW_OBSERVATION',
      'MAP_ITEM_BAR.OBSERVATION',
      ...geoHazardsKeys
    ]).toPromise();

    const getLongLabelTranslation = (geoHazardName: string) =>
      `${translations['ADD_MENU.NEW_OBSERVATION']} ${geoHazardName.toLowerCase()} ${translations['MAP_ITEM_BAR.OBSERVATION']}`;
    const getShortLabel = (geoHazardName: string) => `+ ${geoHazardName}`;

    return geoHazards.map((geoHazard) => ({
      id: `regobs_shortcut_new_registration_${geoHazard}`,
      url: `regobs://app/registration/new/${geoHazard}`,
      shortLabel: getShortLabel(translations[this.geoHelperService.getTranslationKey(geoHazard)]),
      longLabel: getLongLabelTranslation(translations[this.geoHelperService.getTranslationKey(geoHazard)]),
      iconBitmap: this.getImage(geoHazard),
    }));
  }


  private initAndroidShortcusts() {
    this.loggingService.debug('Initializing dynamic shortcuts for Android', DEBUG_TAG);
    const w = (<any>window);
    w.plugins.Shortcuts.supportsDynamic(async (supported) => {
      if (!supported) {
        this.loggingService.debug('Dynamic shortcuts not supported', DEBUG_TAG);
        return;
      }
      const shortcuts = await this.getShortcuts();
      const shortcutsFull = shortcuts.map((s) => ({
        ...s,
        intent: {
          action: 'android.intent.action.VIEW',
          flags: FLAG_ACTIVITY_CLEAR_TOP, // FLAG_ACTIVITY_CLEAR_TOP
          data: s.url, // Must be a well-formed URI
        }
      }));
      this.loggingService.debug('Adding dynamic shortcuts:', DEBUG_TAG, shortcutsFull);
      w.plugins.Shortcuts.setDynamic(shortcutsFull, () => {
        this.loggingService.debug('Shortcuts were applied successfully', DEBUG_TAG);
      }, (error) => {
        this.loggingService.log('Error setting dynamic shortcuts!', error, LogLevel.Warning, DEBUG_TAG);
      });
    }, (error) => {
      this.loggingService.log('Error when checking support for dynamic shortcuts!', error, LogLevel.Warning, DEBUG_TAG);
    });
  }
}
